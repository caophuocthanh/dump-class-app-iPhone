//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class FBImageDescriptorDebugLayer, NSArray, NSMutableArray, NSOperationQueue, NSString, UIColor;

@interface FBImageSequenceStabilizer : NSObject
{
    vector_b604d65c _lastFrameFeatures;
    struct vector<Eigen::Matrix<double, 3, 3, 1, 3, 3>, std::__1::allocator<Eigen::Matrix<double, 3, 3, 1, 3, 3>>> _transformList;
    unsigned int _alignedImageCount;
    struct vector<CGSize, std::__1::allocator<CGSize>> _imageSize;
    struct vector<bool, std::__1::allocator<bool>> _matchStatus;
    struct vector<Eigen::Matrix<double, 3, 3, 1, 3, 3>, std::__1::allocator<Eigen::Matrix<double, 3, 3, 1, 3, 3>>> _relativeTransform;
    BOOL _allowUpscaling;
    NSOperationQueue *_stabilizerQueue;
    NSArray *_inputImages;
    NSString *_parameters;
    NSMutableArray *_outputImages;
    CDUnknownBlockType _completionBlock;
    UIColor *_backgroundColor;
    unsigned long _minimumMatchCount;
    float _maxTranslate;
    FBImageDescriptorDebugLayer *_debugLayer;
    struct CGSize _outputSize;
    double _modelMatchingThreshold;
}

+ (id)createWithImageSequence:(id)arg1 outputSize:(struct CGSize)arg2 backgroundColor:(id)arg3 parameters:(id)arg4 dispatchQueue:(id)arg5 completionBlock:(CDUnknownBlockType)arg6;
@property(retain, nonatomic) FBImageDescriptorDebugLayer *debugLayer; // @synthesize debugLayer=_debugLayer;
@property(nonatomic) double modelMatchingThreshold; // @synthesize modelMatchingThreshold=_modelMatchingThreshold;
@property(nonatomic) float maxTranslate; // @synthesize maxTranslate=_maxTranslate;
@property(nonatomic) BOOL allowUpscaling; // @synthesize allowUpscaling=_allowUpscaling;
@property(nonatomic) unsigned long minimumMatchCount; // @synthesize minimumMatchCount=_minimumMatchCount;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) struct CGSize outputSize; // @synthesize outputSize=_outputSize;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(retain, nonatomic) NSMutableArray *outputImages; // @synthesize outputImages=_outputImages;
@property(copy, nonatomic) NSString *parameters; // @synthesize parameters=_parameters;
@property(copy, nonatomic) NSArray *inputImages; // @synthesize inputImages=_inputImages;
@property(retain, nonatomic) NSOperationQueue *stabilizerQueue; // @synthesize stabilizerQueue=_stabilizerQueue;
- (id).cxx_construct;
- (void).cxx_destruct;
- (vector_b604d65c)filterDescriptors:(const vector_b604d65c *)arg1 gridSize:(struct CGSize)arg2 limit:(unsigned int)arg3;
- (void)logMatrix:(const Matrix_8a748f46 *)arg1 message:(id)arg2;
- (void)scheduleCompletionCallback;
- (void)scheduleOutputImageRendering;
- (void)scheduleCropComputation;
- (void)scheduleFeatureAndTransformComputation;
- (void)startStablization;
- (void)addOperationBlock:(CDUnknownBlockType)arg1;
- (id)initWithImageSequence:(id)arg1 outputSize:(struct CGSize)arg2 backgroundColor:(id)arg3 parameters:(id)arg4 dispatchQueue:(id)arg5 completionBlock:(CDUnknownBlockType)arg6;
- (void)dealloc;
- (void)cancel;

@end

