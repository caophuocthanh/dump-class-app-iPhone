//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "FBActivitySuggestionsListener.h"
#import "FBActivityTagListener.h"
#import "FBAvatarPickerControllerListener.h"
#import "FBComposerActivityTaggingListener.h"
#import "FBComposerAlbumListener.h"
#import "FBComposerAudienceSelectionListener.h"
#import "FBComposerAudienceSuggestionListener.h"
#import "FBComposerContentSuggestionsListener.h"
#import "FBComposerDataFetchListener.h"
#import "FBComposerDefaultAudienceAndAvailablePrivacyCacheListener.h"
#import "FBComposerDestinationListener.h"
#import "FBComposerFeedTopicsListener.h"
#import "FBComposerGroupCommerceListener.h"
#import "FBComposerHashtagListener.h"
#import "FBComposerLinkShareListener.h"
#import "FBComposerLoopsListener.h"
#import "FBComposerMagicStoryAttachmentListener.h"
#import "FBComposerMediaAttachmentsListener.h"
#import "FBComposerPostContentTypeListener.h"
#import "FBComposerPrivacySettingFetchListener.h"
#import "FBComposerQAndAListener.h"
#import "FBComposerRatingsListener.h"
#import "FBComposerRedSpaceToggleListener.h"
#import "FBComposerRemoteMediaAttachmentsListener.h"
#import "FBComposerTargetingListener.h"
#import "FBCompositionLifeEventChangeListener.h"
#import "FBCompositionRelationshipChangeListener.h"
#import "FBCompositionTextChangeListener.h"
#import "FBDatePickerControllerListener.h"
#import "FBLocationPickerControllerListener.h"
#import "FBMentionsListener.h"
#import "FBPlatformShareDataLoadListener.h"
#import "FBStickerAttachmentListener.h"

@class FBComposerCompositionState, FBComposerCompositionStateCentralUpdater, FBExceptionHandler, FBUserSession, NSMutableArray, NSString;

@interface FBComposerDataUpdateManager : NSObject <FBActivitySuggestionsListener, FBActivityTagListener, FBAvatarPickerControllerListener, FBComposerActivityTaggingListener, FBDatePickerControllerListener, FBComposerAlbumListener, FBComposerDataFetchListener, FBComposerDefaultAudienceAndAvailablePrivacyCacheListener, FBComposerDestinationListener, FBComposerHashtagListener, FBComposerPostContentTypeListener, FBComposerAudienceSelectionListener, FBComposerLinkShareListener, FBComposerMagicStoryAttachmentListener, FBComposerMediaAttachmentsListener, FBComposerQAndAListener, FBComposerRatingsListener, FBCompositionTextChangeListener, FBCompositionLifeEventChangeListener, FBCompositionRelationshipChangeListener, FBLocationPickerControllerListener, FBMentionsListener, FBPlatformShareDataLoadListener, FBComposerGroupCommerceListener, FBComposerRemoteMediaAttachmentsListener, FBComposerPrivacySettingFetchListener, FBComposerLoopsListener, FBComposerAudienceSuggestionListener, FBComposerContentSuggestionsListener, FBStickerAttachmentListener, FBComposerTargetingListener, FBComposerFeedTopicsListener, FBComposerRedSpaceToggleListener>
{
    BOOL _isBootstrapped;
    FBComposerCompositionState *_compositionState;
    FBComposerCompositionStateCentralUpdater *_compositionStateCentralUpdater;
    FBExceptionHandler *_exceptionHandler;
    BOOL _isPrivacyAvailableForSelection;
    NSMutableArray *_recentUpdates;
    FBUserSession *_userSession;
}

- (void).cxx_destruct;
- (void)userChangedRedSpacePostToState:(BOOL)arg1;
- (void)updatedFeedTopics:(id)arg1;
- (void)didSelectContentSuggestion:(id)arg1;
- (void)didDismissContentSuggestion:(id)arg1;
- (void)loadedAudienceSuggestion:(id)arg1 forCompositionText:(id)arg2;
- (void)createdLoopWithLoopsAttachment:(id)arg1 montagePhotoAttachments:(id)arg2;
- (void)addedRemoteImageAttachments:(id)arg1 forCompositionID:(id)arg2;
- (void)prefillLocationSuccess:(id)arg1;
- (void)tappedLocationSelectionField:(id)arg1;
- (void)tappedCategorySelectionButton:(id)arg1;
- (void)changedProductItemCategory:(id)arg1;
- (void)changedProductItemPriceCurrency:(id)arg1;
- (void)changedProductItemLocationPage:(id)arg1;
- (void)changedProductItemPickupDeliveryInfo:(id)arg1;
- (void)changedProductItemTitle:(id)arg1;
- (void)changedProductItemPrice:(id)arg1;
- (void)changedProductItemDescription:(id)arg1;
- (void)changedAlbumTitle:(id)arg1;
- (void)changedAlbumDescription:(id)arg1;
- (void)selectedStarRating:(unsigned int)arg1;
- (void)tappedTargetingOnButton;
- (void)tappedTargetingOffButton;
- (void)tappedQuestionAndAnswerOnButton;
- (void)tappedQuestionAndAnswerOffButton;
- (void)platformLoadedVideoAttachment:(id)arg1;
- (void)platformLoadedTaggedUsers:(id)arg1;
- (void)platformLoadedSharedLink:(id)arg1;
- (void)platformLoadedRobotext:(id)arg1;
- (void)platformLoadedRef:(id)arg1;
- (void)platformLoadedPlace:(id)arg1 placeIsUserSelected:(BOOL)arg2;
- (void)platformLoadedOGMediaAttachmentsForUpload:(id)arg1 ogMediaAttachmentsForDisplay:(id)arg2;
- (void)platformLoadedImageAttachments:(id)arg1;
- (void)platformLoadedAppAttribution:(id)arg1;
- (void)platformLoadedActionType:(id)arg1 actionParameters:(id)arg2 actionPropertyToCreatedObjectType:(id)arg3;
- (void)linkShareUpdated:(id)arg1 deniedLinks:(id)arg2 userRemovedSharedLink:(BOOL)arg3 linkPickerSessionID:(id)arg4;
- (void)_logEndOfPerformCentralUpdateWithReason:(id)arg1;
- (void)_logStartOfPerformCentralUpdateWithReason:(id)arg1;
- (void)_performCentralUpdateWithReason:(id)arg1;
- (void)stickyDidChangeAfterFetchingFromServer;
- (void)failedToLoadPrivacySettings;
- (void)loadedPrivacySettingsFromNetwork;
- (void)loadedPrivacySettingsFromCache;
- (void)composerPublishTargetDidChange:(id)arg1;
- (void)composerAuthorDidChange:(id)arg1;
- (void)failedToLoadDataForRequest:(id)arg1;
- (void)performSingleCentralUpdateForLoadedPublishTarget:(id)arg1;
- (void)loadedDataWithResponse:(id)arg1;
- (void)updatedPhotosTags:(id)arg1 forAssetWithID:(id)arg2;
- (void)updatedPhotoTaggingAsset:(id)arg1;
- (void)updatedTemporaryDisplayImageForAttachment:(id)arg1;
- (void)updatedMentions:(id)arg1 forAttachment:(id)arg2;
- (void)updatedCaption:(id)arg1 forAttachment:(id)arg2;
- (void)selectedMediaAttachments:(id)arg1 allowPhotosAlongsideVideos:(BOOL)arg2;
- (void)selectedVideoAttachment:(id)arg1;
- (void)didTapRemoveStickerButtonForSticker:(id)arg1;
- (void)selectedStickerAttachments:(id)arg1;
- (void)selectedImageAttachments:(id)arg1;
- (void)failedToOpenInvalidMediaAttachment:(id)arg1;
- (void)draggedImageAttachmentAtIndex:(unsigned int)arg1 toDestinationIndex:(unsigned int)arg2;
- (void)deselectedMediaAttachmentWithThumbnailImage:(id)arg1;
- (void)deselectedMediaAttachment:(id)arg1;
- (void)clearedAllSelectedAttachments;
- (void)removedMagicStoryAttachment;
- (void)selectedMagicStoryAttachment:(id)arg1;
- (void)updatedCompositionLifeEventRelationship;
- (void)updateLifeEvent:(id)arg1;
- (void)updatedCompositionText:(id)arg1;
- (void)cacheOrNetworkUpdatedDefaultAudience:(id)arg1 availablePrivacySettings:(id)arg2;
- (void)audienceTouchedByUser;
- (void)selectedAudience:(id)arg1 availablePrivacySettingsCorrespondingToAudienceSelection:(id)arg2;
- (void)updatedPostContentType:(unsigned int)arg1 withSelectedDate:(id)arg2;
- (void)updatedTaggedActivity:(id)arg1;
- (void)stoppedLoadingActivitySuggestions;
- (void)startedLoadingActivitySuggestions;
- (void)updatedHashtags:(id)arg1;
- (void)tappedRemoveAttachmentPreview;
- (void)startedFetchingTaggedActivityPreview;
- (void)updatedTaggableActivityComposition:(id)arg1;
- (void)updatedPlace:(id)arg1 location:(id)arg2 placeIsUserSelected:(BOOL)arg3 suggestedPhoto:(BOOL)arg4;
- (void)discoveredAccurateLocation:(id)arg1;
- (void)clearedCurrentPlace;
- (void)mentionController:(id)arg1 updatedMentions:(id)arg2;
- (void)updatedTaggedUsersFromWithWho:(id)arg1 photoTags:(id)arg2 tagsAreUserSelected:(BOOL)arg3 allowContributors:(BOOL)arg4;
- (void)updatedMajorLifeEventStartDate:(id)arg1 eventEndDate:(id)arg2 isCurrentWork:(BOOL)arg3 isGraduated:(BOOL)arg4;
- (void)removeListener:(id)arg1;
- (void)bootstrapWithContent:(id)arg1 configuration:(id)arg2 startingStyle:(unsigned int)arg3 loadedTime:(id)arg4;
- (void)addListener:(id)arg1;
- (id)initWithExceptionHandler:(id)arg1 userSession:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

