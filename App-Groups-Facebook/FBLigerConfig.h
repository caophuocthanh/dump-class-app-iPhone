//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSArray, NSString;

@interface FBLigerConfig : NSObject
{
    BOOL _ligerEnabled;
    BOOL _allRequestsEnabled;
    BOOL _cloudFrontEnabled;
    BOOL _dnsCacheEnabled;
    BOOL _useStaleAnswers;
    BOOL _cAresEnabled;
    BOOL _persistentSSLCacheEnabled;
    BOOL _httpSessionManagerReuseUnfilledSessionsEnabled;
    BOOL _httpSessionManagerOriginLimitEnabled;
    BOOL _hpackEnabled;
    BOOL _sslPinningEnabled;
    BOOL _schedulerEnabled;
    BOOL _tracerouteEnabled;
    BOOL _heV4PrefEnabled;
    BOOL _tcpPingEnabled;
    BOOL _tcpPingCancelOnReply;
    NSString *_persistentSSLCacheFilename;
    int _persistentSSLCacheCapacity;
    int _persistentSSLCacheSyncInterval;
    int _httpSessionManagerMaxIdleHTTPSessions;
    int _httpSessionManagerMaxIdleSPDYSessions;
    int _httpSessionManagerBackupTimeout;
    int _httpSessionManagerOriginMaxRetries;
    int _schedulerLowPriUpperBound;
    int _schedulerNormalPriUpperBound;
    int _schedulerHighPriUpperBound;
    int _tcpPingTimeout;
    int _tcpPingRetries;
    NSArray *_requestObservers;
}

@property(copy, nonatomic) NSArray *requestObservers; // @synthesize requestObservers=_requestObservers;
@property(nonatomic) BOOL tcpPingCancelOnReply; // @synthesize tcpPingCancelOnReply=_tcpPingCancelOnReply;
@property(nonatomic) int tcpPingRetries; // @synthesize tcpPingRetries=_tcpPingRetries;
@property(nonatomic) int tcpPingTimeout; // @synthesize tcpPingTimeout=_tcpPingTimeout;
@property(nonatomic) BOOL tcpPingEnabled; // @synthesize tcpPingEnabled=_tcpPingEnabled;
@property(nonatomic) BOOL heV4PrefEnabled; // @synthesize heV4PrefEnabled=_heV4PrefEnabled;
@property(nonatomic) BOOL tracerouteEnabled; // @synthesize tracerouteEnabled=_tracerouteEnabled;
@property(nonatomic) int schedulerHighPriUpperBound; // @synthesize schedulerHighPriUpperBound=_schedulerHighPriUpperBound;
@property(nonatomic) int schedulerNormalPriUpperBound; // @synthesize schedulerNormalPriUpperBound=_schedulerNormalPriUpperBound;
@property(nonatomic) int schedulerLowPriUpperBound; // @synthesize schedulerLowPriUpperBound=_schedulerLowPriUpperBound;
@property(nonatomic) BOOL schedulerEnabled; // @synthesize schedulerEnabled=_schedulerEnabled;
@property(nonatomic) BOOL sslPinningEnabled; // @synthesize sslPinningEnabled=_sslPinningEnabled;
@property(nonatomic) BOOL hpackEnabled; // @synthesize hpackEnabled=_hpackEnabled;
@property(nonatomic) int httpSessionManagerOriginMaxRetries; // @synthesize httpSessionManagerOriginMaxRetries=_httpSessionManagerOriginMaxRetries;
@property(nonatomic) BOOL httpSessionManagerOriginLimitEnabled; // @synthesize httpSessionManagerOriginLimitEnabled=_httpSessionManagerOriginLimitEnabled;
@property(nonatomic) BOOL httpSessionManagerReuseUnfilledSessionsEnabled; // @synthesize httpSessionManagerReuseUnfilledSessionsEnabled=_httpSessionManagerReuseUnfilledSessionsEnabled;
@property(nonatomic) int httpSessionManagerBackupTimeout; // @synthesize httpSessionManagerBackupTimeout=_httpSessionManagerBackupTimeout;
@property(nonatomic) int httpSessionManagerMaxIdleSPDYSessions; // @synthesize httpSessionManagerMaxIdleSPDYSessions=_httpSessionManagerMaxIdleSPDYSessions;
@property(nonatomic) int httpSessionManagerMaxIdleHTTPSessions; // @synthesize httpSessionManagerMaxIdleHTTPSessions=_httpSessionManagerMaxIdleHTTPSessions;
@property(nonatomic) int persistentSSLCacheSyncInterval; // @synthesize persistentSSLCacheSyncInterval=_persistentSSLCacheSyncInterval;
@property(nonatomic) int persistentSSLCacheCapacity; // @synthesize persistentSSLCacheCapacity=_persistentSSLCacheCapacity;
@property(copy, nonatomic) NSString *persistentSSLCacheFilename; // @synthesize persistentSSLCacheFilename=_persistentSSLCacheFilename;
@property(nonatomic) BOOL persistentSSLCacheEnabled; // @synthesize persistentSSLCacheEnabled=_persistentSSLCacheEnabled;
@property(nonatomic) BOOL cAresEnabled; // @synthesize cAresEnabled=_cAresEnabled;
@property(nonatomic) BOOL useStaleAnswers; // @synthesize useStaleAnswers=_useStaleAnswers;
@property(nonatomic) BOOL dnsCacheEnabled; // @synthesize dnsCacheEnabled=_dnsCacheEnabled;
@property(nonatomic) BOOL cloudFrontEnabled; // @synthesize cloudFrontEnabled=_cloudFrontEnabled;
@property(nonatomic) BOOL allRequestsEnabled; // @synthesize allRequestsEnabled=_allRequestsEnabled;
@property(nonatomic) BOOL ligerEnabled; // @synthesize ligerEnabled=_ligerEnabled;
- (void).cxx_destruct;

@end

