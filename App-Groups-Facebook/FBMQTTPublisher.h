//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class FBMQTTEncodedMessage, FBMQTTJSONMessage, NSTimer;

@interface FBMQTTPublisher : NSObject
{
    BOOL _forceReconnectIfDisconnected;
    BOOL _forceReconnectIfTimeout;
    BOOL _isWaitingForConnected;
    FBMQTTJSONMessage *_jsonMessage;
    FBMQTTEncodedMessage *_encodedMessage;
    CDUnknownBlockType _successBlock;
    CDUnknownBlockType _failureBlock;
    CDUnknownBlockType _timeoutBlock;
    NSTimer *_timer;
    double _timeout;
    double _requestTime;
    double _waitIntervalForConnected;
}

+ (id)publisherWithJSONMessage:(id)arg1;
+ (id)publisherWithEncodedMessage:(id)arg1;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(nonatomic) BOOL isWaitingForConnected; // @synthesize isWaitingForConnected=_isWaitingForConnected;
@property(nonatomic) BOOL forceReconnectIfTimeout; // @synthesize forceReconnectIfTimeout=_forceReconnectIfTimeout;
@property(nonatomic) double waitIntervalForConnected; // @synthesize waitIntervalForConnected=_waitIntervalForConnected;
@property(nonatomic) BOOL forceReconnectIfDisconnected; // @synthesize forceReconnectIfDisconnected=_forceReconnectIfDisconnected;
@property(nonatomic) double requestTime; // @synthesize requestTime=_requestTime;
@property(copy, nonatomic) CDUnknownBlockType timeoutBlock; // @synthesize timeoutBlock=_timeoutBlock;
@property(nonatomic) double timeout; // @synthesize timeout=_timeout;
@property(copy, nonatomic) CDUnknownBlockType failureBlock; // @synthesize failureBlock=_failureBlock;
@property(copy, nonatomic) CDUnknownBlockType successBlock; // @synthesize successBlock=_successBlock;
@property(retain, nonatomic) FBMQTTEncodedMessage *encodedMessage; // @synthesize encodedMessage=_encodedMessage;
@property(retain, nonatomic) FBMQTTJSONMessage *jsonMessage; // @synthesize jsonMessage=_jsonMessage;
- (void).cxx_destruct;
- (void)dealloc;
- (id)description;
- (id)init;

@end

