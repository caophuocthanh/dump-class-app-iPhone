//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "FBTableViewController.h"

#import "FBComposerCompositionStateChangedListener.h"
#import "FBComposerFlowDelegate.h"
#import "FBComposerPickerController.h"
#import "FBComposerPublicationProgressDisplayListener.h"
#import "FBGraphQLConnectionSyncStoreListener.h"

@class FBComposerAlbumPickerTableItemView, FBComposerCompositionState, FBComposerFlowDisplayer, FBComposerPublisherStatusEventFilter, FBExceptionHandler, FBMemAlbum, FBPublisherManager, FBTransientViewStateManager, FBUserSession, NSArray, NSString, UIView;

@interface FBComposerAlbumPickerController : FBTableViewController <FBGraphQLConnectionSyncStoreListener, FBComposerPublicationProgressDisplayListener, FBComposerPickerController, FBComposerFlowDelegate, FBComposerCompositionStateChangedListener>
{
    FBUserSession *_session;
    id <FBComposerAudioRendererFactory> _audioRendererFactory;
    FBComposerCompositionState *_compositionState;
    FBComposerFlowDisplayer *_composerDisplayer;
    FBExceptionHandler *_exceptionHandler;
    UIView *_overlayView;
    id <FBComposerPublicationProgressDisplayer> _publicationProgressDisplayer;
    FBPublisherManager *_publisherManager;
    FBComposerPublisherStatusEventFilter *_publishingEventFilter;
    FBComposerAlbumPickerTableItemView *_tableHeaderView;
    NSArray *_filteredAlbums;
    BOOL _shouldFilter;
    BOOL _isInPopover;
    id <FBComposerAlbumPickerControllerDelegate> _delegate;
    FBMemAlbum *_selectedAlbum;
    NSString *_fakeAlbumGraphQLID;
    NSString *_defaultAlbumType;
    NSString *_ownerFBID;
    NSString *_ownerFBIDForDisplayedAlbums;
    id <FBGraphQLConnectionSyncStoreProtocol> _albumStore;
}

@property(nonatomic) BOOL isInPopover; // @synthesize isInPopover=_isInPopover;
@property(retain, nonatomic) id <FBGraphQLConnectionSyncStoreProtocol> albumStore; // @synthesize albumStore=_albumStore;
@property(copy, nonatomic) NSString *ownerFBIDForDisplayedAlbums; // @synthesize ownerFBIDForDisplayedAlbums=_ownerFBIDForDisplayedAlbums;
@property(copy, nonatomic) NSString *ownerFBID; // @synthesize ownerFBID=_ownerFBID;
@property(copy, nonatomic) NSString *defaultAlbumType; // @synthesize defaultAlbumType=_defaultAlbumType;
@property(copy, nonatomic) NSString *fakeAlbumGraphQLID; // @synthesize fakeAlbumGraphQLID=_fakeAlbumGraphQLID;
@property(retain, nonatomic) FBMemAlbum *selectedAlbum; // @synthesize selectedAlbum=_selectedAlbum;
@property(nonatomic) __weak id <FBComposerAlbumPickerControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_updateAlbumStoreAndDefault;
- (void)_reload;
- (id)_albumNameForType:(id)arg1;
- (void)_filterAlbums;
- (id)_defaultAlbum;
- (id)_indexPathsForIndexes:(id)arg1;
- (int)preferredStatusBarStyle;
- (void)uploadViewUpdatedForSuccessOfPublicationForPublisherData:(id)arg1 response:(id)arg2;
- (void)uploadViewUpdatedForTransientFailureOfPublicationForPublisherData:(id)arg1;
- (void)uploadViewUpdatedForTerminalFailureOfPublicationForPublisherData:(id)arg1;
- (void)uploadViewUpdatedForCancellationOfPublicationForPublisherData:(id)arg1;
- (void)retryButtonTappedForPublisherData:(id)arg1;
- (void)dismissButtonTappedForPublisherData:(id)arg1;
- (void)cancelButtonTappedForPublisherData:(id)arg1 withReason:(id)arg2;
- (void)_showPublicationWithIdentifier:(id)arg1;
- (void)_dismissPublicationProgressDisplay;
- (void)_handlePublicationResponse:(id)arg1;
- (void)composerCompletedWithResult:(id)arg1;
- (void)_dismiss;
- (void)didAddAlbumWithFBID:(id)arg1;
- (void)didTapNewButton:(id)arg1;
- (void)didTapCancel:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (int)tableView:(id)arg1 numberOfRowsInSection:(int)arg2;
- (id)newCellWithIdentifier:(id)arg1;
- (id)cellIdentifierAtIndexPath:(id)arg1;
- (void)configureCell:(id)arg1 atIndexPath:(id)arg2;
- (void)_finishPicking;
- (void)clearSelection;
- (void)connectionSyncStoreDidFinishRequest:(id)arg1 error:(id)arg2;
- (void)connectionSyncStoreDidChangeContent:(id)arg1;
- (void)connectionSyncStore:(id)arg1 didUpdateNodesAtIndexes:(id)arg2;
- (void)connectionSyncStore:(id)arg1 didRemoveNodesAtIndexes:(id)arg2;
- (void)connectionSyncStore:(id)arg1 didAddNodesAtIndexes:(id)arg2;
- (void)_createViewStateManager;
- (id)albums;
- (BOOL)fb_showNavigationJewels;
- (struct CGSize)contentSizeForViewInPopover;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewDidLoad;
- (void)_addNewAlbumHeaderView;
- (void)composerCompositionStateChangedFromPreviousCompositionState:(id)arg1 toCurrentCompositionState:(id)arg2;
- (void)dismissPopoverController;
- (id)presentableViewController;
- (struct CGSize)popoverContentSizeForOrientation:(int)arg1;
- (unsigned int)popoverStyle;
- (void)dealloc;
- (id)initWithUserSession:(id)arg1 publisherManager:(id)arg2 audioRendererFactory:(id)arg3 exceptionHandler:(id)arg4;
- (int)preferredInterfaceOrientationForPresentation;
- (unsigned int)supportedInterfaceOrientations;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;
@property(retain, nonatomic) FBTransientViewStateManager *viewStateManager; // @dynamic viewStateManager;

@end

