//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSArray, NSMutableArray, NSOperationQueue, NSString, NSURL, NSURLSession;

@interface MBXOfflineMapDownloader : NSObject
{
    BOOL _includesMetadata;
    BOOL _includesMarkers;
    BOOL _offlineMapsAreExcludedFromBackup;
    unsigned int _state;
    NSString *_mapID;
    unsigned int _imageQuality;
    int _minimumZ;
    int _maximumZ;
    unsigned int _totalFilesWritten;
    unsigned int _totalFilesExpectedToWrite;
    id <MBXOfflineMapDownloaderDelegate> _delegate;
    NSString *_uniqueID;
    NSMutableArray *_mutableOfflineMapDatabases;
    NSString *_partialDatabasePath;
    NSURL *_offlineMapDirectory;
    NSOperationQueue *_backgroundWorkQueue;
    NSOperationQueue *_sqliteQueue;
    NSURLSession *_dataSession;
    int _activeDataSessionTasks;
    CDStruct_feeb6407 _mapRegion;
}

+ (id)sharedOfflineMapDownloader;
@property(nonatomic) int activeDataSessionTasks; // @synthesize activeDataSessionTasks=_activeDataSessionTasks;
@property(retain, nonatomic) NSURLSession *dataSession; // @synthesize dataSession=_dataSession;
@property(retain, nonatomic) NSOperationQueue *sqliteQueue; // @synthesize sqliteQueue=_sqliteQueue;
@property(retain, nonatomic) NSOperationQueue *backgroundWorkQueue; // @synthesize backgroundWorkQueue=_backgroundWorkQueue;
@property(retain, nonatomic) NSURL *offlineMapDirectory; // @synthesize offlineMapDirectory=_offlineMapDirectory;
@property(retain, nonatomic) NSString *partialDatabasePath; // @synthesize partialDatabasePath=_partialDatabasePath;
@property(retain, nonatomic) NSMutableArray *mutableOfflineMapDatabases; // @synthesize mutableOfflineMapDatabases=_mutableOfflineMapDatabases;
@property(retain, nonatomic) NSString *uniqueID; // @synthesize uniqueID=_uniqueID;
@property(retain, nonatomic) id <MBXOfflineMapDownloaderDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) BOOL offlineMapsAreExcludedFromBackup; // @synthesize offlineMapsAreExcludedFromBackup=_offlineMapsAreExcludedFromBackup;
@property(nonatomic) unsigned int totalFilesExpectedToWrite; // @synthesize totalFilesExpectedToWrite=_totalFilesExpectedToWrite;
@property(nonatomic) unsigned int totalFilesWritten; // @synthesize totalFilesWritten=_totalFilesWritten;
@property(nonatomic) int maximumZ; // @synthesize maximumZ=_maximumZ;
@property(nonatomic) int minimumZ; // @synthesize minimumZ=_minimumZ;
@property(nonatomic) CDStruct_90e2a262 mapRegion; // @synthesize mapRegion=_mapRegion;
@property(nonatomic) unsigned int imageQuality; // @synthesize imageQuality=_imageQuality;
@property(nonatomic) BOOL includesMarkers; // @synthesize includesMarkers=_includesMarkers;
@property(nonatomic) BOOL includesMetadata; // @synthesize includesMetadata=_includesMetadata;
@property(retain, nonatomic) NSString *mapID; // @synthesize mapID=_mapID;
@property(nonatomic) unsigned int state; // @synthesize state=_state;
- (void).cxx_destruct;
- (void)removeOfflineMapDatabaseWithID:(id)arg1;
- (void)removeOfflineMapDatabase:(id)arg1;
@property(readonly, nonatomic) NSArray *offlineMapDatabases;
- (void)suspend;
- (void)resume;
- (void)cancel;
- (void)cancelImmediatelyWithError:(id)arg1;
- (id)parseMarkerIconURLStringsFromGeojsonData:(id)arg1;
- (void)beginDownloadingMapID:(id)arg1 mapRegion:(CDStruct_90e2a262)arg2 minimumZ:(int)arg3 maximumZ:(int)arg4 includeMetadata:(BOOL)arg5 includeMarkers:(BOOL)arg6 imageQuality:(unsigned int)arg7;
- (void)beginDownloadingMapID:(id)arg1 mapRegion:(CDStruct_90e2a262)arg2 minimumZ:(int)arg3 maximumZ:(int)arg4 includeMetadata:(BOOL)arg5 includeMarkers:(BOOL)arg6;
- (void)beginDownloadingMapID:(id)arg1 mapRegion:(CDStruct_90e2a262)arg2 minimumZ:(int)arg3 maximumZ:(int)arg4;
- (BOOL)sqliteCreateDatabaseUsingMetadata:(id)arg1 urlArray:(id)arg2 withError:(id *)arg3;
- (BOOL)sqliteQueryWrittenAndExpectedCountsWithError:(id *)arg1;
- (id)sqliteReadArrayOfOfflineMapURLsToBeDownloadLimit:(int)arg1 withError:(id *)arg2;
- (void)sqliteSaveDownloadedData:(id)arg1 forURL:(id)arg2;
- (void)startDownloading;
- (id)completeDatabaseAndInstantiateOfflineMapWithError:(id *)arg1;
- (void)notifyDelegateOfCompletionWithOfflineMapDatabase:(id)arg1 withError:(id)arg2;
- (void)notifyDelegateOfHTTPStatusError:(int)arg1 url:(id)arg2;
- (void)notifyDelegateOfSqliteError:(id)arg1;
- (void)notifyDelegateOfNetworkConnectivityError:(id)arg1;
- (void)notifyDelegateOfProgress;
- (void)notifyDelegateOfInitialCount;
- (void)notifyDelegateOfStateChange;
- (void)setUpNewDataSession;
- (id)init;

@end

