//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "AVCaptureVideoDataOutputSampleBufferDelegate.h"

@class AVCaptureSession, AVCaptureStillImageOutput, NSObject<OS_dispatch_queue>, NSString, UIImage;

@interface CBLCameraManager : NSObject <AVCaptureVideoDataOutputSampleBufferDelegate>
{
    BOOL _shouldCaptureImage;
    AVCaptureSession *_session;
    CDUnknownBlockType _realTimeFrameCallback;
    AVCaptureStillImageOutput *_imageOutput;
    UIImage *_capturedImage;
    NSObject<OS_dispatch_queue> *_sessionQueue;
    CDUnknownBlockType _captureCompletion;
}

+ (id)sharedManager;
@property(copy, nonatomic) CDUnknownBlockType captureCompletion; // @synthesize captureCompletion=_captureCompletion;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *sessionQueue; // @synthesize sessionQueue=_sessionQueue;
@property(retain, nonatomic) UIImage *capturedImage; // @synthesize capturedImage=_capturedImage;
@property(nonatomic) BOOL shouldCaptureImage; // @synthesize shouldCaptureImage=_shouldCaptureImage;
@property(retain, nonatomic) AVCaptureStillImageOutput *imageOutput; // @synthesize imageOutput=_imageOutput;
@property(copy, nonatomic) CDUnknownBlockType realTimeFrameCallback; // @synthesize realTimeFrameCallback=_realTimeFrameCallback;
@property(retain, nonatomic) AVCaptureSession *session; // @synthesize session=_session;
- (void).cxx_destruct;
- (id)CBLFixFrameOrienationFromImage:(id)arg1;
- (id)createUIImageFromSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;
- (void)takePhotoWithCompletion:(CDUnknownBlockType)arg1;
- (void)stopRunning;
- (void)startRunning;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

