//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "GIDSignInDelegate.h"

@class ACAccountStore, CBLActiveUser, NSString;

@interface CBLActiveUserManager : NSObject <GIDSignInDelegate>
{
    ACAccountStore *_accountStore;
    CBLActiveUser *_activeUser;
    NSString *_transientAccessToken;
    CDUnknownBlockType _facebookSuccess;
    CDUnknownBlockType _facebookFailure;
    CDUnknownBlockType _gPlusSuccess;
    CDUnknownBlockType _gPlusFailure;
}

+ (id)sharedManager;
@property(copy, nonatomic) CDUnknownBlockType gPlusFailure; // @synthesize gPlusFailure=_gPlusFailure;
@property(copy, nonatomic) CDUnknownBlockType gPlusSuccess; // @synthesize gPlusSuccess=_gPlusSuccess;
@property(copy, nonatomic) CDUnknownBlockType facebookFailure; // @synthesize facebookFailure=_facebookFailure;
@property(copy, nonatomic) CDUnknownBlockType facebookSuccess; // @synthesize facebookSuccess=_facebookSuccess;
@property(copy, nonatomic) NSString *transientAccessToken; // @synthesize transientAccessToken=_transientAccessToken;
@property(retain, nonatomic) CBLActiveUser *activeUser; // @synthesize activeUser=_activeUser;
@property(readonly, nonatomic) ACAccountStore *accountStore; // @synthesize accountStore=_accountStore;
- (void).cxx_destruct;
- (id)additionalFieldsString;
- (void)setNuxEducationInProgress:(BOOL)arg1;
- (void)unregisterDeviceTokenWithSuccess:(CDUnknownBlockType)arg1 andFailure:(CDUnknownBlockType)arg2;
- (void)registerDeviceToken:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)facebookSession:(id)arg1 changedToState:(unsigned int)arg2 withError:(id)arg3;
- (void)requestTwitterTokenWithSuccess:(CDUnknownBlockType)arg1 andFailure:(CDUnknownBlockType)arg2;
- (void)updateDiskWithActiveUserDictionary:(id)arg1;
- (void)updateBoardsForUser:(id)arg1;
- (void)updateFacebookAccessToken;
- (void)updateActiveUserSettingsWithSuccess:(CDUnknownBlockType)arg1 andFailure:(CDUnknownBlockType)arg2;
- (void)backgroundUpdateActiveUserWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)updateActiveUserWithSuccess:(CDUnknownBlockType)arg1 andFailure:(CDUnknownBlockType)arg2;
- (void)finalizeLoginWithAccessToken:(id)arg1 success:(CDUnknownBlockType)arg2 andFailure:(CDUnknownBlockType)arg3;
- (void)authenticateTwitterAccount:(id)arg1 withSuccess:(CDUnknownBlockType)arg2 andFailure:(CDUnknownBlockType)arg3;
- (void)loginUserWithTwitterUserID:(id)arg1 token:(id)arg2 tokenSecret:(id)arg3 success:(CDUnknownBlockType)arg4 andFailure:(CDUnknownBlockType)arg5;
- (void)signIn:(id)arg1 didSignInForUser:(id)arg2 withError:(id)arg3;
- (void)loginUserWithRakutenUserID:(id)arg1 token:(id)arg2 refreshToken:(id)arg3 success:(CDUnknownBlockType)arg4 andFailure:(CDUnknownBlockType)arg5;
- (void)connectToRakutenWithUser:(id)arg1 success:(CDUnknownBlockType)arg2 andFailure:(CDUnknownBlockType)arg3;
- (id)documentsFilePathForActiveUser;
@property(readonly, nonatomic) BOOL isLoggedIn;
@property(readonly, nonatomic) NSString *accessToken;
- (void)logoutWithError:(id)arg1 unregisterDevice:(BOOL)arg2;
- (void)logoutWithoutUnregisterDeviceWithError:(id)arg1;
- (void)logoutWithError:(id)arg1;
- (void)logout;
- (void)clearStoredCredentials;
- (void)storeActiveCredentials;
- (void)resetPasswordToNewPassword:(id)arg1 retypePassword:(id)arg2 username:(id)arg3 expiration:(id)arg4 token:(id)arg5 success:(CDUnknownBlockType)arg6 failure:(CDUnknownBlockType)arg7;
- (void)forgotPasswordForEmailAddress:(id)arg1 withSuccess:(CDUnknownBlockType)arg2 andFailure:(CDUnknownBlockType)arg3;
- (void)loginUserWithGPlusToken:(id)arg1 success:(CDUnknownBlockType)arg2 andFailure:(CDUnknownBlockType)arg3;
- (void)authenticateGPlusWithUIDelegate:(id)arg1 success:(CDUnknownBlockType)arg2 andFailure:(CDUnknownBlockType)arg3;
- (void)loginUsingGPlusWithUIDelegate:(id)arg1 success:(CDUnknownBlockType)arg2 andFailure:(CDUnknownBlockType)arg3;
- (void)twitterAccountsWithSuccess:(CDUnknownBlockType)arg1 andFailure:(CDUnknownBlockType)arg2;
- (void)loginUsingAccessToken:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)loginUsingSecureTokenURL:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)userInfoForSignupWithTwitterAccount:(id)arg1 success:(CDUnknownBlockType)arg2 andFailure:(CDUnknownBlockType)arg3;
- (void)loginUsingTwitterAccount:(id)arg1 success:(CDUnknownBlockType)arg2 andFailure:(CDUnknownBlockType)arg3;
- (void)revokeFacebookPermission:(id)arg1 WithSuccess:(CDUnknownBlockType)arg2 andFailure:(CDUnknownBlockType)arg3;
- (void)loginUserWithFacebookUserID:(id)arg1 token:(id)arg2 success:(CDUnknownBlockType)arg3 andFailure:(CDUnknownBlockType)arg4;
- (void)loginUsingFacebookWithSuccess:(CDUnknownBlockType)arg1 andFailure:(CDUnknownBlockType)arg2;
- (void)authenticateFacebookWithSuccess:(CDUnknownBlockType)arg1 andFailure:(CDUnknownBlockType)arg2;
- (void)loginUsingNativeEmailAddress:(id)arg1 andPassword:(id)arg2 withSuccess:(CDUnknownBlockType)arg3 andFailure:(CDUnknownBlockType)arg4;
- (void)loginUsingStoredCreditialsWithSuccess:(CDUnknownBlockType)arg1 andFailure:(CDUnknownBlockType)arg2;
- (id)loadTwitterAccountFromDisk;
- (void)handleLoginFailure:(id)arg1 withRetryBlock:(CDUnknownBlockType)arg2 andCancelBlock:(CDUnknownBlockType)arg3;
- (void)loginUsingStoredCredentialsOrURL:(id)arg1 withSuccess:(CDUnknownBlockType)arg2 andFailure:(CDUnknownBlockType)arg3;
- (id)loadActiveUserFromDisk;
- (id)loadAccessTokenFromKeychain;
- (void)checkExistenceWithParameters:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)registerUsingMethod:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)initSharedManager;

@end

