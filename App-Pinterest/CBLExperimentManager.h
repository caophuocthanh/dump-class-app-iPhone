//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSDictionary, NSMutableDictionary, NSMutableSet;

@interface CBLExperimentManager : NSObject
{
    BOOL _isExperimentOverrideOn;
    NSDictionary *_latestServerExperiments;
    NSDictionary *_registeredExperimentsAndGroups;
    NSMutableDictionary *_sessionExperimentCache;
    NSMutableSet *_activatedExperiments;
    NSMutableSet *_experimentsToActivateWhenAppBecomesActive;
}

+ (void)configureForUse;
+ (void)resetManager;
+ (id)sharedManager;
@property(retain, nonatomic) NSMutableSet *experimentsToActivateWhenAppBecomesActive; // @synthesize experimentsToActivateWhenAppBecomesActive=_experimentsToActivateWhenAppBecomesActive;
@property(retain, nonatomic) NSMutableSet *activatedExperiments; // @synthesize activatedExperiments=_activatedExperiments;
@property(retain, nonatomic) NSMutableDictionary *sessionExperimentCache; // @synthesize sessionExperimentCache=_sessionExperimentCache;
@property(nonatomic) BOOL isExperimentOverrideOn; // @synthesize isExperimentOverrideOn=_isExperimentOverrideOn;
@property(retain, nonatomic) NSDictionary *registeredExperimentsAndGroups; // @synthesize registeredExperimentsAndGroups=_registeredExperimentsAndGroups;
@property(retain, nonatomic) NSDictionary *latestServerExperiments; // @synthesize latestServerExperiments=_latestServerExperiments;
- (void).cxx_destruct;
- (id)documentsFilePathForExperiment;
- (id)readExperimentDictionaryFromDisk;
- (void)archiveCurrentExperimentDictionaryToDisk;
- (void)archiveExperimentDictionary:(id)arg1;
- (BOOL)shouldAcceptExperimentResponse:(id)arg1;
- (void)clearExperimentsOverride;
- (void)overrideExperimentsWithExperiments:(id)arg1;
- (void)setExperiments:(id)arg1 force:(BOOL)arg2;
- (void)setExperiments:(id)arg1;
- (id)groupForExperimentName:(id)arg1 andActivate:(BOOL)arg2;
- (BOOL)inExperiment:(id)arg1 andGroups:(id)arg2 activateExperiment:(BOOL)arg3;
- (BOOL)inExperiment:(id)arg1 andGroups:(id)arg2;
- (BOOL)inExperiment:(id)arg1 andGroup:(id)arg2;
- (void)applicationDidBecomeActive;
- (void)activateExperimentNamed:(id)arg1;
- (void)updateExperimentsWithCompletion:(CDUnknownBlockType)arg1 experimentLoadFailure:(CDUnknownBlockType)arg2;
- (BOOL)isExperimentsLoaded;
- (void)invalidateExperimentCache;
- (id)initPrivate;
- (id)init;

@end

