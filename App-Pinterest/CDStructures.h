//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ASRangeGeometry {
    struct CGRect _field1;
    struct CGRect _field2;
};

struct Array;

struct BasicRow<tightdb::Table> {
    struct BasicTableRef<tightdb::Table> m_table;
    unsigned long m_row_ndx;
    struct RowBase *m_prev;
    struct RowBase *m_next;
};

struct BasicTableRef<tightdb::Table> {
    struct Table *m_ptr;
};

struct CATransform3D {
    float m11;
    float m12;
    float m13;
    float m14;
    float m21;
    float m22;
    float m23;
    float m24;
    float m31;
    float m32;
    float m33;
    float m34;
    float m41;
    float m42;
    float m43;
    float m44;
};

struct CGAffineTransform {
    float a;
    float b;
    float c;
    float d;
    float tx;
    float ty;
};

struct CGPoint {
    float x;
    float y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    float width;
    float height;
};

struct Column {
    CDUnknownFunctionPointerType *_vptr$ColumnBase;
    struct Array *m_array;
    CDUnknownFunctionPointerType *_vptr$ColumnTemplateBase;
    struct StringIndex *m_search_index;
};

struct CvRect {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct CvSize {
    int _field1;
    int _field2;
};

struct DenseStorage<float, 160, 16, 10, 1> {
    struct plain_array<float, 160, 1, 16> m_data;
};

struct DenseStorage<int, 16, 16, 1, 0> {
    struct plain_array<int, 16, 0, 16> m_data;
};

struct FBLikeControlLayout {
    struct CGSize _field1;
    struct CGRect _field2;
    struct CGRect _field3;
};

struct FdHolder {
    int fd;
};

struct Group;

struct GroupedRects;

struct IFTTTTransform3DRotate {
    float angle;
    float x;
    float y;
    float z;
};

struct IFTTTTransform3DScale {
    float sx;
    float sy;
    float sz;
};

struct IFTTTTransform3DTranslate {
    float tx;
    float ty;
    float tz;
};

struct LinkView;

struct Matrix<float, 16, 10, 1, 16, 10> {
    struct DenseStorage<float, 160, 16, 10, 1> m_storage;
};

struct Matrix<int, 16, 1, 0, 16, 1> {
    struct DenseStorage<int, 16, 16, 1, 0> m_storage;
};

struct Mutex {
    struct _opaque_pthread_mutex_t _m;
};

struct PLCrashHostInfoVersion {
    unsigned int major;
    unsigned int minor;
    unsigned int revision;
};

struct PLCrashReporterCallbacks {
    unsigned short _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
};

struct POPAnimatorItem;

struct ParentNode;

struct Query {
    _Bool do_delete;
    struct BasicTableRef<tightdb::Table> m_table;
    struct vector<tightdb::ParentNode *, std::__1::allocator<tightdb::ParentNode *>> first;
    struct vector<tightdb::ParentNode **, std::__1::allocator<tightdb::ParentNode **>> update;
    struct vector<tightdb::ParentNode **, std::__1::allocator<tightdb::ParentNode **>> update_override;
    struct vector<tightdb::ParentNode **, std::__1::allocator<tightdb::ParentNode **>> subtables;
    struct vector<tightdb::ParentNode *, std::__1::allocator<tightdb::ParentNode *>> all_nodes;
    struct RowIndexes *m_view;
    struct vector<bool, std::__1::allocator<bool>> pending_not;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> error_code;
    bind_ptr_f99bada8 m_source_link_view;
};

struct RecursiveMutex {
    struct _opaque_pthread_mutex_t _m;
};

struct Replication;

struct RowBase;

struct RowIndexes;

struct SSState<POP::Vector4<double>> {
    struct Vector4<double> _field1;
    struct Vector4<double> _field2;
};

struct SharedGroup;

struct Sorter {
    struct vector<unsigned long, std::__1::allocator<unsigned long>> m_columns;
    struct RowIndexes *m_row_indexes_class;
    struct vector<bool, std::__1::allocator<bool>> m_ascending;
};

struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
};

struct StringIndex;

struct Table;

struct TableView {
    CDUnknownFunctionPointerType *_vptr$RowIndexes;
    struct Column m_row_indexes;
    struct Sorter m_sorting_predicate;
    _Bool m_auto_sort;
    struct BasicTableRef<tightdb::Table> m_table;
    struct bind_ptr<const tightdb::LinkView> m_linkview_source;
    unsigned long long m_last_seen_version;
    unsigned int m_distinct_column_source;
    struct Query m_query;
    unsigned int m_start;
    unsigned int m_end;
    unsigned int m_limit;
};

struct UIEdgeInsets {
    float top;
    float left;
    float bottom;
    float right;
};

struct UIImage {
    Class _field1;
    void *_field2;
    float _field3;
    struct {
        unsigned int :1;
        unsigned int :3;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :2;
        unsigned int :1;
        unsigned int :1;
    } _field4;
};

struct UIOffset {
    float horizontal;
    float vertical;
};

struct Vector4<double> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct _IplImage {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    char _field6[4];
    char _field7[4];
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    struct _IplROI *_field13;
    struct _IplImage *_field14;
    void *_field15;
    struct _IplTileInfo *_field16;
    int _field17;
    char *_field18;
    int _field19;
    int _field20[4];
    int _field21[4];
    char *_field22;
};

struct _IplROI;

struct _IplTileInfo;

struct _NSRange {
    unsigned int location;
    unsigned int length;
};

struct _PLCrashReportDecoder {
    struct _Plcrash__CrashReport *_field1;
};

struct _POPAnimationState {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    int _field3;
    id _field4;
    unsigned int _field5;
    double _field6;
    double _field7;
    double _field8;
    id _field9;
    CDUnknownBlockType _field10;
    id _field11;
    id _field12;
    float _field13;
    int _field14;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct _Plcrash__CrashReport {
    struct _ProtobufCMessage _field1;
    struct _Plcrash__CrashReport__SystemInfo *_field2;
    struct _Plcrash__CrashReport__ApplicationInfo *_field3;
    unsigned int _field4;
    struct _Plcrash__CrashReport__Thread **_field5;
    unsigned int _field6;
    struct _Plcrash__CrashReport__BinaryImage **_field7;
    struct _Plcrash__CrashReport__Exception *_field8;
    struct _Plcrash__CrashReport__Signal *_field9;
    struct _Plcrash__CrashReport__ProcessInfo *_field10;
    struct _Plcrash__CrashReport__MachineInfo *_field11;
    struct _Plcrash__CrashReport__ReportInfo *_field12;
};

struct _Plcrash__CrashReport__ApplicationInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    char *_field4;
};

struct _Plcrash__CrashReport__BinaryImage;

struct _Plcrash__CrashReport__Exception {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned int _field4;
    struct _Plcrash__CrashReport__Thread__StackFrame **_field5;
};

struct _Plcrash__CrashReport__MachineInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    struct _Plcrash__CrashReport__Processor *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct _Plcrash__CrashReport__ProcessInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    unsigned int _field6;
    int _field7;
    int _field8;
    unsigned long long _field9;
};

struct _Plcrash__CrashReport__Processor {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__ReportInfo;

struct _Plcrash__CrashReport__Signal {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Signal__MachException *_field5;
};

struct _Plcrash__CrashReport__Signal__MachException {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned long long *_field4;
};

struct _Plcrash__CrashReport__Symbol {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__SystemInfo {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    char *_field4;
    int _field5;
    long long _field6;
    char *_field7;
    unsigned long long _field8;
    unsigned long long _field9;
};

struct _Plcrash__CrashReport__Thread;

struct _Plcrash__CrashReport__Thread__StackFrame {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    struct _Plcrash__CrashReport__Symbol *_field3;
};

struct _ProtobufCMessage {
    struct _ProtobufCMessageDescriptor *_field1;
    unsigned int _field2;
    struct _ProtobufCMessageUnknownField *_field3;
};

struct _ProtobufCMessageDescriptor;

struct _ProtobufCMessageUnknownField;

struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>;

struct _opaque_pthread_mutex_t {
    long __sig;
    char __opaque[40];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned int __cap_;
                    unsigned int __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[11];
                } __s;
                struct __raw {
                    unsigned long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct bind_ptr<const tightdb::LinkView> {
    struct LinkView *m_ptr;
};

struct bind_ptr<tightdb::LinkView> {
    struct LinkView *m_ptr;
};

struct cr_found_class_t {
    char *_field1;
    unsigned int _field2;
};

struct in_addr {
    unsigned int _field1;
};

struct kp_treenode_t;

struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long __first_;
    } __size_alloc_;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
                struct __tree_node_base<void *> *__left_;
            } __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct plain_array<float, 160, 1, 16> {
    float array[160];
};

struct plain_array<int, 16, 0, 16> {
    int array[16];
};

struct plcrash_exception_server_context {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType _field5;
    void *_field6;
    struct _opaque_pthread_mutex_t _field7;
    struct _opaque_pthread_cond_t {
        long _field1;
        char _field2[24];
    } _field8;
    unsigned int _field9;
    _Bool _field10;
};

struct plcrash_mach_exception_port_set {
    unsigned int count;
    unsigned int masks[13];
    unsigned int ports[13];
    int behaviors[13];
    int flavors[13];
};

struct re_guts;

struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct timeval {
    int tv_sec;
    int tv_usec;
};

struct unique_ptr<id [], std::__1::default_delete<id []>> {
    struct __compressed_pair<__strong id *, std::__1::default_delete<id []>> {
        id *__first_;
    } __ptr_;
};

struct unique_ptr<tightdb::Group, std::__1::default_delete<tightdb::Group>> {
    struct __compressed_pair<tightdb::Group *, std::__1::default_delete<tightdb::Group>> {
        struct Group *__first_;
    } __ptr_;
};

struct unique_ptr<tightdb::Query, std::__1::default_delete<tightdb::Query>> {
    struct __compressed_pair<tightdb::Query *, std::__1::default_delete<tightdb::Query>> {
        struct Query *__first_;
    } __ptr_;
};

struct unique_ptr<tightdb::Replication, std::__1::default_delete<tightdb::Replication>> {
    struct __compressed_pair<tightdb::Replication *, std::__1::default_delete<tightdb::Replication>> {
        struct Replication *__first_;
    } __ptr_;
};

struct unique_ptr<tightdb::SharedGroup, std::__1::default_delete<tightdb::SharedGroup>> {
    struct __compressed_pair<tightdb::SharedGroup *, std::__1::default_delete<tightdb::SharedGroup>> {
        struct SharedGroup *__first_;
    } __ptr_;
};

struct vector<ASIndexPathRange, std::__1::allocator<ASIndexPathRange>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<ASIndexPathRange *, std::__1::allocator<ASIndexPathRange>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<ASRangeTuningParameters *, std::__1::allocator<ASRangeTuningParameters>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *__begin_;
    struct CGRect *__end_;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *__first_;
    } __end_cap_;
};

struct vector<GroupedRects, std::__1::allocator<GroupedRects>> {
    struct GroupedRects *__begin_;
    struct GroupedRects *__end_;
    struct __compressed_pair<GroupedRects *, std::__1::allocator<GroupedRects>> {
        struct GroupedRects *__first_;
    } __end_cap_;
};

struct vector<bool, std::__1::allocator<bool>> {
    unsigned long *__begin_;
    unsigned int __size_;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> {
        unsigned long __first_;
    } __cap_alloc_;
};

struct vector<tightdb::ParentNode **, std::__1::allocator<tightdb::ParentNode **>> {
    struct ParentNode ***__begin_;
    struct ParentNode ***__end_;
    struct __compressed_pair<tightdb::ParentNode ***, std::__1::allocator<tightdb::ParentNode **>> {
        struct ParentNode ***__first_;
    } __end_cap_;
};

struct vector<tightdb::ParentNode *, std::__1::allocator<tightdb::ParentNode *>> {
    struct ParentNode **__begin_;
    struct ParentNode **__end_;
    struct __compressed_pair<tightdb::ParentNode **, std::__1::allocator<tightdb::ParentNode *>> {
        struct ParentNode **__first_;
    } __end_cap_;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long *__begin_;
    unsigned long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long *__first_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    unsigned short _field2;
} CDStruct_6a59ab51;

typedef struct {
    unsigned char n_offsets;
    unsigned short offsets[16];
    float score;
    float number_width;
    unsigned short pattern_offset;
} CDStruct_a8e598c0;

typedef struct {
    unsigned int _field1;
    unsigned int _field2[1];
} CDStruct_1d9d2bca;

typedef struct {
    unsigned long _field1;
    id *_field2;
    unsigned long *_field3;
    unsigned long _field4[5];
} CDStruct_11f37819;

typedef struct {
    void *_field1;
} CDStruct_7a6dc4e9;

typedef struct {
    float score;
    unsigned short y_offset;
    unsigned char pattern_type;
    unsigned char number_pattern[19];
    unsigned char number_pattern_length;
    unsigned char number_length;
} CDStruct_b4bb966f;

typedef struct {
    int _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_60d14f2d;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    float _field4;
} CDStruct_9d955b4a;

typedef struct {
    int section;
    int row;
} CDStruct_3eb3f945;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct CDStruct_183601bc;

typedef struct {
    struct kp_treenode_t *root;
    struct {
        void **storage;
        void **top;
    } stack;
    unsigned int size;
    CDStruct_183601bc *search_stack_info;
} CDStruct_697bd25f;

typedef struct {
    int found;
    struct {
        float rho;
        float theta;
    } location;
} CDStruct_04df4b36;

typedef struct {
    CDStruct_6e3f967a top_left;
    CDStruct_6e3f967a bottom_left;
    CDStruct_6e3f967a top_right;
    CDStruct_6e3f967a bottom_right;
} CDStruct_d006cd57;

typedef struct {
    CDStruct_3eb3f945 start;
    CDStruct_3eb3f945 end;
} CDStruct_b7d86103;

typedef struct {
    CDStruct_04df4b36 top;
    CDStruct_04df4b36 left;
    CDStruct_04df4b36 bottom;
    CDStruct_04df4b36 right;
} CDStruct_b2dfe295;

typedef struct {
    unsigned int num_frames_scanned;
    unsigned char frames_ring_start;
    struct {
        unsigned int frame_index;
        struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> frame_values;
    } frames_ring[20];
} CDStruct_7cea6920;

typedef struct {
    unsigned short count15;
    unsigned short count16;
    struct Matrix<float, 16, 10, 1, 16, 10> aggregated15;
    struct Matrix<float, 16, 10, 1, 16, 10> aggregated16;
    CDStruct_7cea6920 session_analytics;
    struct {
        _Bool complete;
        struct Matrix<int, 16, 1, 0, 16, 1> predictions;
        CDStruct_a8e598c0 hseg;
        CDStruct_b4bb966f vseg;
        unsigned char n_numbers;
        int expiry_month;
        int expiry_year;
    } successfulCardNumberResult;
    CDStruct_a8e598c0 mostRecentUsableHSeg;
    CDStruct_b4bb966f mostRecentUsableVSeg;
    unsigned long timeOfCardNumberCompletionInMilliseconds;
    _Bool scan_expiry;
    int expiry_month;
    int expiry_year;
    struct vector<GroupedRects, std::__1::allocator<GroupedRects>> expiry_groups;
    struct vector<GroupedRects, std::__1::allocator<GroupedRects>> name_groups;
} CDStruct_fee740eb;

// Ambiguous groups
typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double latitude;
    double longitude;
} CDStruct_2c43369c;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct {
    float x;
    float y;
} CDStruct_6e3f967a;

typedef struct {
    struct {
        double _field1;
        double _field2;
    } _field1;
    struct {
        double _field1;
        double _field2;
    } _field2;
} CDStruct_90e2a262;

typedef struct {
    CDStruct_2c43369c center;
    struct {
        double latitudeDelta;
        double longitudeDelta;
    } span;
} CDStruct_feeb6407;

typedef struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
} SpringSolver_fe820e75;

typedef struct bind_ptr<tightdb::LinkView> {
    struct LinkView *m_ptr;
} bind_ptr_f99bada8;

typedef struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long __first_;
    } __size_alloc_;
} list_2b9a5494;

typedef struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1553c9f8;

typedef struct unique_ptr<tightdb::Query, std::__1::default_delete<tightdb::Query>> {
    struct __compressed_pair<tightdb::Query *, std::__1::default_delete<tightdb::Query>> {
        struct Query *__first_;
    } __ptr_;
} unique_ptr_a3444300;

