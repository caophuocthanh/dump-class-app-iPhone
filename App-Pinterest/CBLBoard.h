//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "CBLCoreModelObject.h"

@class CBLBoardInvitation, CBLRemoteModelCollection, CBLUser, NSArray, NSDate, NSDictionary, NSString, NSURL, UIImage;

@interface CBLBoard : CBLCoreModelObject
{
    BOOL _collaboratorInvitesEnabled;
    BOOL _isCollaborative;
    BOOL _isCollaboratedOnByMe;
    BOOL _followedByMe;
    CBLRemoteModelCollection *_collaborators;
    CBLRemoteModelCollection *_invitations;
    CBLRemoteModelCollection *_pins;
    CBLRemoteModelCollection *_recommendedPins;
    CBLRemoteModelCollection *_followers;
    CBLRemoteModelCollection *_relatedBoards;
    NSDate *_createdAt;
    NSString *_name;
    NSString *_url;
    NSString *_categoryKey;
    NSString *_descriptionText;
    NSString *_layout;
    NSString *_mapId;
    NSString *_privacy;
    NSURL *_imageCoverURL;
    NSURL *_smallImageCoverURL;
    NSURL *_imageThumbnailURL;
    NSArray *_pinThumbnailURLs;
    NSDictionary *_coverImages;
    CBLUser *_owner;
    CBLBoardInvitation *_activeUserInvitation;
    NSString *_recommendationReason;
    int _collaboratorCount;
    int _pinCount;
    int _followerCount;
    UIImage *_tempBoardCoverImage;
    NSURL *_oldImageCoverURL;
}

+ (void)createBoardWithName:(id)arg1 categoryKey:(id)arg2 descriptionText:(id)arg3 secret:(BOOL)arg4 place:(BOOL)arg5 success:(CDUnknownBlockType)arg6 andFailure:(CDUnknownBlockType)arg7;
+ (id)coverImagesFieldKey;
+ (BOOL)isPlacesLayout:(id)arg1;
+ (id)additionalDetailFields;
+ (id)propertyDictionaryElementClasses;
+ (id)propertyTransformerClasses;
+ (id)propertyAliases;
+ (id)remoteEntityName;
@property(retain, nonatomic) NSURL *oldImageCoverURL; // @synthesize oldImageCoverURL=_oldImageCoverURL;
@property(retain, nonatomic) UIImage *tempBoardCoverImage; // @synthesize tempBoardCoverImage=_tempBoardCoverImage;
@property(nonatomic, getter=isFollowedByMe) BOOL followedByMe; // @synthesize followedByMe=_followedByMe;
@property(nonatomic) BOOL isCollaboratedOnByMe; // @synthesize isCollaboratedOnByMe=_isCollaboratedOnByMe;
@property(nonatomic) BOOL isCollaborative; // @synthesize isCollaborative=_isCollaborative;
@property(nonatomic) int followerCount; // @synthesize followerCount=_followerCount;
@property(nonatomic) int pinCount; // @synthesize pinCount=_pinCount;
@property(nonatomic) int collaboratorCount; // @synthesize collaboratorCount=_collaboratorCount;
@property(readonly, nonatomic) NSString *recommendationReason; // @synthesize recommendationReason=_recommendationReason;
@property(retain, nonatomic) CBLBoardInvitation *activeUserInvitation; // @synthesize activeUserInvitation=_activeUserInvitation;
@property(retain, nonatomic) CBLUser *owner; // @synthesize owner=_owner;
@property(nonatomic) BOOL collaboratorInvitesEnabled; // @synthesize collaboratorInvitesEnabled=_collaboratorInvitesEnabled;
@property(retain, nonatomic) NSDictionary *coverImages; // @synthesize coverImages=_coverImages;
@property(retain, nonatomic) NSArray *pinThumbnailURLs; // @synthesize pinThumbnailURLs=_pinThumbnailURLs;
@property(retain, nonatomic) NSURL *imageThumbnailURL; // @synthesize imageThumbnailURL=_imageThumbnailURL;
@property(retain, nonatomic) NSURL *smallImageCoverURL; // @synthesize smallImageCoverURL=_smallImageCoverURL;
@property(retain, nonatomic) NSURL *imageCoverURL; // @synthesize imageCoverURL=_imageCoverURL;
@property(copy, nonatomic) NSString *privacy; // @synthesize privacy=_privacy;
@property(copy, nonatomic) NSString *mapId; // @synthesize mapId=_mapId;
@property(copy, nonatomic) NSString *layout; // @synthesize layout=_layout;
@property(copy, nonatomic) NSString *descriptionText; // @synthesize descriptionText=_descriptionText;
@property(copy, nonatomic) NSString *categoryKey; // @synthesize categoryKey=_categoryKey;
@property(copy, nonatomic) NSString *url; // @synthesize url=_url;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSDate *createdAt; // @synthesize createdAt=_createdAt;
- (void).cxx_destruct;
- (void)ignoreInviteWithSuccess:(CDUnknownBlockType)arg1 andFailure:(CDUnknownBlockType)arg2;
- (void)acceptInviteWithSuccess:(CDUnknownBlockType)arg1 andFailure:(CDUnknownBlockType)arg2;
- (void)inviteUserWithFacebookWithInviteCode:(id)arg1 withSuccess:(CDUnknownBlockType)arg2 andFailure:(CDUnknownBlockType)arg3;
- (void)getFacebookInviteTokenWithSuccess:(CDUnknownBlockType)arg1 andFailure:(CDUnknownBlockType)arg2;
- (void)inviteUserWithEmail:(id)arg1 withSuccess:(CDUnknownBlockType)arg2 andFailure:(CDUnknownBlockType)arg3;
- (void)inviteUserWithId:(id)arg1 withSuccess:(CDUnknownBlockType)arg2 andFailure:(CDUnknownBlockType)arg3;
- (void)blockCollaborator:(id)arg1 withSuccess:(CDUnknownBlockType)arg2 andFailure:(CDUnknownBlockType)arg3;
- (void)removeCollaborator:(id)arg1 withSuccess:(CDUnknownBlockType)arg2 andFailure:(CDUnknownBlockType)arg3;
- (void)leaveWithSuccess:(CDUnknownBlockType)arg1 andFailure:(CDUnknownBlockType)arg2;
- (void)deleteWithSuccess:(CDUnknownBlockType)arg1 andFailure:(CDUnknownBlockType)arg2;
- (void)editBoardWithName:(id)arg1 categoryKey:(id)arg2 descriptionText:(id)arg3 place:(BOOL)arg4 collaboratorInviteEnabled:(BOOL)arg5 success:(CDUnknownBlockType)arg6 andFailure:(CDUnknownBlockType)arg7;
- (void)setSecretState:(BOOL)arg1 withSuccess:(CDUnknownBlockType)arg2 andFailure:(CDUnknownBlockType)arg3;
- (void)loadDetailsWithSuccess:(CDUnknownBlockType)arg1 andFailure:(CDUnknownBlockType)arg2;
- (void)setFollowedByMe:(BOOL)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) CBLRemoteModelCollection *relatedBoards; // @synthesize relatedBoards=_relatedBoards;
@property(readonly, nonatomic) BOOL useTempCoverImage;
@property(readonly, nonatomic) CBLRemoteModelCollection *followers; // @synthesize followers=_followers;
@property(readonly, nonatomic) CBLRemoteModelCollection *invitations; // @synthesize invitations=_invitations;
@property(readonly, nonatomic) CBLRemoteModelCollection *collaborators; // @synthesize collaborators=_collaborators;
@property(readonly, nonatomic) CBLRemoteModelCollection *recommendedPins; // @synthesize recommendedPins=_recommendedPins;
@property(readonly, nonatomic) CBLRemoteModelCollection *pins; // @synthesize pins=_pins;
@property(readonly, nonatomic) BOOL isPlacesBoard;
@property(readonly, nonatomic) BOOL hasPendingInvitation;
@property(readonly, nonatomic) BOOL isSecret;
@property(readonly, nonatomic) BOOL isOwnerBlockedByMe;
@property(readonly, nonatomic) BOOL isOwnedByMe;
- (id)resourceURL;
- (id)description;

@end

