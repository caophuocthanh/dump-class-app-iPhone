//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSNumber.h"

#import "JavaIoSerializable.h"
#import "JavaLangComparable.h"

@class IOSByteArray, IOSIntArray, NSString;

@interface JavaMathBigInteger : NSNumber <JavaLangComparable, JavaIoSerializable>
{
    IOSIntArray *digits_;
    int numberLength_;
    int sign_;
    int firstNonzeroDigit_;
    int signum_;
    IOSByteArray *magnitude_;
    int hashCode_;
}

+ (const struct J2ObjcClassInfo *)__metadata;
+ (void)initialize;
+ (id)getPowerOfTwoWithInt:(int)arg1;
+ (id)probablePrimeWithInt:(int)arg1 withJavaUtilRandom:(id)arg2;
+ (void)setFromStringWithJavaMathBigInteger:(id)arg1 withNSString:(id)arg2 withInt:(int)arg3;
+ (id)valueOfWithLong:(long long)arg1;
- (void)getValue:(void *)arg1;
- (const char *)objCType;
- (void)dealloc;
- (void)unCache;
- (void)writeObjectWithJavaIoObjectOutputStream:(id)arg1;
- (void)readObjectWithJavaIoObjectInputStream:(id)arg1;
- (id)copy__;
- (int)getFirstNonzeroDigit;
- (void)putBytesNegativeToIntegersWithByteArray:(id)arg1;
- (void)putBytesPositiveToIntegersWithByteArray:(id)arg1;
- (BOOL)isOne;
- (void)cutOffLeadingZeroes;
- (id)nextProbablePrime;
- (BOOL)isProbablePrimeWithInt:(int)arg1;
- (id)modWithJavaMathBigInteger:(id)arg1;
- (id)modPowWithJavaMathBigInteger:(id)arg1 withJavaMathBigInteger:(id)arg2;
- (id)modInverseWithJavaMathBigInteger:(id)arg1;
- (id)remainderWithJavaMathBigInteger:(id)arg1;
- (id)divideWithJavaMathBigInteger:(id)arg1;
- (id)divideAndRemainderWithJavaMathBigInteger:(id)arg1;
- (id)powWithInt:(int)arg1;
- (id)multiplyWithJavaMathBigInteger:(id)arg1;
- (id)gcdWithJavaMathBigInteger:(id)arg1;
- (id)toStringWithInt:(int)arg1;
@property(readonly, copy) NSString *description;
- (BOOL)equalsArraysWithIntArray:(id)arg1;
- (BOOL)isEqual:(id)arg1;
@property(readonly) unsigned int hash;
- (id)maxWithJavaMathBigInteger:(id)arg1;
- (id)minWithJavaMathBigInteger:(id)arg1;
- (int)compareToWithId:(id)arg1;
- (double)doubleValue;
- (float)floatValue;
- (long long)longLongValue;
- (int)intValue;
- (id)andNotWithJavaMathBigInteger:(id)arg1;
- (id)xor__WithJavaMathBigInteger:(id)arg1;
- (id)or__WithJavaMathBigInteger:(id)arg1;
- (id)and__WithJavaMathBigInteger:(id)arg1;
- (id)not__;
- (int)bitCount;
- (int)getLowestSetBit;
- (id)flipBitWithInt:(int)arg1;
- (id)clearBitWithInt:(int)arg1;
- (id)setBitWithInt:(int)arg1;
- (BOOL)testBitWithInt:(int)arg1;
- (int)bitLength;
- (id)shiftLeftOneBit;
- (id)shiftLeftWithInt:(int)arg1;
- (id)shiftRightWithInt:(int)arg1;
- (int)signum;
- (id)subtractWithJavaMathBigInteger:(id)arg1;
- (id)addWithJavaMathBigInteger:(id)arg1;
- (id)negate;
- (id)abs;
- (id)toByteArray;
- (id)initWithInt:(int)arg1 withIntArray:(id)arg2;
- (id)initWithInt:(int)arg1 withLong:(long long)arg2;
- (id)initWithInt:(int)arg1 withInt:(int)arg2 withIntArray:(id)arg3;
- (id)initWithInt:(int)arg1 withInt:(int)arg2;
- (id)initWithByteArray:(id)arg1;
- (id)initWithInt:(int)arg1 withByteArray:(id)arg2;
- (id)initWithNSString:(id)arg1 withInt:(int)arg2;
- (id)initWithNSString:(id)arg1;
- (id)initWithInt:(int)arg1 withInt:(int)arg2 withJavaUtilRandom:(id)arg3;
- (id)initWithInt:(int)arg1 withJavaUtilRandom:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

