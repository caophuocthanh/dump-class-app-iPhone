//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "JavaUtilConcurrentLocksAbstractQueuedSynchronizer.h"

@class JavaLangThread, JavaUtilConcurrentLocksReentrantReadWriteLock_Sync_HoldCounter, JavaUtilConcurrentLocksReentrantReadWriteLock_Sync_ThreadLocalHoldCounter;

@interface JavaUtilConcurrentLocksReentrantReadWriteLock_Sync : JavaUtilConcurrentLocksAbstractQueuedSynchronizer
{
    JavaUtilConcurrentLocksReentrantReadWriteLock_Sync_ThreadLocalHoldCounter *readHolds_;
    JavaUtilConcurrentLocksReentrantReadWriteLock_Sync_HoldCounter *cachedHoldCounter_;
    JavaLangThread *firstReader_;
    int firstReaderHoldCount_;
}

+ (const struct J2ObjcClassInfo *)__metadata;
+ (int)exclusiveCountWithInt:(int)arg1;
+ (int)sharedCountWithInt:(int)arg1;
- (void)dealloc;
- (int)getCount;
- (void)readObjectWithJavaIoObjectInputStream:(id)arg1;
- (int)getReadHoldCount;
- (int)getWriteHoldCount;
- (BOOL)isWriteLocked;
- (int)getReadLockCount;
- (id)getOwner;
- (id)newCondition;
- (BOOL)isHeldExclusively;
- (BOOL)tryReadLock;
- (BOOL)tryWriteLock;
- (int)fullTryAcquireSharedWithJavaLangThread:(id)arg1;
- (int)tryAcquireSharedWithInt:(int)arg1;
- (id)unmatchedUnlockException;
- (BOOL)tryReleaseSharedWithInt:(int)arg1;
- (BOOL)tryAcquireWithInt:(int)arg1;
- (BOOL)tryReleaseWithInt:(int)arg1;
- (BOOL)writerShouldBlock;
- (BOOL)readerShouldBlock;
- (id)init;

@end

