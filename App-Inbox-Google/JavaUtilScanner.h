//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "JavaIoCloseable.h"
#import "JavaUtilIterator.h"

@class JavaIoIOException, JavaNioCharBuffer, JavaTextDecimalFormat, JavaUtilLocale, JavaUtilRegexMatcher, JavaUtilRegexPattern, NSString;

@interface JavaUtilScanner : NSObject <JavaIoCloseable, JavaUtilIterator>
{
    id <JavaLangReadable> input_;
    JavaNioCharBuffer *buffer_;
    JavaUtilRegexPattern *delimiter_;
    JavaUtilRegexMatcher *matcher_;
    int currentRadix_;
    JavaUtilLocale *locale_;
    int findStartIndex_;
    int preStartIndex_;
    int bufferLength_;
    BOOL closed_;
    JavaIoIOException *lastIOException_;
    BOOL matchSuccessful_;
    JavaTextDecimalFormat *decimalFormat_;
    BOOL inputExhausted_;
    id cachedNextValue_;
    int cachedNextIndex_;
    JavaUtilRegexPattern *cachedFloatPattern_;
    int cachedIntegerPatternRadix_;
    JavaUtilRegexPattern *cachedIntegerPattern_;
}

+ (const struct J2ObjcClassInfo *)__metadata;
+ (void)initialize;
- (void)dealloc;
- (id)reset;
- (void)expandBuffer;
- (void)readMore;
- (int)findDelimiterAfter;
- (BOOL)setHeadTokenRegionWithInt:(int)arg1;
- (int)findPreDelimiter;
- (BOOL)setTokenRegion;
- (BOOL)removeLocaleSignWithJavaLangStringBuilder:(id)arg1;
- (id)removeLocaleInfoWithNSString:(id)arg1 withIOSClass:(id)arg2;
- (id)removeLocaleInfoFromFloatWithNSString:(id)arg1;
- (id)addNegativeSignWithNSString:(id)arg1;
- (id)addPositiveSignWithNSString:(id)arg1;
- (id)getNumeralWithNSString:(id)arg1 withNSString:(id)arg2;
- (id)getFloatPattern;
- (id)getIntegerPatternWithInt:(int)arg1;
- (void)recoverPreviousStatus;
- (void)prepareForScan;
- (void)resetMatcher;
- (void)checkNotNullWithJavaUtilRegexPattern:(id)arg1;
- (void)checkOpen;
- (void)remove;
- (void)checkRadixWithInt:(int)arg1;
- (id)useRadixWithInt:(int)arg1;
- (id)useLocaleWithJavaUtilLocale:(id)arg1;
- (id)useDelimiterWithNSString:(id)arg1;
- (id)useDelimiterWithJavaUtilRegexPattern:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)skipWithNSString:(id)arg1;
- (id)skipWithJavaUtilRegexPattern:(id)arg1;
- (int)radix;
- (short)nextShortWithInt:(int)arg1;
- (short)nextShort;
- (long long)nextLongWithInt:(int)arg1;
- (long long)nextLong;
- (id)nextLine;
- (int)nextIntWithInt:(int)arg1;
- (int)nextInt;
- (float)nextFloat;
- (double)nextDouble;
- (BOOL)nextByteWithInt:(int)arg1;
- (BOOL)nextByte;
- (BOOL)nextBoolean;
- (id)nextBigIntegerWithInt:(int)arg1;
- (id)nextBigInteger;
- (id)nextBigDecimal;
- (id)nextWithNSString:(id)arg1;
- (id)nextWithJavaUtilRegexPattern:(id)arg1;
- (id)next;
- (id)match;
- (void)setLocaleWithJavaUtilLocale:(id)arg1;
- (id)locale;
- (id)ioException;
- (BOOL)hasNextShortWithInt:(int)arg1;
- (BOOL)hasNextShort;
- (BOOL)hasNextLongWithInt:(int)arg1;
- (BOOL)hasNextLong;
- (BOOL)hasNextLine;
- (BOOL)hasNextIntWithInt:(int)arg1;
- (BOOL)hasNextInt;
- (BOOL)hasNextFloat;
- (BOOL)hasNextDouble;
- (BOOL)hasNextByteWithInt:(int)arg1;
- (BOOL)hasNextByte;
- (BOOL)hasNextBoolean;
- (BOOL)hasNextBigIntegerWithInt:(int)arg1;
- (BOOL)hasNextBigInteger;
- (BOOL)hasNextBigDecimal;
- (BOOL)hasNextWithNSString:(id)arg1;
- (BOOL)hasNextWithJavaUtilRegexPattern:(id)arg1;
- (BOOL)hasNext;
- (id)findWithinHorizonWithNSString:(id)arg1 withInt:(int)arg2;
- (id)findWithinHorizonWithJavaUtilRegexPattern:(id)arg1 withInt:(int)arg2;
- (id)findInLineWithNSString:(id)arg1;
- (id)findInLineWithJavaUtilRegexPattern:(id)arg1;
- (id)delimiter;
- (void)close;
- (void)initialize__WithJavaLangReadable:(id)arg1;
- (id)initWithJavaNioChannelsReadableByteChannel:(id)arg1 withNSString:(id)arg2;
- (id)initWithJavaNioChannelsReadableByteChannel:(id)arg1;
- (id)initWithJavaLangReadable:(id)arg1;
- (id)initWithJavaIoInputStream:(id)arg1 withNSString:(id)arg2;
- (id)initWithJavaIoInputStream:(id)arg1;
- (id)initWithNSString:(id)arg1;
- (id)initWithJavaIoFile:(id)arg1 withNSString:(id)arg2;
- (id)initWithJavaIoFile:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

