//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class GTMHTTPFetcherService, NSArray, NSDictionary, NSMutableDictionary, NSOperationQueue, NSString, NSURL;

@interface GTLService : NSObject
{
    NSOperationQueue *parseQueue_;
    NSString *userAgent_;
    GTMHTTPFetcherService *fetcherService_;
    NSString *userAgentAddition_;
    NSMutableDictionary *serviceProperties_;
    NSDictionary *surrogates_;
    SEL uploadProgressSelector_;
    CDUnknownBlockType retryBlock_;
    CDUnknownBlockType uploadProgressBlock_;
    CDUnknownBlockType testBlock_;
    unsigned int uploadChunkSize_;
    BOOL isRetryEnabled_;
    SEL retrySelector_;
    double maxRetryInterval_;
    BOOL shouldFetchNextPages_;
    BOOL allowInsecureQueries_;
    NSString *apiKey_;
    BOOL isRESTDataWrapperRequired_;
    NSString *apiVersion_;
    NSURL *rpcURL_;
    NSURL *rpcUploadURL_;
    NSDictionary *urlQueryParameters_;
    NSDictionary *additionalHTTPHeaders_;
}

+ (unsigned int)defaultServiceUploadChunkSize;
+ (void)invokeCallback:(SEL)arg1 target:(id)arg2 ticket:(id)arg3 object:(id)arg4 error:(id)arg5;
+ (Class)ticketClass;
+ (id)mockServiceWithFakedObject:(id)arg1 fakedError:(id)arg2;
@property(copy, nonatomic) CDUnknownBlockType testBlock; // @synthesize testBlock=testBlock_;
@property(copy) CDUnknownBlockType uploadProgressBlock; // @synthesize uploadProgressBlock=uploadProgressBlock_;
@property(copy) CDUnknownBlockType retryBlock; // @synthesize retryBlock=retryBlock_;
@property(nonatomic) BOOL allowInsecureQueries; // @synthesize allowInsecureQueries=allowInsecureQueries_;
@property(retain, nonatomic) NSURL *rpcUploadURL; // @synthesize rpcUploadURL=rpcUploadURL_;
@property(retain, nonatomic) NSURL *rpcURL; // @synthesize rpcURL=rpcURL_;
@property(copy, nonatomic) NSString *apiVersion; // @synthesize apiVersion=apiVersion_;
@property(copy) NSDictionary *additionalHTTPHeaders; // @synthesize additionalHTTPHeaders=additionalHTTPHeaders_;
@property(copy) NSDictionary *urlQueryParameters; // @synthesize urlQueryParameters=urlQueryParameters_;
@property(nonatomic) BOOL isRESTDataWrapperRequired; // @synthesize isRESTDataWrapperRequired=isRESTDataWrapperRequired_;
@property(copy, nonatomic) NSString *APIKey; // @synthesize APIKey=apiKey_;
@property(nonatomic) double maxRetryInterval; // @synthesize maxRetryInterval=maxRetryInterval_;
@property(nonatomic) SEL retrySelector; // @synthesize retrySelector=retrySelector_;
@property(nonatomic, getter=isRetryEnabled) BOOL retryEnabled; // @synthesize retryEnabled=isRetryEnabled_;
@property(nonatomic) SEL uploadProgressSelector; // @synthesize uploadProgressSelector=uploadProgressSelector_;
@property(retain, nonatomic) NSDictionary *surrogates; // @synthesize surrogates=surrogates_;
@property(nonatomic) BOOL shouldFetchNextPages; // @synthesize shouldFetchNextPages=shouldFetchNextPages_;
@property(retain, nonatomic) NSOperationQueue *parseQueue; // @synthesize parseQueue=parseQueue_;
@property(retain, nonatomic) GTMHTTPFetcherService *fetcherService; // @synthesize fetcherService=fetcherService_;
@property(copy, nonatomic) NSString *userAgentAddition; // @synthesize userAgentAddition=userAgentAddition_;
@property(nonatomic) unsigned int serviceUploadChunkSize;
@property(retain, nonatomic) id <GTMFetcherAuthorizationProtocol> authorizer;
@property(retain, nonatomic) id serviceUserData;
- (id)servicePropertyForKey:(id)arg1;
- (void)setServiceProperty:(id)arg1 forKey:(id)arg2;
@property(copy, nonatomic) NSDictionary *serviceProperties;
@property(retain, nonatomic) NSArray *runLoopModes;
@property(retain, nonatomic) NSOperationQueue *delegateQueue;
@property(nonatomic) BOOL shouldFetchInBackground;
@property(nonatomic) int cookieStorageMethod;
@property(copy, nonatomic) NSString *userAgent;
- (void)setExactUserAgent:(id)arg1;
- (id)deleteResourceURL:(id)arg1 ETag:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)fetchObjectByUpdatingObject:(id)arg1 forURL:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)fetchObjectByInsertingObject:(id)arg1 forURL:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)fetchObjectWithURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)deleteResourceURL:(id)arg1 ETag:(id)arg2 delegate:(id)arg3 didFinishSelector:(SEL)arg4;
- (id)fetchObjectByUpdatingObject:(id)arg1 forURL:(id)arg2 delegate:(id)arg3 didFinishSelector:(SEL)arg4;
- (id)fetchObjectByInsertingObject:(id)arg1 forURL:(id)arg2 delegate:(id)arg3 didFinishSelector:(SEL)arg4;
- (id)fetchObjectWithURL:(id)arg1 objectClass:(Class)arg2 delegate:(id)arg3 didFinishSelector:(SEL)arg4;
- (id)fetchPublicObjectWithURL:(id)arg1 objectClass:(Class)arg2 delegate:(id)arg3 didFinishSelector:(SEL)arg4;
- (id)fetchObjectWithURL:(id)arg1 delegate:(id)arg2 didFinishSelector:(SEL)arg3;
- (id)fetchObjectWithMethodNamed:(id)arg1 parameters:(id)arg2 insertingObject:(id)arg3 objectClass:(Class)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)fetchObjectWithMethodNamed:(id)arg1 insertingObject:(id)arg2 objectClass:(Class)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)fetchObjectWithMethodNamed:(id)arg1 parameters:(id)arg2 objectClass:(Class)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)fetchObjectWithMethodNamed:(id)arg1 parameters:(id)arg2 insertingObject:(id)arg3 objectClass:(Class)arg4 delegate:(id)arg5 didFinishSelector:(SEL)arg6;
- (id)fetchObjectWithMethodNamed:(id)arg1 insertingObject:(id)arg2 objectClass:(Class)arg3 delegate:(id)arg4 didFinishSelector:(SEL)arg5;
- (id)fetchObjectWithMethodNamed:(id)arg1 parameters:(id)arg2 objectClass:(Class)arg3 delegate:(id)arg4 didFinishSelector:(SEL)arg5;
- (id)executeQuery:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)executeQuery:(id)arg1 delegate:(id)arg2 didFinishSelector:(SEL)arg3;
- (id)mergedNewResultObject:(id)arg1 oldResultObject:(id)arg2 forQuery:(id)arg3;
- (BOOL)fetchNextPageWithQuery:(id)arg1 delegate:(id)arg2 didFinishedSelector:(SEL)arg3 completionHandler:(CDUnknownBlockType)arg4 ticket:(id)arg5;
- (id)nextPageQueryForQuery:(id)arg1 result:(id)arg2 ticket:(id)arg3;
- (BOOL)invokeRetrySelector:(SEL)arg1 delegate:(id)arg2 ticket:(id)arg3 willRetry:(BOOL)arg4 error:(id)arg5;
- (BOOL)objectFetcher:(id)arg1 willRetry:(BOOL)arg2 forError:(id)arg3;
- (unsigned long long)simulatedUploadLengthForQuery:(id)arg1 dataToPost:(id)arg2;
- (void)simulateFetchWithTicket:(id)arg1 testBlock:(CDUnknownBlockType)arg2 dataToPost:(id)arg3 delegate:(id)arg4 didFinishSelector:(SEL)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)invokeBatchCompletionsWithTicket:(id)arg1 batchQuery:(id)arg2 batchResult:(id)arg3 error:(id)arg4;
- (void)handleParsedObjectForFetcher:(id)arg1;
- (void)parseObjectFromDataOfFetcher:(id)arg1;
- (void)prepareToParseObjectForFetcher:(id)arg1;
- (void)objectFetcher:(id)arg1 finishedWithData:(id)arg2 error:(id)arg3;
- (void)objectFetcher:(id)arg1 didSendBytes:(int)arg2 totalBytesSent:(int)arg3 totalBytesExpectedToSend:(int)arg4;
- (void)invokeProgressCallbackForTicket:(id)arg1 deliveredBytes:(unsigned long long)arg2 totalBytes:(unsigned long long)arg3;
- (id)fetchObjectWithURL:(id)arg1 objectClass:(Class)arg2 bodyObject:(id)arg3 ETag:(id)arg4 httpMethod:(id)arg5 mayAuthorize:(BOOL)arg6 delegate:(id)arg7 didFinishSelector:(SEL)arg8 completionHandler:(CDUnknownBlockType)arg9 ticket:(id)arg10;
- (id)executeBatchQuery:(id)arg1 delegate:(id)arg2 didFinishSelector:(SEL)arg3 completionHandler:(CDUnknownBlockType)arg4 ticket:(id)arg5;
- (id)fetchObjectWithMethodNamed:(id)arg1 objectClass:(Class)arg2 parameters:(id)arg3 bodyObject:(id)arg4 requestID:(id)arg5 urlQueryParameters:(id)arg6 delegate:(id)arg7 didFinishSelector:(SEL)arg8 completionHandler:(CDUnknownBlockType)arg9 executingQuery:(id)arg10 ticket:(id)arg11;
- (id)rpcPayloadForMethodNamed:(id)arg1 parameters:(id)arg2 bodyObject:(id)arg3 requestID:(id)arg4;
- (id)uploadFetcherWithRequest:(id)arg1 fetcherService:(id)arg2 params:(id)arg3;
- (id)fetchObjectWithURL:(id)arg1 objectClass:(Class)arg2 bodyObject:(id)arg3 dataToPost:(id)arg4 ETag:(id)arg5 httpMethod:(id)arg6 mayAuthorize:(BOOL)arg7 isREST:(BOOL)arg8 delegate:(id)arg9 didFinishSelector:(SEL)arg10 completionHandler:(CDUnknownBlockType)arg11 executingQuery:(id)arg12 ticket:(id)arg13;
- (id)objectRequestForURL:(id)arg1 object:(id)arg2 ETag:(id)arg3 httpMethod:(id)arg4 isREST:(BOOL)arg5 additionalHeaders:(id)arg6 ticket:(id)arg7;
- (id)requestForURL:(id)arg1 ETag:(id)arg2 httpMethod:(id)arg3;
- (id)requestForURL:(id)arg1 ETag:(id)arg2 httpMethod:(id)arg3 ticket:(id)arg4;
@property(readonly, nonatomic) NSString *requestUserAgent;
- (void)dealloc;
- (id)init;
- (BOOL)waitForTicket:(id)arg1 timeout:(double)arg2 fetchedObject:(id *)arg3 error:(id *)arg4;

@end

