//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "JavaIoSerializable.h"
#import "JavaUtilConcurrentLocksCondition.h"

@class JavaUtilConcurrentLocksAbstractQueuedSynchronizer, JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node, NSString;

@interface JavaUtilConcurrentLocksAbstractQueuedSynchronizer_ConditionObject : NSObject <JavaUtilConcurrentLocksCondition, JavaIoSerializable>
{
    JavaUtilConcurrentLocksAbstractQueuedSynchronizer *this$0_;
    JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node *firstWaiter_;
    JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node *lastWaiter_;
}

+ (const struct J2ObjcClassInfo *)__metadata;
- (void)dealloc;
- (id)getWaitingThreads;
- (int)getWaitQueueLength;
- (BOOL)hasWaiters;
- (BOOL)isOwnedByWithJavaUtilConcurrentLocksAbstractQueuedSynchronizer:(id)arg1;
- (BOOL)awaitWithLong:(long long)arg1 withJavaUtilConcurrentTimeUnitEnum:(id)arg2;
- (BOOL)awaitUntilWithJavaUtilDate:(id)arg1;
- (long long)awaitNanosWithLong:(long long)arg1;
- (void)await;
- (void)reportInterruptAfterWaitWithInt:(int)arg1;
- (int)checkInterruptWhileWaitingWithJavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node:(id)arg1;
- (void)awaitUninterruptibly;
- (void)signalAll;
- (void)signal;
- (void)unlinkCancelledWaiters;
- (void)doSignalAllWithJavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node:(id)arg1;
- (void)doSignalWithJavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node:(id)arg1;
- (id)addConditionWaiter;
- (id)initWithJavaUtilConcurrentLocksAbstractQueuedSynchronizer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

