//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@interface ComGoogleCommonUtilConcurrentMoreExecutors : NSObject
{
}

+ (const struct J2ObjcClassInfo *)__metadata;
+ (id)__annotations_sameThreadExecutor;
+ (BOOL)shutdownAndAwaitTerminationWithJavaUtilConcurrentExecutorService:(id)arg1 withLong:(long long)arg2 withJavaUtilConcurrentTimeUnitEnum:(id)arg3;
+ (id)renamingDecoratorWithJavaUtilConcurrentScheduledExecutorService:(id)arg1 withComGoogleCommonBaseSupplier:(id)arg2;
+ (id)renamingDecoratorWithJavaUtilConcurrentExecutorService:(id)arg1 withComGoogleCommonBaseSupplier:(id)arg2;
+ (id)renamingDecoratorWithJavaUtilConcurrentExecutor:(id)arg1 withComGoogleCommonBaseSupplier:(id)arg2;
+ (id)newThreadWithNSString:(id)arg1 withJavaLangRunnable:(id)arg2;
+ (BOOL)isAppEngine;
+ (id)platformThreadFactory;
+ (id)submitAndAddQueueListenerWithComGoogleCommonUtilConcurrentListeningExecutorService:(id)arg1 withJavaUtilConcurrentCallable:(id)arg2 withJavaUtilConcurrentBlockingQueue:(id)arg3;
+ (id)invokeAnyImplWithComGoogleCommonUtilConcurrentListeningExecutorService:(id)arg1 withJavaUtilCollection:(id)arg2 withBoolean:(BOOL)arg3 withLong:(long long)arg4;
+ (id)listeningDecoratorWithJavaUtilConcurrentScheduledExecutorService:(id)arg1;
+ (id)listeningDecoratorWithJavaUtilConcurrentExecutorService:(id)arg1;
+ (id)directExecutor;
+ (id)newDirectExecutorService;
+ (id)sameThreadExecutor;
+ (void)useDaemonThreadFactoryWithJavaUtilConcurrentThreadPoolExecutor:(id)arg1;
+ (id)getExitingScheduledExecutorServiceWithJavaUtilConcurrentScheduledThreadPoolExecutor:(id)arg1;
+ (id)getExitingExecutorServiceWithJavaUtilConcurrentThreadPoolExecutor:(id)arg1;
+ (void)addDelayedShutdownHookWithJavaUtilConcurrentExecutorService:(id)arg1 withLong:(long long)arg2 withJavaUtilConcurrentTimeUnitEnum:(id)arg3;
+ (id)getExitingScheduledExecutorServiceWithJavaUtilConcurrentScheduledThreadPoolExecutor:(id)arg1 withLong:(long long)arg2 withJavaUtilConcurrentTimeUnitEnum:(id)arg3;
+ (id)getExitingExecutorServiceWithJavaUtilConcurrentThreadPoolExecutor:(id)arg1 withLong:(long long)arg2 withJavaUtilConcurrentTimeUnitEnum:(id)arg3;
- (id)init;

@end

