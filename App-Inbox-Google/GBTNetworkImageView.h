//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIControl.h"

#import "GBTNetworkImageFilterOperationDelegate.h"
#import "GBTNetworkImageOperationDelegate.h"

@class GBTNetworkImageFilterOperation, GBTNetworkImageOperation, NSArray, NSString, UIImage, UIImageView;

@interface GBTNetworkImageView : UIControl <GBTNetworkImageFilterOperationDelegate, GBTNetworkImageOperationDelegate>
{
    int contentMode_;
    GBTNetworkImageFilterOperation *filterOperation_;
    BOOL hasSmallImage_;
    BOOL hasSmallThumbnail_;
    UIImageView *imageView_;
    GBTNetworkImageOperation *networkImage_;
    UIImageView *placeholderImageView_;
    GBTNetworkImageFilterOperation *thumbnailFilterOperation_;
    UIImageView *thumbnailImageView_;
    GBTNetworkImageOperation *thumbnailNetworkImage_;
    BOOL centerSmallImages_;
    BOOL onlyShowDefaultImage_;
    BOOL scaleSmallImages_;
    NSString *imageUrl_;
    NSString *thumbnailUrl_;
    unsigned int _cacheType;
    NSArray *_allowedInsecureImageURLSchemes;
    id <GBTNetworkImageViewDelegate> _delegate;
    CDUnknownBlockType _filter;
}

+ (BOOL)isSmallImage:(id)arg1 forViewSize:(struct CGSize)arg2;
+ (id)imageUrlFromImage:(id)arg1 size:(struct CGSize)arg2 cropType:(unsigned int)arg3;
+ (id)imageUrlFromImage:(id)arg1 size:(struct CGSize)arg2;
+ (void)initialize;
@property(copy, nonatomic) CDUnknownBlockType filter; // @synthesize filter=_filter;
@property(nonatomic) __weak id <GBTNetworkImageViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSArray *allowedInsecureImageURLSchemes; // @synthesize allowedInsecureImageURLSchemes=_allowedInsecureImageURLSchemes;
@property(nonatomic) unsigned int cacheType; // @synthesize cacheType=_cacheType;
@property(copy, nonatomic) NSString *thumbnailUrl; // @synthesize thumbnailUrl=thumbnailUrl_;
@property(nonatomic) BOOL scaleSmallImages; // @synthesize scaleSmallImages=scaleSmallImages_;
@property(nonatomic) BOOL onlyShowDefaultImage; // @synthesize onlyShowDefaultImage=onlyShowDefaultImage_;
@property(copy, nonatomic) NSString *imageUrl; // @synthesize imageUrl=imageUrl_;
@property(nonatomic) BOOL centerSmallImages; // @synthesize centerSmallImages=centerSmallImages_;
- (void).cxx_destruct;
- (void)updateImageViewAlphas;
- (void)loadImage:(id)arg1 isThumbnail:(BOOL)arg2;
- (id)convertToAbsoluteUrl:(id)arg1;
- (BOOL)isSmallImage:(id)arg1;
- (void)updateContentModeForSmallImage:(BOOL)arg1 onImageView:(id)arg2;
@property(readonly, nonatomic) float innerPadding;
- (void)createSubviews;
- (void)cancelNetworkImage:(BOOL)arg1 cancelFilter:(BOOL)arg2 forThumbnail:(BOOL)arg3;
- (id)cacheKeyWithThumbnail:(BOOL)arg1;
- (void)networkImageOperationFailedToFetchImage:(id)arg1;
- (void)networkImageOperation:(id)arg1 didFetchImage:(id)arg2;
- (void)filterOperation:(id)arg1 didFilterImage:(id)arg2;
@property(readonly, nonatomic) UIImage *thumbnail;
@property(readonly, nonatomic) BOOL isShowingSmallImage;
@property(readonly, nonatomic) UIImage *image;
- (void)setImage:(id)arg1 animated:(BOOL)arg2 isThumbnail:(BOOL)arg3;
- (void)setImage:(id)arg1 isThumbnail:(BOOL)arg2;
@property(nonatomic) int defaultImageContentMode;
@property(retain, nonatomic) UIImage *defaultImage;
- (int)contentMode;
- (void)setContentMode:(int)arg1;
@property(readonly, nonatomic) id <GIPCache> cache;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

