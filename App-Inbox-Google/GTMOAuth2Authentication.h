//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "GTMFetcherAuthorizationProtocol.h"

@class GTMHTTPFetcher, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSNumber, NSString, NSURL, SSOIdentity;

@interface GTMOAuth2Authentication : NSObject <GTMFetcherAuthorizationProtocol>
{
    NSString *clientID_;
    NSString *clientSecret_;
    NSString *redirectURI_;
    NSMutableDictionary *parameters_;
    NSURL *tokenURL_;
    NSDate *expirationDate_;
    NSString *authorizationTokenKey_;
    NSDictionary *additionalTokenRequestParameters_;
    NSDictionary *additionalGrantTypeRequestParameters_;
    GTMHTTPFetcher *refreshFetcher_;
    NSMutableArray *authorizationQueue_;
    id <GTMHTTPFetcherServiceProtocol> fetcherService_;
    Class parserClass_;
    BOOL shouldAuthorizeAllRequests_;
    id userData_;
    NSMutableDictionary *properties_;
}

+ (id)scopeWithStrings:(id)arg1;
+ (id)dictionaryWithResponseData:(id)arg1;
+ (id)dictionaryWithResponseString:(id)arg1;
+ (id)unencodedOAuthParameterForString:(id)arg1;
+ (void)invokeDelegate:(id)arg1 selector:(SEL)arg2 object:(id)arg3 object:(id)arg4 object:(id)arg5;
+ (id)encodedQueryParametersForDictionary:(id)arg1;
+ (id)encodedOAuthValueForString:(id)arg1;
+ (id)dictionaryWithJSONData:(id)arg1;
+ (id)authenticationWithServiceProvider:(id)arg1 tokenURL:(id)arg2 redirectURI:(id)arg3 clientID:(id)arg4 clientSecret:(id)arg5;
@property(retain) NSMutableArray *authorizationQueue; // @synthesize authorizationQueue=authorizationQueue_;
@property(retain) NSDictionary *properties; // @synthesize properties=properties_;
@property(retain) id userData; // @synthesize userData=userData_;
@property BOOL shouldAuthorizeAllRequests; // @synthesize shouldAuthorizeAllRequests=shouldAuthorizeAllRequests_;
@property Class parserClass; // @synthesize parserClass=parserClass_;
@property id <GTMHTTPFetcherServiceProtocol> fetcherService; // @synthesize fetcherService=fetcherService_;
@property(retain) GTMHTTPFetcher *refreshFetcher; // @synthesize refreshFetcher=refreshFetcher_;
@property(retain) NSDictionary *additionalGrantTypeRequestParameters; // @synthesize additionalGrantTypeRequestParameters=additionalGrantTypeRequestParameters_;
@property(retain) NSDictionary *additionalTokenRequestParameters; // @synthesize additionalTokenRequestParameters=additionalTokenRequestParameters_;
@property(copy) NSDate *expirationDate; // @synthesize expirationDate=expirationDate_;
@property(copy) NSURL *tokenURL; // @synthesize tokenURL=tokenURL_;
@property(copy) NSString *authorizationTokenKey; // @synthesize authorizationTokenKey=authorizationTokenKey_;
@property(retain) NSMutableDictionary *parameters; // @synthesize parameters=parameters_;
@property(copy) NSString *redirectURI; // @synthesize redirectURI=redirectURI_;
@property(copy) NSString *clientSecret; // @synthesize clientSecret=clientSecret_;
@property(copy) NSString *clientID; // @synthesize clientID=clientID_;
- (id)propertyForKey:(id)arg1;
- (void)setProperty:(id)arg1 forKey:(id)arg2;
@property(retain) NSString *userEmailIsVerified; // @dynamic userEmailIsVerified;
@property(retain) NSString *userEmail; // @dynamic userEmail;
@property(retain) NSString *userID;
@property(copy) NSString *serviceProvider; // @dynamic serviceProvider;
- (void)updateExpirationDate;
@property(retain) NSNumber *expiresIn; // @dynamic expiresIn;
@property(retain) NSString *scope; // @dynamic scope;
@property(retain) NSString *tokenType; // @dynamic tokenType;
@property(retain) NSString *errorString; // @dynamic errorString;
@property(retain) NSString *refreshScope; // @dynamic refreshScope;
@property(retain) NSString *assertion; // @dynamic assertion;
@property(retain) NSString *code; // @dynamic code;
@property(retain) NSString *refreshToken; // @dynamic refreshToken;
@property(retain) NSString *accessToken; // @dynamic accessToken;
@property(readonly) NSString *authorizationToken;
- (void)reset;
- (BOOL)primeForRefresh;
- (id)persistenceResponseString;
- (void)setKeysForPersistenceResponseString:(id)arg1;
- (void)notifyFetchIsRunning:(BOOL)arg1 fetcher:(id)arg2 type:(id)arg3;
- (void)tokenFetcher:(id)arg1 finishedWithData:(id)arg2 error:(id)arg3;
- (id)beginTokenFetchWithDelegate:(id)arg1 didFinishSelector:(SEL)arg2;
- (id)userAgent;
- (void)waitForCompletionWithTimeout:(double)arg1;
- (BOOL)shouldRefreshAccessToken;
@property(readonly) BOOL canAuthorize; // @dynamic canAuthorize;
- (BOOL)authorizeRequest:(id)arg1;
- (void)invokeCallbackArgs:(id)arg1;
- (BOOL)authorizeRequestImmediateArgs:(id)arg1;
- (void)stopAuthorizationForRequest:(id)arg1;
- (void)stopAuthorization;
- (BOOL)isAuthorizedRequest:(id)arg1;
- (BOOL)isAuthorizingRequest:(id)arg1;
- (void)auth:(id)arg1 finishedRefreshWithFetcher:(id)arg2 error:(id)arg3;
- (BOOL)authorizeRequestArgs:(id)arg1;
- (void)authorizeRequest:(id)arg1 delegate:(id)arg2 didFinishSelector:(SEL)arg3;
- (void)authorizeRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)setKeysForResponseJSONData:(id)arg1;
- (void)setKeysForResponseString:(id)arg1;
- (void)setKeysForResponseDictionary:(id)arg1;
- (void)dealloc;
@property(readonly, copy) NSString *description;
- (id)init;
@property(readonly, nonatomic) SSOIdentity *identity;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

