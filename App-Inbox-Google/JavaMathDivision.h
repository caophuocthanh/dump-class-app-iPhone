//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@interface JavaMathDivision : NSObject
{
}

+ (const struct J2ObjcClassInfo *)__metadata;
+ (void)inplaceModPow2WithJavaMathBigInteger:(id)arg1 withInt:(int)arg2;
+ (id)modPow2InverseWithJavaMathBigInteger:(id)arg1 withInt:(int)arg2;
+ (id)finalSubtractionWithIntArray:(id)arg1 withJavaMathBigInteger:(id)arg2;
+ (id)monProWithJavaMathBigInteger:(id)arg1 withJavaMathBigInteger:(id)arg2 withJavaMathBigInteger:(id)arg3 withInt:(int)arg4;
+ (void)monReductionWithIntArray:(id)arg1 withJavaMathBigInteger:(id)arg2 withInt:(int)arg3;
+ (id)pow2ModPowWithJavaMathBigInteger:(id)arg1 withJavaMathBigInteger:(id)arg2 withInt:(int)arg3;
+ (id)evenModPowWithJavaMathBigInteger:(id)arg1 withJavaMathBigInteger:(id)arg2 withJavaMathBigInteger:(id)arg3;
+ (id)oddModPowWithJavaMathBigInteger:(id)arg1 withJavaMathBigInteger:(id)arg2 withJavaMathBigInteger:(id)arg3;
+ (id)slidingWindowWithJavaMathBigInteger:(id)arg1 withJavaMathBigInteger:(id)arg2 withJavaMathBigInteger:(id)arg3 withJavaMathBigInteger:(id)arg4 withInt:(int)arg5;
+ (id)modInverseHarsWithJavaMathBigInteger:(id)arg1 withJavaMathBigInteger:(id)arg2;
+ (id)squareAndMultiplyWithJavaMathBigInteger:(id)arg1 withJavaMathBigInteger:(id)arg2 withJavaMathBigInteger:(id)arg3 withJavaMathBigInteger:(id)arg4 withInt:(int)arg5;
+ (int)calcNWithJavaMathBigInteger:(id)arg1;
+ (id)modInverseMontgomeryWithJavaMathBigInteger:(id)arg1 withJavaMathBigInteger:(id)arg2;
+ (long long)gcdBinaryWithLong:(long long)arg1 withLong:(long long)arg2;
+ (id)gcdBinaryWithJavaMathBigInteger:(id)arg1 withJavaMathBigInteger:(id)arg2;
+ (int)multiplyAndSubtractWithIntArray:(id)arg1 withInt:(int)arg2 withIntArray:(id)arg3 withInt:(int)arg4 withInt:(int)arg5;
+ (id)divideAndRemainderByIntegerWithJavaMathBigInteger:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (long long)divideLongByIntWithLong:(long long)arg1 withInt:(int)arg2;
+ (int)remainderWithJavaMathBigInteger:(id)arg1 withInt:(int)arg2;
+ (int)remainderArrayByIntWithIntArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (int)divideArrayByIntWithIntArray:(id)arg1 withIntArray:(id)arg2 withInt:(int)arg3 withInt:(int)arg4;
+ (id)divideWithIntArray:(id)arg1 withInt:(int)arg2 withIntArray:(id)arg3 withInt:(int)arg4 withIntArray:(id)arg5 withInt:(int)arg6;
- (id)init;

@end

