//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "JavaUtilAbstractMap.h"

#import "JavaIoSerializable.h"
#import "JavaUtilConcurrentConcurrentMap.h"

@class JavaUtilConcurrentConcurrentHashMap_EntrySetView, JavaUtilConcurrentConcurrentHashMap_KeySetView, JavaUtilConcurrentConcurrentHashMap_ValuesView, NSString;

@interface JavaUtilConcurrentConcurrentHashMap : JavaUtilAbstractMap <JavaUtilConcurrentConcurrentMap, JavaIoSerializable>
{
    // Error parsing type: A^v, name: table_
    // Error parsing type: A^v, name: nextTable_
    // Error parsing type: Aq, name: baseCount_
    // Error parsing type: Ai, name: sizeCtl_
    // Error parsing type: Ai, name: transferIndex_
    // Error parsing type: Ai, name: cellsBusy_
    // Error parsing type: A^v, name: counterCells_
    JavaUtilConcurrentConcurrentHashMap_KeySetView *keySet_ConcurrentHashMap_;
    JavaUtilConcurrentConcurrentHashMap_ValuesView *values_;
    JavaUtilConcurrentConcurrentHashMap_EntrySetView *entrySet_;
}

+ (const struct J2ObjcClassInfo *)__metadata;
+ (void)initialize;
+ (void)ensureLoadedWithIOSClass:(id)arg1;
+ (id)untreeifyWithJavaUtilConcurrentConcurrentHashMap_Node:(id)arg1;
+ (int)resizeStampWithInt:(int)arg1;
+ (id)newKeySetWithInt:(int)arg1;
+ (id)newKeySet;
+ (void)setTabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray:(id)arg1 withInt:(int)arg2 withJavaUtilConcurrentConcurrentHashMap_Node:(id)arg3;
+ (BOOL)casTabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray:(id)arg1 withInt:(int)arg2 withJavaUtilConcurrentConcurrentHashMap_Node:(id)arg3 withJavaUtilConcurrentConcurrentHashMap_Node:(id)arg4;
+ (id)tabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray:(id)arg1 withInt:(int)arg2;
+ (int)compareComparablesWithIOSClass:(id)arg1 withId:(id)arg2 withId:(id)arg3;
+ (id)comparableClassForWithId:(id)arg1;
+ (int)tableSizeForWithInt:(int)arg1;
+ (int)spreadWithInt:(int)arg1;
- (void)__javaClone;
- (void)dealloc;
- (void)fullAddCountWithLong:(long long)arg1 withJavaUtilConcurrentConcurrentHashMap_CounterHashCode:(id)arg2 withBoolean:(BOOL)arg3;
- (long long)sumCount;
- (void)treeifyBinWithJavaUtilConcurrentConcurrentHashMap_NodeArray:(id)arg1 withInt:(int)arg2;
- (void)transferWithJavaUtilConcurrentConcurrentHashMap_NodeArray:(id)arg1 withJavaUtilConcurrentConcurrentHashMap_NodeArray:(id)arg2;
- (void)tryPresizeWithInt:(int)arg1;
- (id)helpTransferWithJavaUtilConcurrentConcurrentHashMap_NodeArray:(id)arg1 withJavaUtilConcurrentConcurrentHashMap_Node:(id)arg2;
- (void)addCountWithLong:(long long)arg1 withInt:(int)arg2;
- (id)initTable;
- (id)keySetWithId:(id)arg1;
- (long long)mappingCount;
- (id)elements;
- (id)keys;
- (BOOL)containsWithId:(id)arg1;
- (id)replaceWithId:(id)arg1 withId:(id)arg2;
- (BOOL)replaceWithId:(id)arg1 withId:(id)arg2 withId:(id)arg3;
- (BOOL)removeWithId:(id)arg1 withId:(id)arg2;
- (id)putIfAbsentWithId:(id)arg1 withId:(id)arg2;
- (void)readObjectWithJavaIoObjectInputStream:(id)arg1;
- (void)writeObjectWithJavaIoObjectOutputStream:(id)arg1;
- (BOOL)isEqual:(id)arg1;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
- (id)entrySet;
- (id)values;
- (id)keySet;
- (void)clear;
- (id)replaceNodeWithId:(id)arg1 withId:(id)arg2 withId:(id)arg3;
- (id)removeWithId:(id)arg1;
- (void)putAllWithJavaUtilMap:(id)arg1;
- (id)putValWithId:(id)arg1 withId:(id)arg2 withBoolean:(BOOL)arg3;
- (id)putWithId:(id)arg1 withId:(id)arg2;
- (BOOL)containsValueWithId:(id)arg1;
- (BOOL)containsKeyWithId:(id)arg1;
- (id)getWithId:(id)arg1;
- (BOOL)isEmpty;
- (int)size;
- (id)initWithInt:(int)arg1 withFloat:(float)arg2 withInt:(int)arg3;
- (id)initWithInt:(int)arg1 withFloat:(float)arg2;
- (id)initWithJavaUtilMap:(id)arg1;
- (id)initWithInt:(int)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

