//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "JBTConversationMessage.h"

@class ComGoogleAppsBigtopSyncClientImplSmartmailGenericSmartMailExpansionManager, JBTCCachedValue, JBTCMessageData, JBTExpandableElement_ExpansionStateEnum, JBTICommonAttachmentFilter, JBTICommonAttachmentSorter, JBTICommonMultiLoginUrlRewriter, JBTICommonSapiSpan_Factory, JBTICommonUserInfo, JBTIConversationConversationFactory, JBTIConversationCustomFromSettings, JBTIConversationExpansionManager, JBTISmartMailAttachmentFromConversationImpl_SmartMailAttachmentFactory, JBTISmartMailSmartMailServices, NSString;

@interface JBTIConversationConversationMessageImpl : NSObject <JBTConversationMessage>
{
    JBTCMessageData *messageData_;
    id <JBTId> ownerConversationId_;
    JBTICommonUserInfo *userInfo_;
    JBTIConversationCustomFromSettings *customFromSettings_;
    JBTCCachedValue *to_;
    JBTCCachedValue *cc_;
    JBTCCachedValue *bcc_;
    JBTIConversationExpansionManager *expansionManager_;
    id <JBTId> id__;
    JBTICommonMultiLoginUrlRewriter *multiLoginUrlRewriter_;
    JBTIConversationConversationFactory *conversationFactory_;
    JBTCCachedValue *previewableAttachments_;
    JBTCCachedValue *separateAttachments_;
    JBTCCachedValue *attachments_;
    JBTICommonSapiSpan_Factory *sapiSpanFactory_;
    JBTICommonAttachmentSorter *messageAttachmentSorter_;
    JBTICommonAttachmentFilter *inlineAttachmentFilter_;
    JBTISmartMailAttachmentFromConversationImpl_SmartMailAttachmentFactory *attachmentFactory_;
    id <JBTISmartMailSmartMailCommandApplier_SmartMailTransactionFactory> smartMailTransactionFactory_;
    ComGoogleAppsBigtopSyncClientImplSmartmailGenericSmartMailExpansionManager *smartMailExpansionManager_;
    id <JBTSpamPhishyData> spamPhishyData_;
    JBTISmartMailSmartMailServices *smartMailServices_;
    id <ComGoogleAppsXplatLoggingEventsEventLogger> smartreplyEventLogger_;
    id <ComGoogleCumulusCommonUtilClock> clock_;
    id <JBTContact> senderContact_;
    JBTExpandableElement_ExpansionStateEnum *state_;
    BOOL isFixed_;
}

+ (const struct J2ObjcClassInfo *)__metadata;
+ (id)__annotations_getReplyToMessage;
+ (id)__annotations_getInlineAttachmentForEmbeddedUrlWithNSString_;
+ (id)__annotations_getFullMessageUrl;
+ (id)__annotations_canReplyAllAsyncWithJBTCallback_withJBTSpan__params;
+ (id)__annotations_canReplyAll;
+ (id)__annotations_getPreviewableAttachments;
+ (id)__annotations_createResponseAsyncWithJBTConversationMessageDraft_ResponseTypeEnum_withJBTCallback_withJBTSpan__params;
+ (id)__annotations_createResponseWithJBTConversationMessageDraft_ResponseTypeEnum_;
+ (id)__annotations_editAsyncWithJBTCallback_withJBTSpan__params;
+ (id)__annotations_edit;
+ (id)__annotations_isExpanded;
+ (id)__annotations_getBodyPlainText;
+ (id)__annotations_equalsWithId__params;
+ (id)__annotations_getSenderContact;
+ (id)__annotations_getSender;
+ (id)__annotations_getSenderReference;
+ (id)__annotations_getSenderName;
+ (id)__annotations_getSenderEmail;
+ (id)__annotations_getSnippet;
+ (id)__annotations_getDate;
+ (void)initialize;
- (void)dealloc;
- (id)escapeAngleBracketWithNSString:(id)arg1;
- (id)getMessageData;
- (id)getReplyToMessage;
@property(readonly, copy) NSString *description;
- (id)getInlineAttachmentForEmbeddedUrlWithNSString:(id)arg1;
- (id)getDebugStringForSmartreplyBadSuggestionReport;
- (void)logSmartreplyEventWithComGoogleCaribouSmartreplyProtoEventType_SmartreplyEventTypeEnum:(id)arg1 withJavaUtilList:(id)arg2;
- (id)getSmartreplySuggestions;
- (id)getFullMessageUrl;
- (BOOL)isFromMeOrAliasWithJavaUtilList:(id)arg1;
- (BOOL)isFromMe;
- (id)createSmartMailComponentContextForAttachment;
- (id)getSpamDisplayReason;
- (BOOL)hasSpamPhishyReason;
- (BOOL)isPhishy;
- (BOOL)isSpam;
- (id)getSpamPhishyData;
- (id)getDefaultResponseType;
- (id)getBcc;
- (id)getCc;
- (id)getTo;
- (id)getConversationId;
- (id)getProto;
- (void)setFixedWithBoolean:(BOOL)arg1;
- (BOOL)canCollapse;
- (BOOL)canExpand;
- (void)setExpansionStateWithJBTExpandableElement_ExpansionStateEnum:(id)arg1;
- (id)getExpansionState;
- (void)canReplyAllAsyncWithJBTCallback:(id)arg1 withJBTSpan:(id)arg2;
- (BOOL)canReplyAll;
- (id)getBccRecipients;
- (id)getCcRecipients;
- (id)getToRecipients;
- (id)getRecipientsSummaryWithInt:(int)arg1;
- (id)getPreviewableAttachments;
- (id)getSeparateAttachments;
- (id)getAttachments;
- (BOOL)isCancelingSend;
- (BOOL)isSending;
- (void)createResponseAsyncWithJBTConversationMessageDraft_ResponseTypeEnum:(id)arg1 withJBTCallback:(id)arg2 withJBTSpan:(id)arg3;
- (id)createResponseWithJBTConversationMessageDraft_ResponseTypeEnum:(id)arg1;
- (void)editAsyncWithJBTCallback:(id)arg1 withJBTSpan:(id)arg2;
- (id)edit;
- (BOOL)isPersonal;
- (BOOL)isUnread;
- (BOOL)isDraft;
- (id)getProtoStringForDebugging;
- (void)collapse;
- (void)expand;
- (BOOL)isExpanded;
- (BOOL)isDigitallySigned;
- (BOOL)isHighEncrypted;
- (BOOL)isClipped;
- (id)getBodyPlainText;
- (id)getBodyHtmlRegions;
- (id)getSenderSummary;
@property(readonly) unsigned int hash;
- (BOOL)isEqual:(id)arg1;
- (void)setSenderContactWithJBTContact:(id)arg1;
- (id)getSubject;
- (id)getSenderContact;
- (id)getSender;
- (id)getSenderReference;
- (id)getSenderName;
- (id)getSenderEmail;
- (id)getSnippet;
- (int)getReceivedTimeSec;
- (long long)getDate;
- (id)getElementId;
- (id)getId;
- (id)initWithJBTCMessageData:(id)arg1 withJBTId:(id)arg2 withJBTICommonUserInfo:(id)arg3 withJBTIConversationCustomFromSettings:(id)arg4 withJBTIConversationExpansionManager:(id)arg5 withJBTICommonMultiLoginUrlRewriter:(id)arg6 withJBTIConversationConversationFactory:(id)arg7 withJBTICommonSapiSpan_Factory:(id)arg8 withJBTICommonAttachmentSorter:(id)arg9 withJBTISmartMailAttachmentFromConversationImpl_SmartMailAttachmentFactory:(id)arg10 withJBTISmartMailSmartMailCommandApplier_SmartMailTransactionFactory:(id)arg11 withJBTISmartMailSmartMailServices:(id)arg12 withComGoogleAppsXplatLoggingEventsEventLogger:(id)arg13 withComGoogleCumulusCommonUtilClock:(id)arg14;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

