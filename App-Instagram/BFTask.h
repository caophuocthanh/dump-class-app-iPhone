//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSCondition, NSError, NSException, NSMutableArray;

@interface BFTask : NSObject
{
    id _result;
    NSError *_error;
    NSException *_exception;
    BOOL _cancelled;
    BOOL _faulted;
    BOOL _completed;
    NSObject *_lock;
    NSCondition *_condition;
    NSMutableArray *_callbacks;
}

+ (id)taskFromExecutor:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
+ (id)taskWithDelay:(int)arg1;
+ (id)taskForCompletionOfAllTasksWithResults:(id)arg1;
+ (id)taskForCompletionOfAllTasks:(id)arg1;
+ (id)cancelledTask;
+ (id)taskWithException:(id)arg1;
+ (id)taskWithError:(id)arg1;
+ (id)taskWithResult:(id)arg1;
@property(retain, nonatomic) NSMutableArray *callbacks; // @synthesize callbacks=_callbacks;
@property(retain, nonatomic) NSCondition *condition; // @synthesize condition=_condition;
@property(retain, nonatomic) NSObject *lock; // @synthesize lock=_lock;
@property(nonatomic, getter=isCompleted) BOOL completed; // @synthesize completed=_completed;
@property(nonatomic, getter=isFaulted) BOOL faulted; // @synthesize faulted=_faulted;
@property(nonatomic, getter=isCancelled) BOOL cancelled; // @synthesize cancelled=_cancelled;
- (void).cxx_destruct;
- (id)description;
- (void)waitUntilFinished;
- (void)warnOperationOnMainThread;
- (id)continueWithSuccessBlock:(CDUnknownBlockType)arg1;
- (id)continueWithExecutor:(id)arg1 withSuccessBlock:(CDUnknownBlockType)arg2;
- (id)continueWithBlock:(CDUnknownBlockType)arg1;
- (id)continueWithExecutor:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)runContinuations;
- (void)setCompleted;
- (BOOL)trySetCancelled;
- (void)cancel;
- (BOOL)trySetException:(id)arg1;
- (void)setException:(id)arg1;
@property(readonly, nonatomic) NSException *exception;
- (BOOL)trySetError:(id)arg1;
- (void)setError:(id)arg1;
@property(readonly, nonatomic) NSError *error;
- (BOOL)trySetResult:(id)arg1;
- (void)setResult:(id)arg1;
@property(readonly, nonatomic) id result;
- (id)init;

@end

