//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "PSPDFCacheDataDelegate.h"

@class NSOperationQueue, NSString, PSPDFCacheData, PSPDFDiskCacheDatabase, PSPDFKit, PSPDFOperationStack;

@interface PSPDFDiskCache : NSObject <PSPDFCacheDataDelegate>
{
    unsigned long long _usedDiskSpace;
    int _usedDiskSpaceLock;
    BOOL _cacheNeedsClearing;
    NSString *_fileFormat;
    PSPDFCacheData *_cacheData;
    NSString *_cacheDirectory;
    NSString *_fullCacheDirectory;
    NSOperationQueue *_writerQueue;
    PSPDFOperationStack *_readerStack;
    PSPDFDiskCacheDatabase *_database;
    PSPDFKit *_settings;
    unsigned long long _allowedDiskSpace;
}

@property(nonatomic) __weak PSPDFKit *settings; // @synthesize settings=_settings;
@property(retain, nonatomic) PSPDFDiskCacheDatabase *database; // @synthesize database=_database;
@property(retain, nonatomic) PSPDFOperationStack *readerStack; // @synthesize readerStack=_readerStack;
@property(retain, nonatomic) NSOperationQueue *writerQueue; // @synthesize writerQueue=_writerQueue;
@property(nonatomic) BOOL cacheNeedsClearing; // @synthesize cacheNeedsClearing=_cacheNeedsClearing;
@property(readonly, nonatomic) NSString *fullCacheDirectory; // @synthesize fullCacheDirectory=_fullCacheDirectory;
@property(readonly, nonatomic) NSString *cacheDirectory; // @synthesize cacheDirectory=_cacheDirectory;
@property(retain, nonatomic) PSPDFCacheData *cacheData; // @synthesize cacheData=_cacheData;
@property(copy, nonatomic) NSString *fileFormat; // @synthesize fileFormat=_fileFormat;
@property(nonatomic) unsigned long long allowedDiskSpace; // @synthesize allowedDiskSpace=_allowedDiskSpace;
- (void).cxx_destruct;
- (void)saveDiskCacheDatabase;
- (void)checkIfCacheEntriesExistOnDisk:(id)arg1;
- (id)loadDiskCache;
- (void)didClearCache;
- (void)willRemoveCacheInfo:(id)arg1;
- (void)didSetCacheInfo:(id)arg1;
- (void)willSetCacheInfo:(id)arg1 previousCacheInfo:(id)arg2;
- (void)performDiskMaintenance;
- (void)didReceiveMemoryWarning;
- (void)clearCache;
- (void)clearCacheFolder;
@property(readonly, nonatomic) unsigned long long freeDiskSpace;
- (BOOL)invalidateAllImagesWithUID:(id)arg1 page:(unsigned int)arg2;
- (BOOL)invalidateAllImagesWithUID:(id)arg1;
- (void)clearCacheFolderWithUID:(id)arg1;
- (void)cancelWriteRequestsWithUID:(id)arg1 page:(unsigned int)arg2;
- (BOOL)isNoSuchFileError:(id)arg1;
- (void)updateAccessTimeForCacheInfo:(id)arg1;
- (void)storeImage:(id)arg1 UID:(id)arg2 page:(unsigned int)arg3 encryptionHelper:(CDUnknownBlockType)arg4 receipt:(id)arg5 completionBlock:(CDUnknownBlockType)arg6;
- (void)storeImage:(id)arg1 UID:(id)arg2 page:(unsigned int)arg3 encryptionHelper:(CDUnknownBlockType)arg4 receipt:(id)arg5;
- (BOOL)writeQueueIsFull;
- (id)scheduleLoadImageWithUID:(id)arg1 page:(unsigned int)arg2 size:(struct CGSize)arg3 infoSelector:(CDUnknownBlockType)arg4 decryptionHelper:(CDUnknownBlockType)arg5 completionBlock:(CDUnknownBlockType)arg6;
- (id)imageWithUID:(id)arg1 page:(unsigned int)arg2 size:(struct CGSize)arg3 infoSelector:(CDUnknownBlockType)arg4 decryptionHelper:(CDUnknownBlockType)arg5 cacheInfo:(id *)arg6;
- (id)cacheInfoForImageWithUID:(id)arg1 page:(unsigned int)arg2 size:(struct CGSize)arg3 infoSelector:(CDUnknownBlockType)arg4;
- (id)pathForCacheInfo:(id)arg1;
- (id)pathForImageWithUID:(id)arg1 andPage:(unsigned int)arg2 withSize:(struct CGSize)arg3;
- (void)loadDiskCacheDataIfRequired;
- (void)dealloc;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (id)initWithCacheDirectory:(id)arg1 fileFormat:(id)arg2 settings:(id)arg3;
- (id)init;
@property(readonly, nonatomic) unsigned long long usedDiskSpace;
- (void)setUsedDiskSpace:(unsigned long long)arg1;
- (void)increaseUsedDiskSpaceBy:(long long)arg1;

// Remaining properties
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

