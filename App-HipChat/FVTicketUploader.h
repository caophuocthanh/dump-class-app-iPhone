//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class FVChunky, FVHTTPClient, NSArray, NSData, NSString, NSURL;

@interface FVTicketUploader : NSObject
{
    BOOL _debugEnabled;
    BOOL _isCancelled;
    CDUnknownBlockType _progressBlock;
    CDUnknownBlockType _completionBlock;
    FVHTTPClient *_httpRequest;
    FVChunky *_chunky;
    NSString *_filename;
    NSData *_data;
    NSString *_mimeType;
    NSString *_ticketId;
    NSArray *_chunks;
    NSString *_endpoint;
    NSURL *_remoteURL;
    int _convertableType;
}

@property int convertableType; // @synthesize convertableType=_convertableType;
@property BOOL isCancelled; // @synthesize isCancelled=_isCancelled;
@property(retain) NSURL *remoteURL; // @synthesize remoteURL=_remoteURL;
@property(retain) NSString *endpoint; // @synthesize endpoint=_endpoint;
@property(retain) NSArray *chunks; // @synthesize chunks=_chunks;
@property(retain) NSString *ticketId; // @synthesize ticketId=_ticketId;
@property(retain) NSString *mimeType; // @synthesize mimeType=_mimeType;
@property(retain) NSData *data; // @synthesize data=_data;
@property(retain) NSString *filename; // @synthesize filename=_filename;
@property(retain) FVChunky *chunky; // @synthesize chunky=_chunky;
@property(retain) FVHTTPClient *httpRequest; // @synthesize httpRequest=_httpRequest;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(copy, nonatomic) CDUnknownBlockType progressBlock; // @synthesize progressBlock=_progressBlock;
@property(nonatomic) BOOL debugEnabled; // @synthesize debugEnabled=_debugEnabled;
- (void).cxx_destruct;
- (void)fireDeletionForConvertedFile;
- (id)convertedNameForMediaType:(id)arg1;
- (void)retrieveConversionResult;
- (void)notifyConversionFinished:(id)arg1 success:(BOOL)arg2 stillProcessing:(BOOL)arg3;
- (void)pollToCheckIfFileIsReady;
- (void)downloadConvertedFileWithLastPathComponent:(id)arg1;
- (void)putRemoteFile;
- (void)getTicketIdAndUploadRemoteFile;
- (void)getTicketIdAndUploadUnchunkedFile;
- (void)getTicketIdOnCompletion:(CDUnknownBlockType)arg1;
- (void)uploadChunks:(id)arg1;
- (void)checkIfChunkAlreadyExistsAndUploadIfNecessary:(id)arg1;
- (void)uploadNextChunk;
- (void)putChunk:(id)arg1;
- (void)finalizeChunkedUploadForFilename:(id)arg1 andMimeType:(id)arg2;
- (id)urlPathForChunk:(id)arg1;
- (id)httpClientWithPath:(id)arg1;
- (id)httpClient;
- (void)uploadChunks;
- (void)dispatchCompletion:(id)arg1 document:(id)arg2 cancelled:(BOOL)arg3;
- (void)dispatchProgress:(float)arg1 state:(int)arg2;
- (void)cancelConversion;
- (void)uploadForRemoteURL:(id)arg1 convertableType:(int)arg2 filename:(id)arg3 mimeType:(id)arg4 endpoint:(id)arg5 progress:(CDUnknownBlockType)arg6 completion:(CDUnknownBlockType)arg7;
- (void)uploadUnchunkedFileOfType:(int)arg1 data:(id)arg2 filename:(id)arg3 mimeType:(id)arg4 endpoint:(id)arg5 progress:(CDUnknownBlockType)arg6 completion:(CDUnknownBlockType)arg7;

@end

