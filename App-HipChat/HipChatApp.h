//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "EmoticonListDelegate.h"
#import "HipChatAppSubclassMethods.h"
#import "RoomListDelegate.h"
#import "RosterDelegate.h"
#import "XMPPStreamDelegate.h"

@class AccountContext, AutoJoinManager, ChatManager, EmoticonList, GCDMulticastDelegate<HipChatAppDelegate>, HipChatContext, HipChatUser, ImageManager, NSArray, NSDate, NSDictionary, NSError, NSMutableArray, NSMutableDictionary, NSNumber, NSObject<OS_dispatch_queue>, NSOperationQueue, NSString, NSURL, RoomList, Roster, ThreadSafeArray, ThreadSafeDictionary, XMPPJID;

@interface HipChatApp : NSObject <EmoticonListDelegate, XMPPStreamDelegate, HipChatAppSubclassMethods, RosterDelegate, RoomListDelegate>
{
    ThreadSafeDictionary *activeChats;
    ThreadSafeArray *activeChatJids;
    ThreadSafeDictionary *profiles;
    ThreadSafeDictionary *unreadChats;
    ThreadSafeDictionary *unreadMessageCounts;
    ThreadSafeDictionary *unreadNotificationCounts;
    EmoticonList *emoticonList;
    RoomList *roomList;
    XMPPJID *currentJid;
    XMPPJID *currentNicknameJid;
    XMPPJID *inviteJid;
    NSString *mentionRegex;
    NSString *nameRegex;
    BOOL isFullyLoaded;
    BOOL isEmoticonImagesLoaded;
    BOOL isEmoticonListLoaded;
    BOOL isPresenceLoaded;
    BOOL isRoomListLoaded;
    BOOL isRosterLoaded;
    BOOL isUserLoaded;
    NSNumber *addLiveAppId;
    NSMutableArray *apiErrorRequestQueue;
    NSOperationQueue *apiRequestQueue;
    NSMutableDictionary *appPerms;
    NSMutableDictionary *iqCallbacks;
    GCDMulticastDelegate<HipChatAppDelegate> *multicastDelegate;
    BOOL _autoJoinFinished;
    BOOL _isConnecting;
    BOOL _useChatCache;
    BOOL _internalAPIAuthTokenRequested;
    BOOL _isFirstConnect;
    HipChatUser *currentUser;
    XMPPJID *lobbyJid;
    XMPPJID *searchJid;
    ThreadSafeDictionary *_unreadMentionChats;
    NSURL *_groupInviteURL;
    ChatManager *_chatManager;
    NSString *_deviceToken;
    ImageManager *_imageManager;
    XMPPJID *_jidToFocus;
    NSError *_lastConnectError;
    NSDictionary *_mentionLowercaseToNames;
    Roster *_roster;
    NSDictionary *_subscriptionData;
    AccountContext *_accountContext;
    HipChatContext *_context;
    XMPPJID *_chatJIDLaunchedToFromNotification;
    NSString *_chatHost;
    NSString *_mucHost;
    NSMutableArray *_internalAPIRequestCompletionBlocks;
    NSDictionary *_internalAPIAuthToken;
    NSMutableDictionary *_featureFlags;
    NSMutableArray *_blocksPendingFullLoad;
    AutoJoinManager *_autoJoinManager;
    NSObject<OS_dispatch_queue> *_joinedLeftEventQueue;
    NSDate *_startupIQRequestDate;
    NSDate *_initialPresenceRequestDate;
}

+ (void)initialize;
+ (id)hipchatQueue;
@property(retain, nonatomic) NSDate *initialPresenceRequestDate; // @synthesize initialPresenceRequestDate=_initialPresenceRequestDate;
@property(retain, nonatomic) NSDate *startupIQRequestDate; // @synthesize startupIQRequestDate=_startupIQRequestDate;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *joinedLeftEventQueue; // @synthesize joinedLeftEventQueue=_joinedLeftEventQueue;
@property(readonly, nonatomic) AutoJoinManager *autoJoinManager; // @synthesize autoJoinManager=_autoJoinManager;
@property(nonatomic) BOOL isFirstConnect; // @synthesize isFirstConnect=_isFirstConnect;
@property(retain, nonatomic) NSMutableArray *blocksPendingFullLoad; // @synthesize blocksPendingFullLoad=_blocksPendingFullLoad;
@property(retain, nonatomic) NSMutableDictionary *featureFlags; // @synthesize featureFlags=_featureFlags;
@property(nonatomic) BOOL internalAPIAuthTokenRequested; // @synthesize internalAPIAuthTokenRequested=_internalAPIAuthTokenRequested;
@property(retain, nonatomic) NSDictionary *internalAPIAuthToken; // @synthesize internalAPIAuthToken=_internalAPIAuthToken;
@property(retain, nonatomic) NSMutableArray *internalAPIRequestCompletionBlocks; // @synthesize internalAPIRequestCompletionBlocks=_internalAPIRequestCompletionBlocks;
@property(retain, nonatomic) NSString *mucHost; // @synthesize mucHost=_mucHost;
@property(retain, nonatomic) NSString *chatHost; // @synthesize chatHost=_chatHost;
@property(retain, nonatomic) XMPPJID *chatJIDLaunchedToFromNotification; // @synthesize chatJIDLaunchedToFromNotification=_chatJIDLaunchedToFromNotification;
@property(nonatomic) __weak HipChatContext *context; // @synthesize context=_context;
@property(nonatomic) __weak AccountContext *accountContext; // @synthesize accountContext=_accountContext;
@property(nonatomic) BOOL useChatCache; // @synthesize useChatCache=_useChatCache;
@property(readonly, nonatomic) NSDictionary *subscriptionData; // @synthesize subscriptionData=_subscriptionData;
@property(retain, nonatomic) Roster *roster; // @synthesize roster=_roster;
@property(retain, nonatomic) NSDictionary *mentionLowercaseToNames; // @synthesize mentionLowercaseToNames=_mentionLowercaseToNames;
@property(retain, nonatomic) NSError *lastConnectError; // @synthesize lastConnectError=_lastConnectError;
@property(retain, nonatomic) XMPPJID *jidToFocus; // @synthesize jidToFocus=_jidToFocus;
@property(readonly, nonatomic) BOOL isConnecting; // @synthesize isConnecting=_isConnecting;
@property(nonatomic) BOOL autoJoinFinished; // @synthesize autoJoinFinished=_autoJoinFinished;
@property(retain, nonatomic) ImageManager *imageManager; // @synthesize imageManager=_imageManager;
@property(copy, nonatomic) NSString *deviceToken; // @synthesize deviceToken=_deviceToken;
@property(retain, nonatomic) ChatManager *chatManager; // @synthesize chatManager=_chatManager;
@property(retain, nonatomic) NSURL *groupInviteURL; // @synthesize groupInviteURL=_groupInviteURL;
@property(retain, nonatomic) ThreadSafeDictionary *unreadMentionChats; // @synthesize unreadMentionChats=_unreadMentionChats;
@property(retain, nonatomic) GCDMulticastDelegate<HipChatAppDelegate> *gcdMulticastDelegate; // @synthesize gcdMulticastDelegate=multicastDelegate;
@property(retain, nonatomic) NSNumber *addLiveAppId; // @synthesize addLiveAppId;
@property(copy, nonatomic) XMPPJID *searchJid; // @synthesize searchJid;
@property(retain, nonatomic) RoomList *roomList; // @synthesize roomList;
@property(readonly, nonatomic) NSString *nameRegex; // @synthesize nameRegex;
@property(readonly, nonatomic) NSString *mentionRegex; // @synthesize mentionRegex;
@property(copy, nonatomic) XMPPJID *lobbyJid; // @synthesize lobbyJid;
@property(readonly, nonatomic) BOOL isPresenceLoaded; // @synthesize isPresenceLoaded;
@property(readonly, nonatomic) BOOL isRosterLoaded; // @synthesize isRosterLoaded;
@property(readonly, nonatomic) BOOL isRoomListLoaded; // @synthesize isRoomListLoaded;
@property(readonly, nonatomic) BOOL isFullyLoaded; // @synthesize isFullyLoaded;
@property(readonly, nonatomic) BOOL isEmoticonListLoaded; // @synthesize isEmoticonListLoaded;
@property(readonly, nonatomic) BOOL isEmoticonImagesLoaded; // @synthesize isEmoticonImagesLoaded;
@property(retain, nonatomic) EmoticonList *emoticonList; // @synthesize emoticonList;
@property(retain, nonatomic) HipChatUser *currentUser; // @synthesize currentUser;
@property(retain, nonatomic) XMPPJID *currentJid; // @synthesize currentJid;
- (void).cxx_destruct;
- (id)apiAuthToken;
@property(readonly, nonatomic) NSString *webHost;
@property(readonly, nonatomic) NSString *apiHost;
- (void)storeSignInEmail:(id)arg1 andPassword:(id)arg2;
- (id)getSignInPassword;
- (id)getSignInEmail;
- (void)clearSignInPassword;
- (BOOL)signInCredentialsAvailable;
- (void)savePreferences:(BOOL)arg1;
- (void)savePreferences;
- (void)requestAuthToken;
- (void)requestAuthTokenWithCallback:(CDUnknownBlockType)arg1;
- (id)makeAPIRequest:(id)arg1 withArgs:(id)arg2 tokenRequired:(BOOL)arg3 progressHandler:(CDUnknownBlockType)arg4 completionHandler:(CDUnknownBlockType)arg5 timeout:(int)arg6;
- (id)makeAPIRequest:(id)arg1 withArgs:(id)arg2 tokenRequired:(BOOL)arg3 progressHandler:(CDUnknownBlockType)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)makeAPIRequest:(id)arg1 withArgs:(id)arg2 tokenRequired:(BOOL)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)getAuthToken;
- (void)clearAuthTokenQueue;
- (void)updateMentionRegex;
- (void)setAuthTokenWithXML:(id)arg1;
- (void)sendIQ:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)showSearchResultsForQuery:(id)arg1 jid:(id)arg2;
- (void)showFlash:(id)arg1 duration:(double)arg2 type:(unsigned int)arg3 isResetPasswordType:(BOOL)arg4;
- (void)showFlash:(id)arg1 type:(unsigned int)arg2;
- (void)postUnreadChangedForJid:(id)arg1;
- (void)postNotifWithName:(id)arg1 args:(id)arg2;
- (BOOL)notifyUserForMessage:(id)arg1;
- (void)loadRoomsAndPresence;
- (BOOL)isViewingChat;
- (BOOL)isFeatureEnabled:(id)arg1;
- (BOOL)isFeatureKnown:(id)arg1;
- (BOOL)isFeatureKnownAndEnabled:(id)arg1;
- (BOOL)isAppFocused;
- (void)handleStartupResponseAutoJoin:(id)arg1;
- (void)handleStartupResponse:(id)arg1;
- (void)handleRosterPush:(id)arg1;
- (id)handleProfileResponse:(id)arg1;
- (void)handleMessage:(id)arg1;
- (id)chatItemFromJID:(id)arg1;
- (id)getUserInfo:(id)arg1;
- (id)getRoomInfo:(id)arg1;
- (void)getProfileDataForJid:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (id)getProfileData:(id)arg1;
- (id)getAllUsers;
- (id)getAllRooms;
- (id)generateAutoJoinArg;
- (void)postWhenFullyLoaded:(CDUnknownBlockType)arg1;
- (void)checkFullyLoaded;
- (void)sendInitialPresence;
- (id)requestStartup;
- (id)requestProfileForJid:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (id)requestHistoryForChat:(id)arg1 beforeTime:(double)arg2 count:(int)arg3;
- (BOOL)hasActiveChats;
- (id)arrayOfJidsFromArrayOfStrings:(id)arg1;
- (void)syncActiveChatJidsWithAutoJoin:(id)arg1;
- (void)setAutoJoin:(id)arg1;
- (void)removeFromAutoJoin:(id)arg1;
- (void)markChatUnread:(id)arg1;
- (void)joinChat:(id)arg1 withPendingMessage:(id)arg2 andPendingFile:(id)arg3;
- (void)joinChat:(id)arg1 withArgs:(id)arg2;
- (void)joinChat:(id)arg1 withMessage:(id)arg2;
- (void)joinChat:(id)arg1 withFocus:(BOOL)arg2;
- (void)joinChat:(id)arg1;
- (BOOL)isAutoJoinChat:(id)arg1;
- (void)setActiveChat:(id)arg1 forJid:(id)arg2;
- (id)getActiveChat:(id)arg1;
- (BOOL)isActiveChat:(id)arg1;
- (void)enqueueActiveChatJid:(id)arg1;
- (unsigned int)getActiveChatIndex:(id)arg1;
- (BOOL)getUnreadMentionForJid:(id)arg1;
- (BOOL)incrementUnreadForJid:(id)arg1 sentNotification:(BOOL)arg2;
- (void)incrementUnreadForJid:(id)arg1;
- (BOOL)getUnreadForJid:(id)arg1;
- (int)getUnreadCountForJid:(id)arg1 notificationsOnly:(BOOL)arg2;
- (int)getUnreadCountForJid:(id)arg1;
- (int)getTotalUnreadMentions;
- (int)getTotalUnreadNotifications;
- (int)getTotalUnreadCount;
- (void)clearSelectedChatName;
@property(copy, nonatomic) NSString *selectedChatName;
- (void)clearSelectedChatJid;
@property(retain, nonatomic) XMPPJID *selectedChatJid;
- (void)focusSearchResults;
- (void)focusPreviousChat;
- (void)focusNextChat;
- (void)focusLobby;
- (void)focusChat:(id)arg1 withArgs:(id)arg2 animated:(BOOL)arg3;
- (void)focusChat:(id)arg1 withArgs:(id)arg2;
- (void)focusChat:(id)arg1 animated:(BOOL)arg2;
- (void)focusChat:(id)arg1;
- (void)closeChat:(id)arg1 notifyDelegates:(BOOL)arg2 isManual:(BOOL)arg3;
- (void)closeChat:(id)arg1 isManual:(BOOL)arg2;
- (void)closeChat:(id)arg1;
- (void)clearUnreadCount:(id)arg1;
- (void)updateWithServerResponse;
- (void)autoJoinChats;
- (void)autoJoinCachedChats;
- (void)addToAutoJoin:(id)arg1 atIndex:(int)arg2;
- (void)addToAutoJoin:(id)arg1;
- (void)roomList:(id)arg1 deletedRoom:(id)arg2;
- (void)roomListLoaded:(id)arg1 fromSource:(int)arg2;
- (void)rosterFinishedLoading:(id)arg1 fromSource:(int)arg2;
- (void)emoticonImagesLoaded:(id)arg1;
- (void)emoticonListLoaded:(id)arg1 fromSource:(int)arg2;
- (void)xmppStream:(id)arg1 didReceivePresence:(id)arg2;
- (void)xmppStream:(id)arg1 didReceiveMessage:(id)arg2;
- (BOOL)xmppStream:(id)arg1 didReceiveIQ:(id)arg2;
- (void)setupCookies;
- (BOOL)isConnectionAuthenticated;
- (void)resetHipChatApp;
- (void)handleErrorStanza:(id)arg1;
- (void)clearUserData;
- (void)sendXMPPElement:(id)arg1;
- (void)onCurrentUserPresenceChangedEvent:(id)arg1;
- (void)onAccountSelectedEvent:(id)arg1;
- (void)onUserChatLeftEvent:(id)arg1;
- (void)onUserChatJoinedEvent:(id)arg1;
- (void)registerForEvents;
- (void)loadCachesIfNeeded;
- (void)initializeStartup;
- (id)initWithAccountContext:(id)arg1;
- (void)postDelegateBlock:(CDUnknownBlockType)arg1;
- (void)removeDelegate:(id)arg1;
- (void)addDelegate:(id)arg1 delegateQueue:(id)arg2;
- (void)addDelegate:(id)arg1;
@property(readonly, nonatomic) NSArray *orderedAutoJoinJIDs;
@property(readonly, nonatomic) NSArray *activeChatJids;
@property(readonly, nonatomic) NSDictionary *activeChats;
- (id)init;

@end

