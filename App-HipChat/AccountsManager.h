//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class AFHTTPRequestOperationManager, AccountContext, AccountsCache, HipChatContext, NSMutableDictionary;

@interface AccountsManager : NSObject
{
    BOOL _sentClientLaunchedEvent;
    AccountContext *_selectedAccountContext;
    HipChatContext *_context;
    AFHTTPRequestOperationManager *_requestOperationManager;
    AccountsCache *_accountsCache;
    NSMutableDictionary *_accountContexts;
}

@property(nonatomic) BOOL sentClientLaunchedEvent; // @synthesize sentClientLaunchedEvent=_sentClientLaunchedEvent;
@property(retain, nonatomic) NSMutableDictionary *accountContexts; // @synthesize accountContexts=_accountContexts;
@property(retain, nonatomic) AccountsCache *accountsCache; // @synthesize accountsCache=_accountsCache;
@property(readonly, nonatomic) AFHTTPRequestOperationManager *requestOperationManager; // @synthesize requestOperationManager=_requestOperationManager;
@property(nonatomic) __weak HipChatContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)broadcastEventToAllAccountContexts:(id)arg1;
- (void)onApplicationStateChangedEvent:(id)arg1;
- (void)onNetworkReachabilityStatusChangedEvent:(id)arg1;
- (void)updateAccount:(id)arg1 withAutoSignInPreference:(BOOL)arg2;
- (void)accountInformationUpdatedForAccount:(id)arg1;
- (void)updateAccount:(id)arg1 fromStartupResponse:(id)arg2;
- (void)updateAccount:(id)arg1 fromAuthenticationResponse:(id)arg2;
- (void)removeLegacyAccount;
- (void)synchronizeWithLegacyAccount:(id)arg1;
- (id)legacyAccount;
- (void)checkAndSendClientLaunchAnalyticEvent:(id)arg1;
- (void)selectAccountContext:(id)arg1;
- (void)persistSelectedAccountID:(id)arg1;
- (id)persistedSelectedAccountID;
@property(nonatomic) __weak AccountContext *selectedAccountContext; // @synthesize selectedAccountContext=_selectedAccountContext;
- (id)accountContextForAccountID:(id)arg1;
- (id)accountContextForAccount:(id)arg1;
- (id)createAccountContextForAccount:(id)arg1;
- (id)setupAccountContextForAccount:(id)arg1;
- (void)setupAccountContexts;
- (void)checkAndClearCachedCredentials;
- (id)addAccountFromAuthorizationGrant:(id)arg1;
- (id)onAuthorizationExchangeCompleted:(id)arg1 forAccountID:(id)arg2 withResponse:(id)arg3;
- (void)removeAccountWithContext:(id)arg1;
- (id)updateAccount:(id)arg1 host:(id)arg2 credentials:(id)arg3 validateCert:(BOOL)arg4;
- (id)addProvisionedAccountContext:(id)arg1;
- (id)provisionAccountWithHost:(id)arg1 credentials:(id)arg2 validateCert:(BOOL)arg3;
- (id)addAccountWithHost:(id)arg1 credentials:(id)arg2 validateCert:(BOOL)arg3;
- (id)accountMatchingLegacyAccount:(id)arg1;
- (void)cleanDevelopmentAccounts;
- (void)checkForLegacyDefaultsForLegacyAccount:(id)arg1;
- (void)loadAccounts;
- (id)sortedAccountContexts;
- (id)allAccountContexts;
- (id)accounts;
- (BOOL)hasMultipleAccounts;
- (BOOL)hasSingleAccount;
- (BOOL)hasAccounts;
- (id)initWithContext:(id)arg1;

@end

