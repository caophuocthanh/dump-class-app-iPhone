//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "PSPDFBaseViewController.h"

#import "PSPDFPagingScrollViewDelegate.h"
#import "PSPDFScrollViewStateRestoration.h"
#import "PSPDFTransitionProtocol.h"
#import "UIScrollViewDelegate.h"

@class NSMutableSet, NSString, PSPDFContentScrollView, PSPDFViewState, UIScrollView;

@interface PSPDFPageScrollViewController : PSPDFBaseViewController <PSPDFScrollViewStateRestoration, PSPDFPagingScrollViewDelegate, PSPDFTransitionProtocol, UIScrollViewDelegate>
{
    struct {
        unsigned int tilingActive:1;
        unsigned int isResizingPager:1;
        unsigned int updateInsetsScheduled:1;
    } _flags;
    PSPDFContentScrollView *_scrollView;
    id <PSPDFPresentationContext> _presentationContext;
    UIScrollView *_pagingScrollView;
    NSMutableSet *_recycledSpreadViews;
    NSMutableSet *_visibleSpreadViews;
    PSPDFViewState *_stateToRestore;
}

@property(retain, nonatomic) PSPDFViewState *stateToRestore; // @synthesize stateToRestore=_stateToRestore;
@property(readonly, nonatomic) NSMutableSet *visibleSpreadViews; // @synthesize visibleSpreadViews=_visibleSpreadViews;
@property(readonly, nonatomic) NSMutableSet *recycledSpreadViews; // @synthesize recycledSpreadViews=_recycledSpreadViews;
@property(retain, nonatomic) UIScrollView *pagingScrollView; // @synthesize pagingScrollView=_pagingScrollView;
@property(nonatomic) __weak id <PSPDFPresentationContext> presentationContext; // @synthesize presentationContext=_presentationContext;
@property(nonatomic) __weak PSPDFContentScrollView *scrollView; // @synthesize scrollView=_scrollView;
- (void).cxx_destruct;
- (void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(float)arg3;
- (void)scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (BOOL)isHorizontal;
- (id)configuration;
- (void)pagingScrollView:(id)arg1 didChangeFrameSizeFrom:(struct CGSize)arg2;
- (void)pagingScrollView:(id)arg1 willChangeFrameSizeTo:(struct CGSize)arg2;
- (id)visiblePageViews;
- (id)scrollView:(id)arg1 pageViewForPage:(unsigned int)arg2;
- (struct CGRect)effectiveViewPortForScrollView:(id)arg1 forcingLayout:(BOOL)arg2;
- (id)activeSpreadView;
- (BOOL)isDisplayingSpreadForIndex:(unsigned int)arg1;
- (void)configureScrollView:(id)arg1 withContext:(id)arg2 spreadIndex:(unsigned int)arg3;
- (void)convertSpreadOnDualModeChange:(id)arg1 currentPage:(unsigned int)arg2;
- (struct CGRect)frameForViewAtIndex:(unsigned int)arg1;
- (struct CGRect)frameForSpreadInScrollView;
- (void)updatePagingContentSize;
- (void)updateInsetsIfNeeded;
- (void)setNeedsUpdateInsets;
- (void)applyViewState:(id)arg1;
- (id)captureCurrentViewState;
- (id)pageViewForPage:(unsigned int)arg1;
- (id)visiblePages;
- (id)visiblePageViewsForcingLayout:(BOOL)arg1;
- (id)spreadsRecycledByGrooming:(id)arg1 forContext:(id)arg2 primarySpreadIndex:(unsigned int)arg3 firstSpreadIndex:(unsigned int)arg4 lastSpreadIndex:(unsigned int)arg5;
- (id)dequeueRecycledSpread;
- (void)recycleSpreadView:(id)arg1;
- (void)getPrimarySpreadIndex:(out unsigned int *)arg1 firstSpreadIndex:(out unsigned int *)arg2 lastSpreadIndex:(out unsigned int *)arg3 forPresentingContext:(id)arg4 inBounds:(struct CGRect)arg5;
- (void)tileSpreadsForced:(BOOL)arg1;
- (struct CGRect)boundsForPagingScrollView;
- (void)reloadData;
- (void)setPage:(unsigned int)arg1 options:(id)arg2 animated:(BOOL)arg3;
- (void)setRotationActive:(BOOL)arg1;
- (void)didRotateFromInterfaceOrientation:(int)arg1;
- (void)willRotateToInterfaceOrientation:(int)arg1 duration:(double)arg2;
- (void)didReceiveMemoryWarning;
- (void)loadView;
- (id)initWithPresentationContext:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (Class)classForClass:(Class)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

