//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCopying.h"
#import "NSSecureCoding.h"

@class NSArray, NSString, PSPDFCMap, PSPDFFontFileDescriptor;

@interface PSPDFFontInfo : NSObject <NSCopying, NSSecureCoding>
{
    float _ascent;
    float _descent;
    NSArray *_encodingArray;
    unsigned int _encodingArrayCount;
    PSPDFCMap *_toUnicodeMap;
    PSPDFCMap *_fontCMap;
    PSPDFCMap *_ucsCMap;
    PSPDFFontFileDescriptor *_fontFileDescriptor;
    float *_widths;
    float _defaultWidth;
    unsigned long _widthSize;
    unsigned int _type;
    BOOL _isMultiByteFont;
    NSString *_name;
    NSString *_fontKey;
    NSString *_content;
    PSPDFFontInfo *_font;
}

+ (BOOL)supportsSecureCoding;
+ (id)glyphNames;
+ (id)standardFontWidths;
@property(nonatomic) PSPDFFontInfo *font; // @synthesize font=_font;
@property(nonatomic) unsigned long widthSize; // @synthesize widthSize=_widthSize;
@property(copy, nonatomic) NSString *content; // @synthesize content=_content;
@property(readonly, nonatomic) BOOL isMultiByteFont; // @synthesize isMultiByteFont=_isMultiByteFont;
@property(retain, nonatomic) PSPDFCMap *ucsCMap; // @synthesize ucsCMap=_ucsCMap;
@property(retain, nonatomic) PSPDFCMap *fontCMap; // @synthesize fontCMap=_fontCMap;
@property(retain, nonatomic) PSPDFFontFileDescriptor *fontFileDescriptor; // @synthesize fontFileDescriptor=_fontFileDescriptor;
@property(retain, nonatomic) PSPDFCMap *toUnicodeMap; // @synthesize toUnicodeMap=_toUnicodeMap;
@property(copy, nonatomic) NSArray *encodingArray; // @synthesize encodingArray=_encodingArray;
@property(nonatomic) float descent; // @synthesize descent=_descent;
@property(nonatomic) float ascent; // @synthesize ascent=_ascent;
@property(nonatomic) unsigned int type; // @synthesize type=_type;
@property(readonly, copy, nonatomic) NSString *fontKey; // @synthesize fontKey=_fontKey;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)unicodeStringForCharacter:(unsigned short)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (float)widthForCharacter:(unsigned short)arg1;
- (void)parseFontDescriptor:(struct CGPDFDictionary *)arg1;
- (BOOL)isEqualToFontInfo:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (id)description;
- (void)dealloc;
- (id)initWithFontDictionary:(struct CGPDFDictionary *)arg1 fontKey:(id)arg2;

@end

