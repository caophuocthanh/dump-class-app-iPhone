//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "XMPPStreamDelegate.h"

@class Account, AccountSessionDelegate, AccountXMPPState, AccountsManager, EventPublisher, NSError, NSMutableArray, NSMutableDictionary, NSObject<OS_dispatch_queue>, OperationManager, XMPPStream;

@interface AccountXMPPController : NSObject <XMPPStreamDelegate>
{
    Account *_account;
    AccountSessionDelegate *_sessionDelegate;
    NSError *_lastSignInError;
    AccountsManager *_accountsManager;
    EventPublisher *_eventPublisher;
    OperationManager *_operationManager;
    XMPPStream *_xmppStream;
    AccountXMPPState *_state;
    unsigned int _lastApplicationState;
    unsigned int _reconnectionAttempts;
    NSObject<OS_dispatch_queue> *_accountQueue;
    NSMutableArray *_signInPromises;
    NSMutableArray *_signOutPromises;
    NSMutableDictionary *_infoQueryResponseBlocks;
    double _lastWaitTime;
    double _minWaitTime;
    double _maxWaitTime;
    double _maxReconnectTime;
    double _timeStartedReconnect;
}

@property(nonatomic) double timeStartedReconnect; // @synthesize timeStartedReconnect=_timeStartedReconnect;
@property(retain, nonatomic) NSMutableDictionary *infoQueryResponseBlocks; // @synthesize infoQueryResponseBlocks=_infoQueryResponseBlocks;
@property(readonly, nonatomic) NSMutableArray *signOutPromises; // @synthesize signOutPromises=_signOutPromises;
@property(readonly, nonatomic) NSMutableArray *signInPromises; // @synthesize signInPromises=_signInPromises;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *accountQueue; // @synthesize accountQueue=_accountQueue;
@property(nonatomic) unsigned int reconnectionAttempts; // @synthesize reconnectionAttempts=_reconnectionAttempts;
@property(nonatomic) unsigned int lastApplicationState; // @synthesize lastApplicationState=_lastApplicationState;
@property(retain, nonatomic) AccountXMPPState *state; // @synthesize state=_state;
@property(nonatomic) double maxReconnectTime; // @synthesize maxReconnectTime=_maxReconnectTime;
@property(nonatomic) double maxWaitTime; // @synthesize maxWaitTime=_maxWaitTime;
@property(nonatomic) double minWaitTime; // @synthesize minWaitTime=_minWaitTime;
@property(nonatomic) double lastWaitTime; // @synthesize lastWaitTime=_lastWaitTime;
@property(retain, nonatomic) XMPPStream *xmppStream; // @synthesize xmppStream=_xmppStream;
@property(readonly, nonatomic) OperationManager *operationManager; // @synthesize operationManager=_operationManager;
@property(readonly, nonatomic) __weak EventPublisher *eventPublisher; // @synthesize eventPublisher=_eventPublisher;
@property(readonly, nonatomic) __weak AccountsManager *accountsManager; // @synthesize accountsManager=_accountsManager;
@property(copy, nonatomic) NSError *lastSignInError; // @synthesize lastSignInError=_lastSignInError;
@property(readonly, nonatomic) AccountSessionDelegate *sessionDelegate; // @synthesize sessionDelegate=_sessionDelegate;
@property(readonly, nonatomic) __weak Account *account; // @synthesize account=_account;
- (void).cxx_destruct;
@property(readonly, nonatomic) double totalReconnectTime;
- (void)recordReconnectStopped;
- (void)recordReconnectStarted;
- (id)loggingIdentifier;
- (id)clientIdentifierString;
- (void)transitionTo:(id)arg1;
- (void)xmppStreamDidDisconnect:(id)arg1 withError:(id)arg2;
- (void)xmppStreamDidFinishNegotiation:(id)arg1;
- (void)xmppStream:(id)arg1 didNotAuthenticate:(id)arg2;
- (void)xmppStreamDidAuthenticate:(id)arg1;
- (void)xmppStreamDidConnect:(id)arg1;
- (void)onApplicationStateChangedEvent:(id)arg1;
- (void)onNetworkReachabilityStatusChangedEvent:(id)arg1;
- (id)newAuthenticationHandler;
- (void)killXMPPStream;
- (id)newXMPPStream;
- (id)legacy_xmppStream;
- (void)sendXMPPElement:(id)arg1;
- (void)cleanupIQResponseHandlers;
- (BOOL)handleIQResponse:(id)arg1;
- (void)sendXMPPInfoQuery:(id)arg1 withResponseBlock:(CDUnknownBlockType)arg2;
- (void)resolveSignOutWith:(id)arg1;
- (id)signOut;
- (void)resolveSignInWith:(id)arg1;
- (id)signIn;
@property(readonly, nonatomic, getter=isConnecting) BOOL connecting;
@property(readonly, nonatomic, getter=isOnline) BOOL online;
@property(readonly, nonatomic, getter=isActive) BOOL active;
@property(readonly, nonatomic, getter=isOffline) BOOL offline;
- (id)initWithAccount:(id)arg1 accountsManager:(id)arg2 eventPublisher:(id)arg3;

@end

