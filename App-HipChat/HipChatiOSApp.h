//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "HipChatApp.h"

#import "InAppNotificationPresenterDelegate.h"
#import "RoomListDelegate.h"
#import "RosterDelegate.h"

@class ActiveChatRoomsCache, ActiveChatUsersCache, ChatViewController, InAppNotificationPresenter, NSString, NSURL, PresenceFilterManager, Reachability, ServerInteractionManager, ThreadSafeDictionary, XMPPJID;

@interface HipChatiOSApp : HipChatApp <InAppNotificationPresenterDelegate, RoomListDelegate, RosterDelegate>
{
    XMPPJID *lobbyJid;
    Reachability *hostReach;
    Reachability *internetReach;
    NSString *lastRegisteredDeviceToken;
    ThreadSafeDictionary *unreadMentionChats;
    BOOL _isInBackground;
    BOOL _showingChat;
    int _keyboardState;
    int _currentView;
    PresenceFilterManager *_presenceFilterManager;
    ActiveChatRoomsCache *_activeChatRooms;
    ActiveChatUsersCache *_activeChatUsers;
    NSURL *_pendingHipchatURL;
    ServerInteractionManager *_serverInteractionManager;
    InAppNotificationPresenter *_notificationPresenter;
    ChatViewController *_quickResponseChatViewController;
    struct CGRect _lastKnownKeyboardFrame;
}

@property(retain, nonatomic) ChatViewController *quickResponseChatViewController; // @synthesize quickResponseChatViewController=_quickResponseChatViewController;
@property(retain, nonatomic) InAppNotificationPresenter *notificationPresenter; // @synthesize notificationPresenter=_notificationPresenter;
@property(retain, nonatomic) ServerInteractionManager *serverInteractionManager; // @synthesize serverInteractionManager=_serverInteractionManager;
@property(nonatomic, getter=isShowingChat) BOOL showingChat; // @synthesize showingChat=_showingChat;
@property(copy, nonatomic) NSURL *pendingHipchatURL; // @synthesize pendingHipchatURL=_pendingHipchatURL;
@property(retain, nonatomic) ActiveChatUsersCache *activeChatUsers; // @synthesize activeChatUsers=_activeChatUsers;
@property(retain, nonatomic) ActiveChatRoomsCache *activeChatRooms; // @synthesize activeChatRooms=_activeChatRooms;
@property(retain, nonatomic) PresenceFilterManager *presenceFilterManager; // @synthesize presenceFilterManager=_presenceFilterManager;
@property(nonatomic) BOOL isInBackground; // @synthesize isInBackground=_isInBackground;
@property(nonatomic) int currentView; // @synthesize currentView=_currentView;
@property(nonatomic) struct CGRect lastKnownKeyboardFrame; // @synthesize lastKnownKeyboardFrame=_lastKnownKeyboardFrame;
@property(nonatomic) int keyboardState; // @synthesize keyboardState=_keyboardState;
- (void).cxx_destruct;
- (BOOL)isVideoSupportedForJid:(id)arg1;
- (void)rosterFinishedLoading:(id)arg1 fromSource:(int)arg2;
- (void)roster:(id)arg1 removedUser:(id)arg2;
- (void)roster:(id)arg1 addedUser:(id)arg2;
- (void)roomListLoaded:(id)arg1 fromSource:(int)arg2;
- (void)roomList:(id)arg1 deletedRoom:(id)arg2;
- (void)roomList:(id)arg1 addedRoom:(id)arg2;
- (void)synchronizeActiveChatUsers;
- (void)synchronizeActiveChatRooms;
- (void)setActiveChatUser:(id)arg1;
- (void)setActiveChatRoom:(id)arg1;
- (void)setActiveChatWithJID:(id)arg1;
- (void)saveServerPreferencesToDefaults;
- (BOOL)hasUnreadMention;
- (BOOL)getUnreadMentionForJid:(id)arg1;
- (id)getLogFileContents;
- (id)getLogFileData;
- (BOOL)isAppFocused;
- (BOOL)shouldAutofocusInitialChat;
- (void)focusSearch;
- (void)focusAbout;
- (void)focusSettings;
- (void)addAccountDeviceToken;
- (void)removeAccountDeviceToken;
- (void)setRemotePushNotifSettings;
- (void)saveNonPushPrefs;
- (void)savePreferences;
- (id)createRoomReplyInteractionForNotification:(id)arg1 message:(id)arg2;
- (id)createPrivateMessageUserInteractionWithNotification:(id)arg1 message:(id)arg2;
- (void)notificationQuicklyRepliedFromNotificationItem:(id)arg1 withMessage:(id)arg2;
- (void)notificationPresentedFollowingNotificationItem:(id)arg1;
- (void)notificationDismissedForNotificationItem:(id)arg1;
- (void)notificationChatSelectedForNotificationItem:(id)arg1;
- (BOOL)notifyUserForMessage:(id)arg1;
- (void)afterCloseChat;
- (void)joinChat:(id)arg1;
- (void)joinChat:(id)arg1 withPendingMessage:(id)arg2 andPendingFile:(id)arg3;
- (void)joinChat:(id)arg1 withMessage:(id)arg2;
- (void)joinChat:(id)arg1 withFocus:(BOOL)arg2;
- (void)closeChat:(id)arg1 notifyDelegates:(BOOL)arg2 isManual:(BOOL)arg3;
- (BOOL)incrementUnreadForJid:(id)arg1 sentNotification:(BOOL)arg2;
- (void)clearUnreadCount:(id)arg1;
- (void)showToast:(id)arg1;
- (void)xmppStream:(id)arg1 didReceiveError:(id)arg2;
- (void)clearUserData;
- (void)updateLastKnownKeyboardSize:(id)arg1;
- (void)inputKeyboardWillShow:(id)arg1;
- (void)inputKeyboardDidShow:(id)arg1;
- (void)inputKeyboardWillChangeFrame:(id)arg1;
- (void)inputKeyboardDidChangeFrame:(id)arg1;
- (void)inputKeyboardWillHide:(id)arg1;
- (void)inputKeyboardDidHide:(id)arg1;
- (BOOL)handleHipchatURL:(id)arg1;
- (BOOL)handlePendingHipchatURL;
- (void)loadCachesIfNeeded;
- (void)initializeStartup;
- (void)dealloc;
- (void)setupPresenceFilterManager;
- (void)configureServerInteractionManager;
- (void)configureNotificationObservers;
- (id)initWithAccountContext:(id)arg1;
- (id)init;

@end

