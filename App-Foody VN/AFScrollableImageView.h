//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIScrollView.h"

#import "UIScrollViewDelegate.h"

@class AFOpenGLView, AFView, NSString, UIImage, UIImageView, UILongPressGestureRecognizer, UITapGestureRecognizer, UIView;

@interface AFScrollableImageView : UIScrollView <UIScrollViewDelegate>
{
    BOOL _showOpenGLView;
    BOOL _touchListeningEnabled;
    BOOL _positionLocked;
    id <AFScrollableImageViewDelegate> _scrollableImageViewDelegate;
    UIImageView *_imageView;
    AFOpenGLView *_openGLView;
    AFOpenGLView *_pendingOpenGLView;
    UIView *_contentView;
    AFView *_imageOverlayView;
    float _calculatedMinimumZoomScale;
    float _calculatedMaximumZoomScale;
    UILongPressGestureRecognizer *_longPressRecognizer;
    UIView *_shadowView;
    UITapGestureRecognizer *_tapRecognizer;
    struct CGSize _imageSize;
    struct CGPoint _currentTouchLocation;
}

@property(nonatomic) struct CGPoint currentTouchLocation; // @synthesize currentTouchLocation=_currentTouchLocation;
@property(retain, nonatomic) UITapGestureRecognizer *tapRecognizer; // @synthesize tapRecognizer=_tapRecognizer;
@property(retain, nonatomic) UIView *shadowView; // @synthesize shadowView=_shadowView;
@property(retain, nonatomic) UILongPressGestureRecognizer *longPressRecognizer; // @synthesize longPressRecognizer=_longPressRecognizer;
@property(nonatomic) BOOL positionLocked; // @synthesize positionLocked=_positionLocked;
@property(nonatomic) BOOL touchListeningEnabled; // @synthesize touchListeningEnabled=_touchListeningEnabled;
@property(nonatomic) float calculatedMaximumZoomScale; // @synthesize calculatedMaximumZoomScale=_calculatedMaximumZoomScale;
@property(nonatomic) float calculatedMinimumZoomScale; // @synthesize calculatedMinimumZoomScale=_calculatedMinimumZoomScale;
@property(retain, nonatomic) AFView *imageOverlayView; // @synthesize imageOverlayView=_imageOverlayView;
@property(nonatomic, getter=isShowingOpenGLView) BOOL showOpenGLView; // @synthesize showOpenGLView=_showOpenGLView;
@property(nonatomic) struct CGSize imageSize; // @synthesize imageSize=_imageSize;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) AFOpenGLView *pendingOpenGLView; // @synthesize pendingOpenGLView=_pendingOpenGLView;
@property(retain, nonatomic) AFOpenGLView *openGLView; // @synthesize openGLView=_openGLView;
@property(retain, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
@property(nonatomic) __weak id <AFScrollableImageViewDelegate> scrollableImageViewDelegate; // @synthesize scrollableImageViewDelegate=_scrollableImageViewDelegate;
- (void).cxx_destruct;
- (void)configureTouchListening;
- (void)handleTap:(id)arg1;
- (void)handlePress:(id)arg1;
- (void)reportTouchUp;
- (void)reportTouchDown;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewDidZoom:(id)arg1;
- (id)viewForZoomingInScrollView:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(float)arg3;
- (void)scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2;
- (BOOL)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)calculateZoomBoundariesForImageSize:(struct CGSize)arg1 returnedMin:(float *)arg2 returnedMax:(float *)arg3;
- (void)recalculateZoomScales;
- (void)zoomOutAnimated:(BOOL)arg1;
- (void)recalculateZoomBoundaryAndZoomOutAnimated:(BOOL)arg1;
- (void)transitionToTargetOpenGLView:(id)arg1 animated:(BOOL)arg2;
@property(retain, nonatomic) UIImage *image; // @dynamic image;
@property(readonly, nonatomic) AFOpenGLView *targetOpenGLView;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)layoutSubviews;
- (void)prepareView;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

