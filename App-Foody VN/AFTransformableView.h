//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "AFView.h"

#import "AFTransformableHandleDelegate.h"
#import "UIGestureRecognizerDelegate.h"

@class NSArray, NSString, UIPanGestureRecognizer;

@interface AFTransformableView : AFView <UIGestureRecognizerDelegate, AFTransformableHandleDelegate>
{
    BOOL _rotationEnabled;
    BOOL _draggingEnabled;
    BOOL _transforming;
    BOOL _dragging;
    BOOL _allowsFreeTransform;
    id <AFTransformableViewDelegate> _delegate;
    NSArray *_handles;
    float _rotation;
    AFView *_contentView;
    int _transformationAnchor;
    float _currentScale;
    UIPanGestureRecognizer *_panRecognizer;
    struct CGSize _contentViewInset;
    struct CGSize _minSize;
    struct CGSize _maxSize;
    struct CGRect _transformationRect;
}

+ (int)handleMask;
@property(retain, nonatomic) UIPanGestureRecognizer *panRecognizer; // @synthesize panRecognizer=_panRecognizer;
@property(nonatomic) float currentScale; // @synthesize currentScale=_currentScale;
@property(nonatomic) struct CGSize maxSize; // @synthesize maxSize=_maxSize;
@property(nonatomic) struct CGSize minSize; // @synthesize minSize=_minSize;
@property(nonatomic) BOOL allowsFreeTransform; // @synthesize allowsFreeTransform=_allowsFreeTransform;
@property(nonatomic) struct CGSize contentViewInset; // @synthesize contentViewInset=_contentViewInset;
@property(nonatomic, getter=isDragging) BOOL dragging; // @synthesize dragging=_dragging;
@property(nonatomic) struct CGRect transformationRect; // @synthesize transformationRect=_transformationRect;
@property(nonatomic) int transformationAnchor; // @synthesize transformationAnchor=_transformationAnchor;
@property(nonatomic, getter=isTransforming) BOOL transforming; // @synthesize transforming=_transforming;
@property(nonatomic, getter=isDraggingEnabled) BOOL draggingEnabled; // @synthesize draggingEnabled=_draggingEnabled;
@property(nonatomic, getter=isRotationEnabled) BOOL rotationEnabled; // @synthesize rotationEnabled=_rotationEnabled;
@property(retain, nonatomic) AFView *contentView; // @synthesize contentView=_contentView;
@property(nonatomic) float rotation; // @synthesize rotation=_rotation;
@property(retain, nonatomic) NSArray *handles; // @synthesize handles=_handles;
@property(nonatomic) __weak id <AFTransformableViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(int)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(int)arg1 duration:(double)arg2;
- (struct CGRect)destinationRectAfterRotation:(struct CGRect)arg1;
- (void)setCurrentScaleIsIdentity;
- (void)transformableHandle:(id)arg1 transformedAtPoint:(struct CGPoint)arg2 withTranslation:(struct CGPoint)arg3;
- (BOOL)shouldConstrainToSize:(struct CGSize *)arg1;
- (BOOL)isNewSizeValid:(struct CGSize)arg1;
- (struct CGPoint)referencePointForHandle:(int)arg1;
- (void)handlePan:(id)arg1;
- (void)applyTransformationRect;
- (struct CGPoint)canMoveToPoint:(struct CGPoint)arg1 fromPoint:(struct CGPoint)arg2;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (void)setHandleImage:(id)arg1;
- (void)prepareView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

