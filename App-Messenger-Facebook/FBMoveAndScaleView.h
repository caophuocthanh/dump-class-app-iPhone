//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIView.h"

#import "FBCropBottomBarDelegate.h"
#import "FBMediaTopNavigationBarDelegation.h"
#import "FBMoveAndScaleViewProtocol.h"
#import "UIScrollViewDelegate.h"

@class FBCropBottomBar, FBCropConstraintView, FBMediaTopNavigationBar, FBMoveScaleImageView, FBPhotoCropInfo, NSString, UIImage, UIScrollView;

@interface FBMoveAndScaleView : UIView <FBCropBottomBarDelegate, FBMediaTopNavigationBarDelegation, UIScrollViewDelegate, FBMoveAndScaleViewProtocol>
{
    FBMediaTopNavigationBar *_topBar;
    unsigned int _mediaPickerStyle;
    float _cropSquareRatio;
    float _fallBackMaxZoomScale;
    id <FBMoveAndScaleViewDelegate> _delegate;
    int _interfaceOrientation;
    float _topLayoutGuideLength;
    FBMoveScaleImageView *_moveScaleImageView;
    UIScrollView *_scrollView;
    UIImage *_image;
    FBCropConstraintView *_cropConstraintView;
    FBCropBottomBar *_bottomBar;
    FBPhotoCropInfo *_cropInfo;
    float _minimumZoomScale;
    float _maximumZoomScale;
    struct CGSize _minimumCroppedSize;
    struct CGPoint _centerContentOffset;
}

@property(nonatomic) struct CGPoint centerContentOffset; // @synthesize centerContentOffset=_centerContentOffset;
@property(nonatomic) float maximumZoomScale; // @synthesize maximumZoomScale=_maximumZoomScale;
@property(nonatomic) float minimumZoomScale; // @synthesize minimumZoomScale=_minimumZoomScale;
@property(retain, nonatomic) FBPhotoCropInfo *cropInfo; // @synthesize cropInfo=_cropInfo;
@property(retain, nonatomic) FBCropBottomBar *bottomBar; // @synthesize bottomBar=_bottomBar;
@property(retain, nonatomic) FBCropConstraintView *cropConstraintView; // @synthesize cropConstraintView=_cropConstraintView;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(retain, nonatomic) FBMoveScaleImageView *moveScaleImageView; // @synthesize moveScaleImageView=_moveScaleImageView;
@property(nonatomic) struct CGSize minimumCroppedSize; // @synthesize minimumCroppedSize=_minimumCroppedSize;
@property(nonatomic) float topLayoutGuideLength; // @synthesize topLayoutGuideLength=_topLayoutGuideLength;
@property(nonatomic) int interfaceOrientation; // @synthesize interfaceOrientation=_interfaceOrientation;
@property(nonatomic) __weak id <FBMoveAndScaleViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
@property(readonly, nonatomic) UIView *asUIView;
- (void)cropBottomBarDidTapCropOptionsButton:(id)arg1;
- (void)presetRotationButtonTapped:(id)arg1;
- (void)aspectRatioLockButtonTapped:(id)arg1;
- (void)didTapRightButton:(id)arg1;
- (void)didTapLeftButton:(id)arg1;
- (void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(float)arg3;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(BOOL)arg2;
- (id)viewForZoomingInScrollView:(id)arg1;
- (float)_calculateMaximumZoomScale;
- (struct CGRect)_cropRectangleForFrame:(struct CGRect)arg1;
- (void)_updateScrollViewScaleAndOffset;
- (void)_setupCropConstraintView:(struct CGRect)arg1;
- (void)_setupToolbarWithFrame:(struct CGRect)arg1;
- (void)_updateScrollViewWithFrame:(struct CGRect)arg1 image:(id)arg2;
- (void)_zoomToCropRectWithCropInfo:(id)arg1 animated:(BOOL)arg2;
- (void)hideCropConstraintView;
- (BOOL)isBottomBarHidden;
- (void)hideBottomBar:(BOOL)arg1;
- (id)getCurrentCropPoints;
- (void)zoomToCropSquareAnimated:(BOOL)arg1;
- (void)zoomToPhotoCrop:(id)arg1 animated:(BOOL)arg2;
- (void)layoutSubviews;
- (void)swapInHighResolutionImage:(id)arg1;
- (id)imageView;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 image:(id)arg2 interfaceOrientation:(int)arg3 topBarTitle:(id)arg4 photoCropInfo:(id)arg5 cropSquareRatio:(float)arg6 fallbackMaxZoomScale:(float)arg7 mediaPickerStyle:(unsigned int)arg8;
- (id)initWithFrame:(struct CGRect)arg1 image:(id)arg2 interfaceOrientation:(int)arg3 topBarTitle:(id)arg4 mediaPickerStyle:(unsigned int)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

