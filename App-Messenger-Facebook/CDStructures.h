//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@class AVAssetReader, AVAssetReaderOutput, AVAssetTrack, AVAssetWriter, AVAssetWriterInput, CKComponent, CKComponentScopeRoot, FBDisplayableMediaViewProviderContext, FBHScrollOffsetStore, FBImageDownloader, FBVideoExportConfig, FBWebViewResponse, NSArray, NSAttributedString, NSDictionary, NSError, NSString, NSURL, UIColor, UIFont, UIImage;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AudioQueueRecorder;

struct BackgroundExceptionLogger;

struct BandwidthMonitor;

struct BoxBlur1DShader {
    unsigned int program;
    struct {
        unsigned int texture;
        unsigned int texOffsetStep;
    } uniform;
};

struct BuilderImpl;

struct CATransform3D {
    float m11;
    float m12;
    float m13;
    float m14;
    float m21;
    float m22;
    float m23;
    float m24;
    float m31;
    float m32;
    float m33;
    float m34;
    float m41;
    float m42;
    float m43;
    float m44;
};

struct CGAffineTransform {
    float a;
    float b;
    float c;
    float d;
    float tx;
    float ty;
};

struct CGColorSpace;

struct CGPoint {
    float x;
    float y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    float width;
    float height;
};

struct CKAppliedComponentAnimation;

struct CKBuildComponentResult {
    id _field1;
    id _field2;
    struct CKComponentBoundsAnimation _field3;
};

struct CKButtonComponentAccessibilityConfiguration {
    id _field1;
    id _field2;
};

struct CKComponentAccessibilityContext {
    id _field1;
    id _field2;
    struct CKComponentAccessibilityTextAttribute _field3;
    SEL _field4;
};

struct CKComponentAccessibilityTextAttribute {
    CDUnknownBlockType _field1;
};

struct CKComponentAnimation;

struct CKComponentBoundsAnimation {
    double duration;
    double delay;
    unsigned int mode;
    float springDampingRatio;
    float springInitialVelocity;
};

struct CKComponentHostingViewInputs {
    CKComponentScopeRoot *scopeRoot;
    id model;
    id context;
    unordered_multimap_0bf43592 stateUpdates;
};

struct CKComponentLayout {
    CKComponent *component;
    struct CGSize size;
    shared_ptr_6a94d7a4 children;
    NSDictionary *extra;
};

struct CKComponentLayoutChild;

struct CKComponentLifecycleManagerState {
    id model;
    id context;
    struct CKSizeRange constrainedSize;
    struct CKComponentLayout layout;
    CKComponentScopeRoot *root;
    id memoizerState;
    struct CKComponentBoundsAnimation boundsAnimation;
};

struct CKComponentMountInfo;

struct CKComponentPreparationInputBatch {
    unsigned long long ID;
    struct Sections sections;
    struct vector<CKComponentPreparationInputItem *, std::__1::allocator<CKComponentPreparationInputItem *>> items;
    char isContiguousTailInsertion;
};

struct CKComponentScopeFramePair {
    id _field1;
    id _field2;
};

struct CKComponentSize {
    struct CKRelativeDimension width;
    struct CKRelativeDimension height;
    struct CKRelativeDimension minWidth;
    struct CKRelativeDimension minHeight;
    struct CKRelativeDimension maxWidth;
    struct CKRelativeDimension maxHeight;
};

struct CKComponentViewConfiguration {
    struct shared_ptr<const CKComponentViewConfiguration::Repr> rep;
};

struct CKComponentViewContext {
    id _field1;
    struct CGRect _field2;
};

struct CKMemoizationKey {
    unsigned int _field1;
    struct shared_ptr<const void> _field2;
    CDUnknownFunctionPointerType _field3;
};

struct CKNetworkImageComponentOptions {
    id _field1;
    struct CGRect _field2;
};

struct CKPendingComponentAnimation;

struct CKRelativeDimension {
    int _type;
    float _value;
};

struct CKSizeRange {
    struct CGSize min;
    struct CGSize max;
};

struct CKStackLayoutComponentChild;

struct CKStackLayoutComponentStyle {
    unsigned int direction;
    float spacing;
    unsigned int justifyContent;
    unsigned int alignItems;
};

struct CKStateConfiguration {
    NSString *title;
    UIColor *titleColor;
    UIImage *image;
    UIImage *backgroundImage;
};

struct CKStatefulViewComponentAccessibility {
    id _field1;
    id _field2;
};

struct CKStaticLayoutComponentChild;

struct CKSuspensionControllerChangesetContainer;

struct CLCImpl;

struct Cache<NSObject *, NSObject *, std::__1::hash<NSObject *>, std::__1::equal_to<NSObject *>> {
    CDUnknownFunctionPointerType *_field1;
    struct unordered_map<NSObject *, NSObject *, std::__1::hash<NSObject *>, std::__1::equal_to<NSObject *>, std::__1::allocator<std::__1::pair<NSObject *const, NSObject *>>> _field2;
    unsigned long _field3;
    unsigned long _field4;
    unsigned long _field5;
    double _field6;
};

struct Callback<id<MNServiceControllable>>;

struct Callback<std::__1::pair<FBWebViewResponse *, NSError *>>;

struct Change;

struct ClassMetadata {
    unsigned int _field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
    struct FieldMetadata _field5[1];
};

struct Collection;

struct ConfigInfo {
    id _field1;
    id _field2;
    id _field3;
};

struct Configuration;

struct CriticalSectionWrapper;

struct Cursor;

struct DefaultBandwidthMonitor;

struct Delta;

struct DiskCache;

struct DiskSizeCalculator;

struct EncodedObjectRecord;

struct EventBase;

struct Executor {
    CDUnknownFunctionPointerType *_field1;
};

struct ExtendedMetadata;

struct FBActionListItem;

struct FBAnalyticsModuleStack {
    struct vector<FBAnalyticsModuleStackItem, std::__1::allocator<FBAnalyticsModuleStackItem>> items;
};

struct FBAnalyticsModuleStackItem;

struct FBAnimationPerformanceTrackerConfig {
    int smallDropEventFrameNumber;
    int largeDropEventFrameNumber;
    int maxFrameDropAccount;
    char reportStackTraces;
};

struct FBBackgroundFetchMinimumInterval {
    double _field1;
    double _field2;
};

struct FBBottomButtonViewComponentStyle {
    UIColor *logoColor;
    UIFont *titleFont;
    UIColor *titleColor;
    UIColor *subtitleColor;
    char stretch;
};

struct FBCircledImageComponentConfig {
    float _field1;
    id _field2;
    id _field3;
    id _field4;
    float _field5;
    float _field6;
};

struct FBCollageItemOrigin {
    unsigned int x;
    unsigned int y;
};

struct FBCollageItemRect {
    struct FBCollageItemOrigin origin;
    struct FBCollageItemSize size;
};

struct FBCollageItemSize {
    unsigned int width;
    unsigned int height;
};

struct FBCollageLayoutComponentChild;

struct FBColorMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    union {
        unsigned char red;
        unsigned char r;
    } ;
    union {
        unsigned char green;
        unsigned char g;
    } ;
    union {
        unsigned char blue;
        unsigned char b;
    } ;
    union {
        float alpha;
        float a;
    } ;
};

struct FBComponentCollectionViewDataSourceCellConfig;

struct FBComponentTableViewDataSourceCellConfig {
    id _field1;
    int _field2;
    id _field3;
    char _field4;
    char _field5;
    float _field6;
    struct UIEdgeInsets _field7;
    struct UIEdgeInsets _field8;
    char _field9;
};

struct FBComposerPostCompositionItemComponentStyle {
    unsigned int _field1;
    char _field2;
};

struct FBConsistencyConfig {
    struct unordered_map<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>, FB::HashFunctor<NSObject *>, FB::EqualFunctor<NSObject *>, std::__1::allocator<std::__1::pair<NSString *const, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>>> _field1;
};

struct FBConsistentFieldDescription {
    id _field1;
    id _field2;
    SEL _field3[5];
    int _field4;
    char *_field5[5];
    int _field6;
    char _field7;
    char _field8;
    char _field9;
    unsigned char _field10;
};

struct FBDeviceBatteryInfo {
    int _field1;
    float _field2;
};

struct FBDotConfiguration {
    id _field1;
    float _field2;
    float _field3;
    id _field4;
};

struct FBDotsConfiguration {
    unsigned int _field1;
    unsigned int _field2;
    id _field3;
    id _field4;
    id _field5;
    float _field6;
    float _field7;
    id _field8;
    float _field9;
};

struct FBDoubleLinkedList {
    struct FBDoubleLinkedList *flink;
    struct FBDoubleLinkedList *blink;
};

struct FBErrorMetadataConfig {
    char *preamble;
    unsigned int preambleLen;
    char *errorParams;
    unsigned int errorParamsLen;
    char *userAgent;
    unsigned int userAgentLen;
};

struct FBFXConfettiEffectFragment {
    tvec3_440bf033 _field1;
    tvec3_440bf033 _field2;
    struct tquat<float> _field3;
    tvec3_440bf033 _field4;
    float _field5;
    float _field6;
};

struct FBFXConfettiEffectUpdate {
    tvec3_440bf033 _field1;
    tvec3_440bf033 _field2;
    float _field3;
    float _field4;
};

struct FBFXGeometryEffectShader {
    unsigned int program;
    CDStruct_f1931e0c uniform;
};

struct FBFXGeometryEffectVertex {
    struct tvec4<float> _field1;
    tvec3_440bf033 _field2;
    tvec3_440bf033 _field3;
    struct tvec2<float> _field4;
};

struct FBFXPixellateEffectShader {
    unsigned int program;
    struct {
        unsigned int transform;
        unsigned int texture;
        unsigned int invBlockSize;
        unsigned int alpha;
    } uniform;
};

struct FBFeedHScrollComponentOffScreenAutoScrollConfig {
    char shouldOffScreenAutoScroll;
    double delayBeforeAutoScroll;
    NSString *hscrollOffsetKey;
};

struct FBFeedHScrollComponentScrollToPreviewConfig {
    char shouldScrollToPreview;
    double delayBeforeScrollToPreview;
    double delayBeforeScrollBackFromPreview;
    double scrollToPreviewPeriod;
    NSString *scrollToPreviewKey;
};

struct FBFeedHScrollOptions {
    int _field1;
    SEL _field2;
    SEL _field3;
    SEL _field4;
    struct FBFeedHScrollComponentOffScreenAutoScrollConfig _field5;
    SEL _field6;
    struct FBFeedHScrollComponentScrollToPreviewConfig _field7;
    unsigned int _field8;
};

struct FBFeedHScrollPaginatorDotConfiguration {
    id _field1;
    id _field2;
    float _field3;
    float _field4;
    id _field5;
    unsigned int _field6;
};

struct FBFeedHScrollPaginatorDotsConfiguration {
    unsigned int totalDots;
    UIColor *deselectedColor;
    UIColor *selectedColor;
    UIColor *borderColor;
    float borderWidth;
    float dotsSize;
    UIColor *backgroundColor;
    float dotSpacing;
};

struct FBFeedHscrollPaginatorConfiguration {
    unsigned int numDotsPerPage;
    unsigned int numTotalStories;
    char useFixedDotsPerPage;
    UIColor *deselectedColor;
    UIColor *selectedColor;
    UIColor *borderColor;
    float borderWidth;
    float dotsSize;
    float dotSpacing;
    float arrowSpacing;
    char isPaginatorOnTop;
    struct UIEdgeInsets paginatorMargins;
    struct UIEdgeInsets paginatorPaddings;
    unsigned int backgroundStyle;
    SEL didTapPaginatorAction;
    SEL didHorizontallySwipePaginatorAction;
};

struct FBFeedInfiniteHScrollComponentConnectionConfig {
    CDUnknownBlockType _field1;
    CDUnknownBlockType _field2;
    CDUnknownBlockType _field3;
    struct FBGraphQLFieldSet *_field4;
    id _field5;
    id _field6;
    CDUnknownBlockType _field7;
    CDUnknownBlockType _field8;
    CDUnknownBlockType _field9;
    unsigned int _field10;
    char _field11;
};

struct FBFeedInfiniteHScrollEdge;

struct FBFeedInfiniteHScrollOptions {
    int _field1;
    SEL _field2;
    SEL _field3;
    id _field4;
    id _field5;
    struct FBFeedHScrollComponentOffScreenAutoScrollConfig _field6;
    SEL _field7;
    struct FBFeedHScrollComponentScrollToPreviewConfig _field8;
    unsigned int _field9;
};

struct FBFlattenedArrayControllerChange;

struct FBFourPartBorderLayoutChildren {
    CKComponent *top;
    CKComponent *left;
    CKComponent *bottom;
    CKComponent *right;
};

struct FBFramedImageViewConstraint {
    float borderWidth;
    struct CGSize borderImageSize;
};

struct FBGraphQLFetchRequestManager {
    struct unordered_map<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>, FB::HashFunctor<RequestMapKey>, FB::EqualFunctor<RequestMapKey>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>>> _requestsInFlight;
};

struct FBGraphQLField {
    char *_field1;
    char *_field2;
    char *_field3;
    struct FBGraphQLFieldSet *_field4;
    char *_field5;
};

struct FBGraphQLFieldSet {
    int _field1;
    struct FBGraphQLField _field2[0];
};

struct FBGraphQLInputField {
    id _field1;
    char *_field2;
    char _field3;
    char _field4;
};

struct FBHScrollComponentAlpha {
    float alpha;
};

struct FBHScrollComponentChild;

struct FBHScrollComponentStyle {
    float spacing;
    unsigned int alignItems;
    struct FBHScrollComponentAlpha alpha;
    struct CKRelativeDimension width;
    unsigned int clippingStyle;
    unsigned int decelerationRate;
    Class targetComponentClass;
    char hscrollResizingEnabled;
    id currentChildScopeFrameID;
};

struct FBHScrollOptions {
    Class expandToTargetClass;
    float hExpansionLeftAndRightInset;
    int nearingEndOffset;
    SEL endDraggingScrollViewAction;
    FBHScrollOffsetStore *hscrollOffsetStore;
    NSString *accessibilityIdentifier;
    unsigned int delaysContentTouchesOption;
    char disableBounce;
    SEL didScrollAction;
    SEL nearingEndAction;
    SEL scrollToComponentAction;
    unsigned int touchThroughOption;
};

struct FBHighlightingImageButtonComponentOptions {
    struct UIEdgeInsets _field1;
};

struct FBHorizontalLineItem;

struct FBImpressionContentOffsetTrigger {
    float minimumContentOffset;
    float maximumContentOffset;
};

struct FBLayout {
    struct CGSize size;
    struct UIEdgeInsets margins;
};

struct FBLigerHTTPCallbacks;

struct FBLikeControlLayout {
    struct CGSize _field1;
    struct CGRect _field2;
    struct CGRect _field3;
};

struct FBMPCDecodingObjectContext;

struct FBMPCEncodingObjectContext {
    struct vector<FBMPCEncodingObjectContext::EncodedObjectRecord, std::__1::allocator<FBMPCEncodingObjectContext::EncodedObjectRecord>> _encodedObjects;
};

struct FBMUploadBandwidthMeasurement {
    double _field1;
    unsigned int _field2;
};

struct FBMUploadConnectionQualityMeasurement {
    unsigned int _field1;
    unsigned int _field2;
};

struct FBMapRouteDrawnEndpoints {
    struct CGPoint _field1;
    struct CGPoint _field2;
};

struct FBMediaViewControllerTransitionDismissingContext {
    unsigned int dismissalType;
    FBDisplayableMediaViewProviderContext *mediaViewProviderContext;
    id mediaViewOrLayer;
    unsigned int slideAwayType;
    id transitionContext;
    struct CGPoint velocity;
};

struct FBMemModelPropertyHandle {
    unsigned int _field1;
};

struct FBMemModelVisitor {
    CDUnknownFunctionPointerType *_field1;
};

struct FBMobileConfigMmapHandle;

struct FBMobileConfigStorageManager;

struct FBNSStringCache {
    struct FBNSStringCacheItem *items;
    unsigned int prng_lfsr;
    unsigned char age[1024];
};

struct FBNSStringCacheItem;

struct FBOrderedDictionaryDynamicKeyComparator {
    CDUnknownBlockType _f;
};

struct FBPJPEGEncodingInfo {
    short _version;
    int _fileSize;
    NSArray *_scanOffsets;
};

struct FBProgressiveJPEGErrorManager {
    struct jpeg_error_mgr pub;
    int setjmp_buffer[28];
};

struct FBQualityEstimate {
    double _field1;
    char _field2;
};

struct FBRangeAttributes;

struct FBRateLimiter<unsigned long long>;

struct FBRichTextComponentAccessibilityContext {
    id _field1;
    id _field2;
    id _field3;
    struct CKComponentAccessibilityTextAttribute _field4;
};

struct FBRichTextComponentStyle {
    UIFont *font;
    UIColor *color;
    FBImageDownloader *imageDownloader;
    struct CGSize textShadowOffset;
    unsigned int maximumNumberOfLines;
    unsigned int truncationMode;
    NSAttributedString *truncationAttributedString;
    int horizontalAlignmentMode;
    NSArray *menuItems;
};

struct FBRichTextImageAttachmentInsets {
    float top;
    float left;
    float bottom;
    float right;
};

struct FBScrollViewInteractionState {
    char _field1;
    char _field2;
    char _field3;
    char _field4;
};

struct FBScrollViewState {
    struct CGRect _field1;
    struct CGPoint _field2;
    struct CGSize _field3;
    struct UIEdgeInsets _field4;
    float _field5;
    float _field6;
    struct FBScrollViewInteractionState _field7;
};

struct FBSearchResultsCoverPhotoGradientComponentStyle {
    unsigned int _field1;
};

struct FBSearchResultsLinkComponentStyle {
    int layoutType;
};

struct FBSearchResultsListItemComponentStyle {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    char _field5;
    char _field6;
};

struct FBShadowMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    struct CGSize offset;
    float blur;
    struct FBColorMetrics color;
};

struct FBStreamingFlagsManager {
    struct unordered_map<NSString *, unsigned int, FB::HashFunctor<NSObject *>, FB::EqualFunctor<NSObject *>, std::__1::allocator<std::__1::pair<NSString *const, unsigned int>>> _maxImageFlagPerUrlKey;
    struct Mutex _lock;
};

struct FBTagViewMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    float tagVerticalOffset;
    float tagHorizontalOffset;
    float tagMaximumVerticalDownRatio;
    float tagMaximumHorizontalDownRatio;
    float tagRectOuterMargin;
    float tagFrameWidthPadding;
    float tagBorderPadding;
    float tagFrameTextBoxVerticalPadding;
    float removeButtonWidth;
    float tagRoundedCornerRadius;
    float tagArrowHeight;
    float tagHalfArrowWidth;
    float tagStrokeLineWidth;
    float tagOverlapThreshold;
    float tagOutOfScreenSizeThreshold;
    float leftPaddingForRemoveImage;
    float rightPaddingForRemoveImage;
    struct CGSize textShadowOffsetSize;
    unsigned int textFontSize;
    UIColor *textColor;
    UIImage *removeImage;
    int removeImageContentMode;
    UIColor *strokeColor;
    struct FBShadowMetrics shadowMetrics;
    UIColor *fillColor;
    char shouldShowTagShadow;
    char shouldFillBackgroundForRemoveImage;
    char shouldBounceWhenTapped;
    char shouldStrokePath;
};

struct FBTextMetrics {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    id _field3;
    float _field4;
    float _field5;
    float _field6;
    struct FBColorMetrics _field7;
    struct FBShadowMetrics _field8;
    unsigned int _field9;
    unsigned int _field10;
    struct FBColorMetrics _field11;
};

struct FBTigonService {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
    _Bool _field4;
};

struct FBTraceEvent {
    int _field1;
    struct __CFString *_field2;
    struct __CFDictionary *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    struct FBDoubleLinkedList _field6;
    struct FBDoubleLinkedList _field7;
    struct FBDoubleLinkedList _field8;
    void *_field9;
    struct __CFString *_field10;
};

struct FBVideoAssetExportParams {
    AVAssetReader *assetReader;
    AVAssetTrack *audioTrack;
    AVAssetTrack *videoTrack;
    AVAssetReaderOutput *audioOutput;
    AVAssetReaderOutput *videoOutput;
    AVAssetWriterInput *audioInput;
    AVAssetWriterInput *videoInput;
    AVAssetWriter *assetWriter;
    NSURL *outputURL;
};

struct FBWebPivotsToolbarViewMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    float toolbarHeight;
    float toolbarShadowHeight;
    float toolbarEdgePadding;
    float toolbarInterButtonSpacing;
    float toolbarButtonWidth;
};

struct FBWebRTCCallMonitor {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct FBWebRTCConfigWrapper {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
    id _field6;
    id _field7;
    id _field8;
    _Bool _field9;
    int _field10;
    int _field11;
    int _field12;
};

struct FBWebRTCLogWrapper {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    id _field3;
    _Bool _field4;
    id _field5;
    id _field6;
    id _field7;
    id _field8;
    id _field9;
};

struct FBWebRTCMessageWrapper {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
    id _field6;
    id _field7;
};

struct FBWebRTCUIWrapper {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
    id _field6;
    id _field7;
    id _field8;
    char _field9;
    long long _field10;
    char _field11;
    id _field12;
    id _field13;
    long long _field14;
    id _field15;
    id _field16;
    id _field17;
    id _field18;
    struct FBWebRTCLogWrapper *_field19;
    id _field20;
    id _field21;
    struct FBWebRTCConfigWrapper *_field22;
    id _field23;
    id _field24;
    id _field25;
    id _field26;
    unsigned int _field27;
    id _field28;
    int _field29;
    char _field30;
    id _field31;
};

struct FBWhistleConnectionStatsLogger {
    CDUnknownFunctionPointerType *_vptr$TraceEventObserver;
    struct map<proxygen::TraceFieldType, std::__1::basic_string<char>, std::__1::less<proxygen::TraceFieldType>, std::__1::allocator<std::__1::pair<const proxygen::TraceFieldType, std::__1::basic_string<char>>>> connStats_;
    struct vector<std::__1::pair<proxygen::TraceEventType, long long>, std::__1::allocator<std::__1::pair<proxygen::TraceEventType, long long>>> eventTime_;
};

struct FancyString {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field1;
};

struct FieldMetadata {
    char *_field1;
    unsigned int _field2;
    char _field3;
};

struct FilterConfig {
    float vibranceValue;
    float equalizationWeight;
    float minimumFaceBrightness;
    float minSlope;
    float maxSlope;
    float bilateralDetailScale;
    float denoising;
    float bilateralDefaultDetailScale;
    float bilateralMaxDetailScale;
    float bilateralLumSigma;
    float bilateralSpaceSigmaFactor;
    _Bool useBilateralGridApproximation;
    float noiseMaskScale;
    int noiseMaskRadius;
    float kneeDenoising;
    float maxDenoising;
};

struct FilteredImage;

struct FlowLayoutDelegateRespondsTo {
    char sizeForItemAtIndexPath;
    char insetForSectionAtIndex;
    char minimumLineSpacingForSectionAtIndex;
    char minimumInteritemSpacingForSectionAtIndex;
    char referenceSizeForHeaderInSection;
    char referenceSizeForFooterInSection;
};

struct FrameRateMonitor {
    struct circular_buffer<long long> _field1;
};

struct GraphQLFieldDescriptionish {
    CDUnknownFunctionPointerType *_field1;
};

struct GraphStore;

struct HTTPClientSettings {
    struct EventBase *_field1;
    struct unique_ptr<proxygen::httpclient::RequestHandlerFactory, std::__1::default_delete<proxygen::httpclient::RequestHandlerFactory>> _field2;
    struct HTTPTransactionAdaptorFactory *_field3;
};

struct HTTPHeaders {
    struct fbvector<proxygen::HTTPHeaderCode, std::__1::allocator<proxygen::HTTPHeaderCode>> _field1;
    struct fbvector<const std::__1::basic_string<char>*, std::__1::allocator<const std::__1::basic_string<char>*>> _field2;
    struct fbvector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field3;
    unsigned int _field4;
};

struct HTTPRequest;

struct HTTPResponse {
    unsigned short _field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct HTTPHeaders _field3;
};

struct HTTPTransactionAdaptorFactory;

struct I420VideoFrame {
    CDUnknownFunctionPointerType *_field1;
    struct Plane _field2;
    struct Plane _field3;
    struct Plane _field4;
    int _field5;
    int _field6;
    unsigned int _field7;
    long long _field8;
    long long _field9;
};

struct IFBMobileConfigManager {
    CDUnknownFunctionPointerType *_field1;
};

struct IVarArray {
    unsigned int _field1;
    struct unique_ptr<id [], std::__1::default_delete<id []>> _field2;
};

struct Image<facebook::image_processing::RGBA8Pixel> {
    struct shared_ptr<facebook::image_processing::RGBA8Pixel> data_;
    unsigned int widthInPixels;
    unsigned int heightInPixels;
    unsigned int bytesPerPixel;
};

struct ImageMetadata;

struct Invalidatable;

struct IosPrivacyGuard;

struct JKConstBuffer {
    struct JKConstPtrRange _field1;
};

struct JKConstPtrRange {
    char *_field1;
    unsigned int _field2;
};

struct JKEncodeCache {
    id _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct JKEncodeState {
    struct JKManagedBuffer _field1;
    struct JKManagedBuffer _field2;
    unsigned int _field3;
    struct JKFastClassLookup _field4;
    struct JKEncodeCache _field5[1024];
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct JKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct JKHashTableEntry {
    unsigned int _field1;
    id _field2;
    id _field3;
};

struct JKManagedBuffer {
    struct JKPtrRange _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct JKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct JKObjectStack {
    void **_field1;
    void **_field2;
    unsigned int *_field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct JKParseState {
    unsigned int _field1;
    struct JKConstBuffer _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    struct JKParseToken _field9;
    struct JKObjectStack _field10;
    struct JKTokenCache _field11;
    struct JKObjCImpCache _field12;
    id _field13;
    int _field14;
    char _field15;
};

struct JKParseToken {
    struct JKConstPtrRange _field1;
    unsigned int _field2;
    struct JKTokenValue _field3;
    struct JKManagedBuffer _field4;
};

struct JKPtrRange {
    char *_field1;
    unsigned int _field2;
};

struct JKTokenCache {
    struct JKTokenCacheItem *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct JKTokenCacheItem;

struct JKTokenValue {
    struct JKConstPtrRange _field1;
    unsigned int _field2;
    unsigned int _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct JKTokenCacheItem *_field5;
};

struct KeyboardConfiguration {
    int interfaceOrientation;
    float keyboardHeight;
};

struct MNAdminMessageCellLayoutInfo {
    struct CGRect _field1;
    struct CGRect _field2;
    float _field3;
};

struct MNBubbleViewAttributes {
    unsigned int displayType;
    unsigned int type;
    unsigned int position;
    unsigned int section;
    unsigned int groupingType;
    char highlighted;
};

struct MNCollectionViewLayoutAttributesTransformContext {
    struct CGSize _field1;
    struct CGRect _field2;
    struct UIEdgeInsets _field3;
};

struct MNPaymentsSenderReceiverProfileViewParameters {
    struct CGSize profilePictureViewSize;
    float profilePictureViewCornerRadius;
    float profilePictureViewCornerSize;
    float profilePictureTopPadding;
    float profilePictureLeftPadding;
    float textViewLeftPadding;
    float textViewRightPadding;
    float bottomSeparatorThickness;
    float bottomSeparatorSidePadding;
    float bottomSeparatorTopPadding;
    float minimalHeight;
    float displayNameTextFontSize;
};

struct MNRichMediaChunkedUploadJobBlueprint {
    long long eachChunkSize;
    long long remainderChunkSize;
    unsigned int totalNumberOfChunks;
    long long maximumNumberFailedBytesAllowed;
    unsigned int maximumNumberFailedChunksAllowed;
};

struct MNRichMediaChunkedUploadStatus {
    unsigned int jobStatus;
    unsigned int chunksInFlight;
    char uploadHasFinishedFailedOrCancelled;
    char uploadWasResumed;
    long long bytesUploaded;
    unsigned int chunksUploaded;
    unsigned int totalChunksFailed;
    long long totalBytesFailed;
};

struct MNRichMediaUploadJobMetadata {
    long long totalNumberOfBytes;
};

struct MNRichMediaUploadJobProgressInformation {
    long long _field1;
    double _field2;
};

struct MNTypingCellLayoutSpec {
    float totalHeight;
    struct CGRect bubbleFrame;
    struct UIEdgeInsets bubbleContentInset;
    struct CGRect profileImageFrame;
};

struct MNVideoTrimmerHandlesRange {
    float _field1;
    float _field2;
};

struct MNVideoTrimmerVideoInfo {
    CDStruct_1b6d18a9 length;
    unsigned int fileSize;
};

struct MQTTClient;

struct MQTTClientGlue;

struct MQTTClientSettings;

struct MQTTMessage;

struct ManipulationParams {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    struct CGRect _field5;
};

struct MemModelObjectFieldCache {
    struct vector<void *, std::__1::allocator<void *>> _field1;
};

struct MessagePackParseState {
    struct FBNSStringCache cache;
};

struct MountContext {
    struct shared_ptr<CK::Component::ViewManager> _field1;
    struct CGPoint _field2;
    struct UIEdgeInsets _field3;
    char _field4;
};

struct MountResult {
    char _field1;
    struct MountContext _field2;
};

struct Mutex {
    struct _opaque_pthread_mutex_t _m;
};

struct NSMutableArray {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NodeSource;

struct Omnistore;

struct OpenGles20;

struct Optional<FBPJPEGEncodingInfo> {
    union {
        struct FBPJPEGEncodingInfo value_;
    } ;
    _Bool hasValue_;
};

struct OrderedList<unsigned long long>;

struct POPAnimatorItem;

struct Persistence;

struct PersistentKeyValueStore;

struct PingPongFilter {
    int pingPong;
    int width;
    int height;
    unsigned int bitmapInfo;
    struct CGColorSpace *colorSpace;
    struct __CVBuffer *cv_pixelBuffers[2];
    struct __CVOpenGLESTextureCache *cv_textureCache;
    struct __CVBuffer *cv_textures[2];
    unsigned int gl_framebuffers[2];
    unsigned int gl_fallback_textures[2];
};

struct Plane {
    struct scoped_ptr_malloc<unsigned char, &webrtc::AlignedFree> _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct PositionTexCoordQuad {
    unsigned int buffers[2];
};

struct Promise<id<MNServiceControllable>> {
    unsigned int ResolutionState;
    id _result;
    struct vector<FB::Functional::Callback<id<MNServiceControllable>>, std::__1::allocator<FB::Functional::Callback<id<MNServiceControllable>>>> _resolutionHandlers;
    unsigned int _resolutionState;
    struct mutex _mutex;
};

struct Promise<std::__1::pair<FBWebViewResponse *, NSError *>> {
    unsigned int ResolutionState;
    struct pair<FBWebViewResponse *, NSError *> _result;
    struct vector<FB::Functional::Callback<std::__1::pair<FBWebViewResponse *, NSError *>>, std::__1::allocator<FB::Functional::Callback<std::__1::pair<FBWebViewResponse *, NSError *>>>> _resolutionHandlers;
    unsigned int _resolutionState;
    struct mutex _mutex;
};

struct RGBA8Pixel;

struct ReadWriteLock {
    struct _opaque_pthread_rwlock_t {
        long __sig;
        char __opaque[124];
    } _rwlock;
};

struct Record;

struct RecordAndSnapshot {
    shared_ptr_d8dd3219 _field1;
    shared_ptr_4b749c87 _field2;
    struct MemModelObjectFieldCache _field3;
};

struct RecursiveMutex {
    struct _opaque_pthread_mutex_t _m;
};

struct Repr;

struct RequestHandlerFactory;

struct RequestStats {
    vector_31c84f95 _field1;
};

struct SSState<POP::Vector4<double>> {
    struct Vector4<double> _field1;
    struct Vector4<double> _field2;
};

struct SaturationShader {
    unsigned int program;
    struct {
        unsigned int texture;
        unsigned int saturation;
        unsigned int blendWithColor;
    } uniform;
};

struct Sections {
    struct set<int, std::__1::less<int>, std::__1::allocator<int>> _insertions;
    struct set<int, std::__1::less<int>, std::__1::allocator<int>> _removals;
};

struct SimpleIndex {
    struct map<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>>> _field1;
};

struct Snapshot {
    unsigned int gl_target;
    unsigned int gl_texture;
    struct TexCoordExtent texCoordExtent;
    unsigned int bitmapWidth;
    unsigned int bitmapHeight;
    struct __CVOpenGLESTextureCache *cv_textureCache;
    struct __CVBuffer *cv_pixelBuffer;
    struct __CVBuffer *cv_texture;
};

struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
};

struct Store;

struct StoreManager;

struct StoreManagerFactory;

struct SubPageInfo;

struct SubscriptionHandle;

struct TexCoordExtent {
    float left;
    float right;
    float bottom;
    float top;
};

struct TextureShader {
    unsigned int program;
    CDStruct_f1931e0c uniform;
};

struct TickTime {
    long long _field1;
};

struct TigonBuffer;

struct TigonCallbacks {
    CDUnknownFunctionPointerType *_field1;
};

struct TraceEvent;

struct TypeHelper {
    CDUnknownFunctionPointerType *_field1;
};

struct UIEdgeInsets {
    float top;
    float left;
    float bottom;
    float right;
};

struct UIOffset {
    float horizontal;
    float vertical;
};

struct Vector4<double> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct VideoCaptureCapability {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    _Bool _field8;
};

struct VideoCaptureDataCallback;

struct VideoCaptureFeedBack;

struct VideoCaptureIos {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    int _field3;
    char *_field4;
    struct CriticalSectionWrapper *_field5;
    int _field6;
    struct VideoCaptureCapability _field7;
    struct CriticalSectionWrapper *_field8;
    struct TickTime _field9;
    struct TickTime _field10;
    _Bool _field11;
    _Bool _field12;
    int _field13;
    int _field14;
    struct VideoCaptureDataCallback *_field15;
    struct VideoCaptureFeedBack *_field16;
    struct TickTime _field17;
    struct TickTime _field18;
    struct FrameRateMonitor _field19;
    int _field20;
    struct I420VideoFrame _field21;
    struct VideoFrame _field22;
    long long _field23;
    id _field24;
    _Bool _field25;
    int _field26;
    struct VideoCaptureCapability _field27;
};

struct VideoFrame {
    char *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    long long _field7;
};

struct ViewManager;

struct ViewReusePoolMap {
    struct unordered_map<CK::Component::ViewKey, CK::Component::ViewReusePool, std::__1::hash<CK::Component::ViewKey>, std::__1::equal_to<CK::Component::ViewKey>, std::__1::allocator<std::__1::pair<const CK::Component::ViewKey, CK::Component::ViewReusePool>>> map;
    struct vector<UIView *, std::__1::allocator<UIView *>> vendedViews;
};

struct WebRTCConfigInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct WebRTCEngine;

struct WhistleAppThreadExecutor {
    CDUnknownFunctionPointerType *_vptr$Executor;
};

struct ZZCentralFileHeader {
    unsigned int _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned short _field7;
    unsigned short _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned short _field12;
    unsigned short _field13;
    unsigned short _field14;
    unsigned short _field15;
    unsigned short _field16;
    unsigned int _field17;
    unsigned int _field18;
};

struct ZZLocalFileHeader {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned short _field10;
    unsigned short _field11;
};

struct ZZStandardCryptoEngine {
    int keys[3];
};

struct _ASDisplayNodeExtraIvars {
    unsigned int _minimorphType;
    struct _FBMinimorphFactor _minimorphFactor;
    struct _FBMinimorphInfo _lastKnownInfo;
    struct CGSize _miniConstrainedSize;
    struct CGSize _maxConstrainedSize;
    struct CGSize _miniSize;
    struct CGSize _maxSize;
    struct {
        unsigned int subtreeNeedsMinimorphUpdate:1;
        unsigned int subtreeDisableMinimorph:1;
        unsigned int hasHadMinimorphContentsScaleApplied:1;
        unsigned int miniSizeCalculated:1;
        unsigned int maxSizeCalculated:1;
    } _flags;
};

struct _FBAConfig {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> appId;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> appSecret;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> appVersion;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> deviceId;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> logDirectory;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> hostname;
    CDUnknownFunctionPointerType *parameterCallbacks;
    unsigned int numParameterCallbacks;
};

struct _FBFXPremultipliedColor {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct _FBFacepileViewLayout {
    struct CGSize _field1;
    unsigned int _field2;
};

struct _FBFloatRange {
    float min;
    float max;
};

struct _FBMinimorphFactor {
    float minimorphFactor;
    float contentsScaleFactor;
};

struct _FBMinimorphInfo {
    struct _FBFloatRange contentsScaleRange;
    struct _FBFloatRange redrawThresholdRange;
};

struct _FBPickUpVelocity {
    struct CGPoint _field1;
    float _field2;
    float _field3;
};

struct _NSRange {
    unsigned int location;
    unsigned int length;
};

struct _OriginalUnfoldableComponentLayerState {
    struct CGPoint _field1;
    float _field2;
};

struct _POPAnimationState {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    int _field3;
    id _field4;
    unsigned int _field5;
    double _field6;
    double _field7;
    double _field8;
    id _field9;
    CDUnknownBlockType _field10;
    CDUnknownBlockType _field11;
    CDUnknownBlockType _field12;
    CDUnknownBlockType _field13;
    id _field14;
    id _field15;
    float _field16;
    int _field17;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct __CFString;

struct __CVBuffer;

struct __CVOpenGLESTextureCache;

struct __hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>;

struct __hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>;

struct __hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>;

struct __hash_node<std::__1::__hash_value_type<CKLayoutMemoizationKey, CKComponentLayout>, void *>;

struct __hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>;

struct __hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>;

struct __hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>;

struct __hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>;

struct __hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>;

struct __hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>;

struct __hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>;

struct __hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>;

struct __hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>;

struct __hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>;

struct __hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>;

struct __hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>;

struct __hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>;

struct __hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>;

struct __hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>;

struct __hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>;

struct __hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>;

struct __hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>;

struct __hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>;

struct __hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>;

struct __hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>;

struct __hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>;

struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>;

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct __tree_node<std::__1::__value_type<id, id>, void *>;

struct _mosquitto_packet {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned short _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    char *_field10;
    struct _mosquitto_packet *_field11;
};

struct _opaque_pthread_mutex_t {
    long __sig;
    char __opaque[40];
};

struct array<CKStateConfiguration, 8> {
    struct CKStateConfiguration __elems_[8];
};

struct array<float, 256> {
    float __elems_[256];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned int __cap_;
                    unsigned int __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[11];
                } __s;
                struct __raw {
                    unsigned long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct circular_buffer<long long> {
    struct vector<long long, std::__1::allocator<long long>> _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct delegateOptionalProtocolResponseFlags {
    unsigned int delegateCollectionViewSizeForBackgroundHeaderViewInSection:1;
    unsigned int delegateCollectionViewHeightForRowCellInSection:1;
    unsigned int delegateCollectionViewSpacingBetweenRowsInSection:1;
    unsigned int delegateCollectionViewSectionInsetsForSection:1;
};

struct deque<CKSuspensionControllerChangesetContainer, std::__1::allocator<CKSuspensionControllerChangesetContainer>> {
    struct __split_buffer<CKSuspensionControllerChangesetContainer *, std::__1::allocator<CKSuspensionControllerChangesetContainer *>> {
        struct CKSuspensionControllerChangesetContainer **__first_;
        struct CKSuspensionControllerChangesetContainer **__begin_;
        struct CKSuspensionControllerChangesetContainer **__end_;
        struct __compressed_pair<CKSuspensionControllerChangesetContainer **, std::__1::allocator<CKSuspensionControllerChangesetContainer *>> {
            struct CKSuspensionControllerChangesetContainer **__first_;
        } __end_cap_;
    } __map_;
    unsigned int __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<CKSuspensionControllerChangesetContainer>> {
        unsigned long __first_;
    } __size_;
};

struct deque<NSValue *, std::__1::allocator<NSValue *>> {
    struct __split_buffer<NSValue *__strong *, std::__1::allocator<NSValue *__strong *>> {
        id **__first_;
        id **__begin_;
        id **__end_;
        struct __compressed_pair<NSValue *__strong **, std::__1::allocator<NSValue *__strong *>> {
            id **__first_;
        } __end_cap_;
    } __map_;
    unsigned int __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<NSValue *>> {
        unsigned long __first_;
    } __size_;
};

struct deque<unsigned long long, std::__1::allocator<unsigned long long>> {
    struct __split_buffer<unsigned long long *, std::__1::allocator<unsigned long long *>> {
        unsigned long long **__first_;
        unsigned long long **__begin_;
        unsigned long long **__end_;
        struct __compressed_pair<unsigned long long **, std::__1::allocator<unsigned long long *>> {
            unsigned long long **__first_;
        } __end_cap_;
    } __map_;
    unsigned int __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long long>> {
        unsigned long __first_;
    } __size_;
};

struct duration<long long, std::__1::ratio<1, 1>> {
    long long __rep_;
};

struct fbvector<const std::__1::basic_string<char>*, std::__1::allocator<const std::__1::basic_string<char>*>> {
    struct Impl {
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> **_field1;
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> **_field2;
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> **_field3;
    } _field1;
};

struct fbvector<proxygen::HTTPHeaderCode, std::__1::allocator<proxygen::HTTPHeaderCode>> {
    struct Impl {
        unsigned char *_field1;
        unsigned char *_field2;
        unsigned char *_field3;
    } _field1;
};

struct fbvector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct Impl {
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field2;
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field3;
    } _field1;
};

struct function<NSString *()>;

struct function<std::__1::shared_ptr<facebook::mobile::graphstore::GraphStore>()> {
    struct type _field1;
    struct __base<std::__1::shared_ptr<facebook::mobile::graphstore::GraphStore>()> *_field2;
};

struct future<std::__1::unique_ptr<facebook::mobile::xplat::compactdisk::PersistentKeyValueStore::FetchResult, std::__1::default_delete<facebook::mobile::xplat::compactdisk::PersistentKeyValueStore::FetchResult>>> {
    struct __assoc_state<std::__1::unique_ptr<facebook::mobile::xplat::compactdisk::PersistentKeyValueStore::FetchResult, std::__1::default_delete<facebook::mobile::xplat::compactdisk::PersistentKeyValueStore::FetchResult>>> *_field1;
};

struct future<void> {
    struct __assoc_sub_state *_field1;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct jpeg_color_deconverter;

struct jpeg_color_quantizer;

struct jpeg_d_coef_controller;

struct jpeg_d_main_controller;

struct jpeg_d_post_controller;

struct jpeg_decomp_master;

struct jpeg_decompress_struct {
    struct jpeg_error_mgr *err;
    struct jpeg_memory_mgr *mem;
    struct jpeg_progress_mgr *progress;
    void *client_data;
    int is_decompressor;
    int global_state;
    struct jpeg_source_mgr *src;
    unsigned int image_width;
    unsigned int image_height;
    int num_components;
    int jpeg_color_space;
    int out_color_space;
    unsigned int scale_num;
    unsigned int scale_denom;
    double output_gamma;
    int buffered_image;
    int raw_data_out;
    int dct_method;
    int do_fancy_upsampling;
    int do_block_smoothing;
    int quantize_colors;
    int dither_mode;
    int two_pass_quantize;
    int desired_number_of_colors;
    int enable_1pass_quant;
    int enable_external_quant;
    int enable_2pass_quant;
    unsigned int output_width;
    unsigned int output_height;
    int out_color_components;
    int output_components;
    int rec_outbuf_height;
    int actual_number_of_colors;
    char **colormap;
    unsigned int output_scanline;
    int input_scan_number;
    unsigned int input_iMCU_row;
    int output_scan_number;
    unsigned int output_iMCU_row;
    int (*coef_bits)[64];
    CDStruct_183601bc *quant_tbl_ptrs[4];
    CDStruct_183601bc *dc_huff_tbl_ptrs[4];
    CDStruct_183601bc *ac_huff_tbl_ptrs[4];
    int data_precision;
    CDStruct_183601bc *comp_info;
    int is_baseline;
    int progressive_mode;
    int arith_code;
    unsigned char arith_dc_L[16];
    unsigned char arith_dc_U[16];
    unsigned char arith_ac_K[16];
    unsigned int restart_interval;
    int saw_JFIF_marker;
    unsigned char JFIF_major_version;
    unsigned char JFIF_minor_version;
    unsigned char density_unit;
    unsigned short X_density;
    unsigned short Y_density;
    int saw_Adobe_marker;
    unsigned char Adobe_transform;
    int CCIR601_sampling;
    struct jpeg_marker_struct *marker_list;
    int max_h_samp_factor;
    int max_v_samp_factor;
    int min_DCT_h_scaled_size;
    int min_DCT_v_scaled_size;
    unsigned int total_iMCU_rows;
    char *sample_range_limit;
    int comps_in_scan;
    CDStruct_183601bc *cur_comp_info[4];
    unsigned int MCUs_per_row;
    unsigned int MCU_rows_in_scan;
    int blocks_in_MCU;
    int MCU_membership[10];
    int Ss;
    int Se;
    int Ah;
    int Al;
    int block_size;
    int *natural_order;
    int lim_Se;
    int unread_marker;
    struct jpeg_decomp_master *master;
    struct jpeg_d_main_controller *main;
    struct jpeg_d_coef_controller *coef;
    struct jpeg_d_post_controller *post;
    struct jpeg_input_controller *inputctl;
    struct jpeg_marker_reader *marker;
    struct jpeg_entropy_decoder *entropy;
    struct jpeg_inverse_dct *idct;
    struct jpeg_upsampler *upsample;
    struct jpeg_color_deconverter *cconvert;
    struct jpeg_color_quantizer *cquantize;
};

struct jpeg_entropy_decoder;

struct jpeg_error_mgr {
    CDUnknownFunctionPointerType error_exit;
    CDUnknownFunctionPointerType emit_message;
    CDUnknownFunctionPointerType output_message;
    CDUnknownFunctionPointerType format_message;
    CDUnknownFunctionPointerType reset_error_mgr;
    int msg_code;
    union {
        int i[8];
        char s[80];
    } msg_parm;
    int trace_level;
    long num_warnings;
    char **jpeg_message_table;
    int last_jpeg_message;
    char **addon_message_table;
    int first_addon_message;
    int last_addon_message;
};

struct jpeg_input_controller;

struct jpeg_inverse_dct;

struct jpeg_marker_reader;

struct jpeg_marker_struct;

struct jpeg_memory_mgr;

struct jpeg_progress_mgr;

struct jpeg_source_mgr;

struct jpeg_upsampler;

struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long __first_;
    } __size_alloc_;
};

struct map<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *, std::__1::less<FBConsistentLookasideCacheObservationHandle *>, std::__1::allocator<std::__1::pair<FBConsistentLookasideCacheObservationHandle *const, FBMemModelObject *>>> {
    struct __tree<std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>, std::__1::__map_value_compare<FBConsistentLookasideCacheObservationHandle *, std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>, std::__1::less<FBConsistentLookasideCacheObservationHandle *>, true>, std::__1::allocator<std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>>> {
        struct __tree_node<std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<FBConsistentLookasideCacheObservationHandle *, std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>, std::__1::less<FBConsistentLookasideCacheObservationHandle *>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<FBMemModelObject *, FBMemModelObject *, std::__1::less<FBMemModelObject *>, std::__1::allocator<std::__1::pair<FBMemModelObject *const, FBMemModelObject *>>> {
    struct __tree<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, std::__1::__map_value_compare<FBMemModelObject *, std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, std::__1::less<FBMemModelObject *>, true>, std::__1::allocator<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>>> {
        struct __tree_node<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<FBMemModelObject *, std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, std::__1::less<FBMemModelObject *>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<UITableViewCell *, id<NSObject>, std::__1::less<UITableViewCell *>, std::__1::allocator<std::__1::pair<UITableViewCell *const, id<NSObject>>>> {
    struct __tree<std::__1::__value_type<UITableViewCell *, id<NSObject>>, std::__1::__map_value_compare<UITableViewCell *, std::__1::__value_type<UITableViewCell *, id<NSObject>>, std::__1::less<UITableViewCell *>, true>, std::__1::allocator<std::__1::__value_type<UITableViewCell *, id<NSObject>>>> {
        struct __tree_node<std::__1::__value_type<UITableViewCell *, id<NSObject>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<UITableViewCell *, id<NSObject>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<UITableViewCell *, std::__1::__value_type<UITableViewCell *, id<NSObject>>, std::__1::less<UITableViewCell *>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<UIView *, id<NSObject>, std::__1::less<UIView *>, std::__1::allocator<std::__1::pair<UIView *const, id<NSObject>>>> {
    struct __tree<std::__1::__value_type<UIView *, id<NSObject>>, std::__1::__map_value_compare<UIView *, std::__1::__value_type<UIView *, id<NSObject>>, std::__1::less<UIView *>, true>, std::__1::allocator<std::__1::__value_type<UIView *, id<NSObject>>>> {
        struct __tree_node<std::__1::__value_type<UIView *, id<NSObject>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<UIView *, id<NSObject>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<UIView *, std::__1::__value_type<UIView *, id<NSObject>>, std::__1::less<UIView *>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<id, id, FBOrderedDictionaryDynamicKeyComparator, std::__1::allocator<std::__1::pair<const id, id>>> {
    struct __tree<std::__1::__value_type<id, id>, std::__1::__map_value_compare<id, std::__1::__value_type<id, id>, FBOrderedDictionaryDynamicKeyComparator, false>, std::__1::allocator<std::__1::__value_type<id, id>>> {
        struct __tree_node<std::__1::__value_type<id, id>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<id, id>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<id, std::__1::__value_type<id, id>, FBOrderedDictionaryDynamicKeyComparator, false>> {
            unsigned long __first_;
            struct __map_value_compare<id, std::__1::__value_type<id, id>, FBOrderedDictionaryDynamicKeyComparator, false> {
                struct FBOrderedDictionaryDynamicKeyComparator comp;
            } __second_;
        } __pair3_;
    } __tree_;
};

struct map<id<FBCollectionViewSectionDataSource>, FBCollectionViewDelegateRespondsToCache, std::__1::less<id<FBCollectionViewSectionDataSource>>, std::__1::allocator<std::__1::pair<const id<FBCollectionViewSectionDataSource>, FBCollectionViewDelegateRespondsToCache>>> {
    struct __tree<std::__1::__value_type<id<FBCollectionViewSectionDataSource>, FBCollectionViewDelegateRespondsToCache>, std::__1::__map_value_compare<id<FBCollectionViewSectionDataSource>, std::__1::__value_type<id<FBCollectionViewSectionDataSource>, FBCollectionViewDelegateRespondsToCache>, std::__1::less<id<FBCollectionViewSectionDataSource>>, true>, std::__1::allocator<std::__1::__value_type<id<FBCollectionViewSectionDataSource>, FBCollectionViewDelegateRespondsToCache>>> {
        struct __tree_node<std::__1::__value_type<id<FBCollectionViewSectionDataSource>, FBCollectionViewDelegateRespondsToCache>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<id<FBCollectionViewSectionDataSource>, FBCollectionViewDelegateRespondsToCache>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<id<FBCollectionViewSectionDataSource>, std::__1::__value_type<id<FBCollectionViewSectionDataSource>, FBCollectionViewDelegateRespondsToCache>, std::__1::less<id<FBCollectionViewSectionDataSource>>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<id<FBTableViewSectionDataSource>, FBTableViewDelegateRespondsToCache, std::__1::less<id<FBTableViewSectionDataSource>>, std::__1::allocator<std::__1::pair<const id<FBTableViewSectionDataSource>, FBTableViewDelegateRespondsToCache>>> {
    struct __tree<std::__1::__value_type<id<FBTableViewSectionDataSource>, FBTableViewDelegateRespondsToCache>, std::__1::__map_value_compare<id<FBTableViewSectionDataSource>, std::__1::__value_type<id<FBTableViewSectionDataSource>, FBTableViewDelegateRespondsToCache>, std::__1::less<id<FBTableViewSectionDataSource>>, true>, std::__1::allocator<std::__1::__value_type<id<FBTableViewSectionDataSource>, FBTableViewDelegateRespondsToCache>>> {
        struct __tree_node<std::__1::__value_type<id<FBTableViewSectionDataSource>, FBTableViewDelegateRespondsToCache>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<id<FBTableViewSectionDataSource>, FBTableViewDelegateRespondsToCache>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<id<FBTableViewSectionDataSource>, std::__1::__value_type<id<FBTableViewSectionDataSource>, FBTableViewDelegateRespondsToCache>, std::__1::less<id<FBTableViewSectionDataSource>>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<id<NSObject>, UIView *, std::__1::less<id<NSObject>>, std::__1::allocator<std::__1::pair<const id<NSObject>, UIView *>>> {
    struct __tree<std::__1::__value_type<id<NSObject>, UIView *>, std::__1::__map_value_compare<id<NSObject>, std::__1::__value_type<id<NSObject>, UIView *>, std::__1::less<id<NSObject>>, true>, std::__1::allocator<std::__1::__value_type<id<NSObject>, UIView *>>> {
        struct __tree_node<std::__1::__value_type<id<NSObject>, UIView *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<id<NSObject>, UIView *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<id<NSObject>, std::__1::__value_type<id<NSObject>, UIView *>, std::__1::less<id<NSObject>>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>>> {
    struct __tree<std::__1::__value_type<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>>> {
        struct __tree_node<std::__1::__value_type<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>, std::__1::less<int>, true>> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct map<proxygen::TraceFieldType, std::__1::basic_string<char>, std::__1::less<proxygen::TraceFieldType>, std::__1::allocator<std::__1::pair<const proxygen::TraceFieldType, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<proxygen::TraceFieldType, std::__1::basic_string<char>>, std::__1::__map_value_compare<proxygen::TraceFieldType, std::__1::__value_type<proxygen::TraceFieldType, std::__1::basic_string<char>>, std::__1::less<proxygen::TraceFieldType>, true>, std::__1::allocator<std::__1::__value_type<proxygen::TraceFieldType, std::__1::basic_string<char>>>> {
        struct __tree_node<std::__1::__value_type<proxygen::TraceFieldType, std::__1::basic_string<char>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<proxygen::TraceFieldType, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<proxygen::TraceFieldType, std::__1::__value_type<proxygen::TraceFieldType, std::__1::basic_string<char>>, std::__1::less<proxygen::TraceFieldType>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::pair<__CFHost *, double>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<__CFHost *, double>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::pair<__CFHost *, double>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::pair<__CFHost *, double>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::pair<__CFHost *, double>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::pair<__CFHost *, double>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::pair<__CFHost *, double>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::pair<__CFHost *, double>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, NSIndexPath *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, NSIndexPath *>>> {
    struct __tree<std::__1::__value_type<unsigned int, NSIndexPath *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, NSIndexPath *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, NSIndexPath *>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, NSIndexPath *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, NSIndexPath *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, NSIndexPath *>, std::__1::less<unsigned int>, true>> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct mosquitto {
    struct _mosquitto_core {
        int _field1;
        char *_field2;
        char *_field3;
        char *_field4;
        char *_field5;
        unsigned short _field6;
        void *_field7;
        _Bool _field8;
        int _field9;
        int _field10;
        int _field11;
        unsigned short _field12;
        struct _mosquitto_packet _field13;
        struct _mosquitto_packet *_field14;
        struct mosquitto_message *_field15;
        struct mosquitto_callbacks _field16;
        _Bool _field17;
        _Bool _field18;
        void *_field19;
        char *_field20;
        char *_field21;
        int _field22;
    } _field1;
    unsigned int _field2;
    int _field3;
    void *_field4;
    struct mosquitto_message_all *_field5;
    int _field6;
    int _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
};

struct mosquitto_callbacks {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
};

struct mosquitto_message;

struct mosquitto_message_all;

struct msgpack_object {
    int _field1;
    union {
        _Bool _field1;
        unsigned long long _field2;
        long long _field3;
        double _field4;
        struct {
            unsigned int _field1;
            struct msgpack_object *_field2;
        } _field5;
        CDStruct_4802516e _field6;
        struct {
            unsigned int _field1;
            char *_field2;
        } _field7;
    } _field2;
};

struct msgpack_object_kv;

struct msgpack_packer {
    void *_field1;
    CDUnknownFunctionPointerType _field2;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct pair<FBWebViewResponse *, NSError *> {
    FBWebViewResponse *first;
    NSError *second;
};

struct pair<NSObject *const, NSObject *>;

struct pair<id<NSObject>, NSIndexPath *> {
    id _field1;
    id _field2;
};

struct pair<proxygen::TraceEventType, long long>;

struct queue<unsigned long long, std::__1::deque<unsigned long long, std::__1::allocator<unsigned long long>>> {
    struct deque<unsigned long long, std::__1::allocator<unsigned long long>> c;
};

struct scoped_ptr<webrtc::OpenGles20> {
    struct OpenGles20 *ptr;
};

struct scoped_ptr_malloc<unsigned char, &webrtc::AlignedFree> {
    char *_field1;
};

struct set<const FBGraphQLFieldSet *, std::__1::less<const FBGraphQLFieldSet *>, std::__1::allocator<const FBGraphQLFieldSet *>> {
    struct __tree<const FBGraphQLFieldSet *, std::__1::less<const FBGraphQLFieldSet *>, std::__1::allocator<const FBGraphQLFieldSet *>> {
        struct __tree_node<const FBGraphQLFieldSet *, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<const FBGraphQLFieldSet *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<const FBGraphQLFieldSet *>> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct set<int, std::__1::less<int>, std::__1::allocator<int>> {
    struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> {
        struct __tree_node<int, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<int>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct set<std::__1::pair<int, NSObject *>, FBPriorityObjectPairComparator, std::__1::allocator<std::__1::pair<int, NSObject *>>> {
    struct __tree<std::__1::pair<int, NSObject *>, FBPriorityObjectPairComparator, std::__1::allocator<std::__1::pair<int, NSObject *>>> {
        struct __tree_node<std::__1::pair<int, NSObject *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<int, NSObject *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, FBPriorityObjectPairComparator> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct shared_ptr<CK::Component::ViewManager> {
    struct ViewManager *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<bool> {
    _Bool *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const CKComponentViewConfiguration::Repr> {
    struct Repr *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const facebook::mobile::graphstore::NodeSource> {
    struct NodeSource *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const facebook::mobile::graphstore::Record> {
    struct Record *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const facebook::tigon::TigonBuffer> {
    struct TigonBuffer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const std::__1::unordered_map<CKComponentViewAttribute, id, std::__1::hash<CKComponentViewAttribute>, std::__1::equal_to<CKComponentViewAttribute>, std::__1::allocator<std::__1::pair<const CKComponentViewAttribute, id>>>> {
    unordered_map_f50c1a1f *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const std::__1::vector<CKComponentLayoutChild, std::__1::allocator<CKComponentLayoutChild>>> {
    vector_7ae51a63 *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const std::__1::vector<__weak id, std::__1::allocator<__weak id>>> {
    struct vector<__weak id, std::__1::allocator<__weak id>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const void> {
    void *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::image_processing::ImageMetadata> {
    struct ImageMetadata *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::image_processing::RGBA8Pixel> {
    struct RGBA8Pixel *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::graphstore::GraphStore> {
    struct GraphStore *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::compactdisk::BackgroundExceptionLogger> {
    struct BackgroundExceptionLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::compactdisk::DiskCache> {
    struct DiskCache *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::compactdisk::DiskCacheItem::ExtendedMetadata> {
    struct ExtendedMetadata *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::mobile::xplat::compactdisk::DiskSizeCalculator> {
    struct DiskSizeCalculator *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::compactdisk::IosPrivacyGuard> {
    struct IosPrivacyGuard *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::mobile::xplat::compactdisk::PersistentKeyValueStore> {
    struct PersistentKeyValueStore *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::compactdisk::Store> {
    struct Store *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::compactdisk::StoreManager> {
    struct StoreManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::compactdisk::StoreManagerFactory> {
    struct StoreManagerFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::session::Invalidatable> {
    struct Invalidatable *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::omnistore::Delta> {
    struct Delta *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<mobileconfig::FBMobileConfigMmapHandle> {
    struct FBMobileConfigMmapHandle *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<mobileconfig::FBMobileConfigStorageManager> {
    struct FBMobileConfigStorageManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<mobileconfig::FBRateLimiter<unsigned long long>> {
    struct FBRateLimiter<unsigned long long> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::unordered_map<unsigned long long, SimpleSearchEntityMetadata, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SimpleSearchEntityMetadata>>>> {
    unordered_map_099fe960 *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct tmat4x4<float> {
    struct tvec4<float> _field1[4];
};

struct tquat<float> {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct tvec2<float> {
    union {
        CDStruct_b2fbf00d _field1;
        CDStruct_b2fbf00d _field2;
        CDStruct_b2fbf00d _field3;
    } _field1;
};

struct tvec3<float> {
    union {
        CDStruct_869f9c67 _field1;
        CDStruct_869f9c67 _field2;
        CDStruct_869f9c67 _field3;
    } _field1;
};

struct tvec4<float> {
    union {
        CDStruct_818bb265 _field1;
        CDStruct_818bb265 _field2;
        CDStruct_818bb265 _field3;
    } _field1;
};

struct type {
    unsigned char _field1[12];
};

struct unique_ptr<CKComponentMountInfo, std::__1::default_delete<CKComponentMountInfo>> {
    struct __compressed_pair<CKComponentMountInfo *, std::__1::default_delete<CKComponentMountInfo>> {
        struct CKComponentMountInfo *__first_;
    } __ptr_;
};

struct unique_ptr<FB::DataModelInfra::Persistence, std::__1::default_delete<FB::DataModelInfra::Persistence>> {
    struct __compressed_pair<FB::DataModelInfra::Persistence *, std::__1::default_delete<FB::DataModelInfra::Persistence>> {
        struct Persistence *__first_;
    } __ptr_;
};

struct unique_ptr<FBComponentCollectionViewDataSourceCellConfig, std::__1::default_delete<FBComponentCollectionViewDataSourceCellConfig>> {
    struct __compressed_pair<FBComponentCollectionViewDataSourceCellConfig *, std::__1::default_delete<FBComponentCollectionViewDataSourceCellConfig>> {
        struct FBComponentCollectionViewDataSourceCellConfig *__first_;
    } __ptr_;
};

struct unique_ptr<FBComponentTableViewDataSourceCellConfig, std::__1::default_delete<FBComponentTableViewDataSourceCellConfig>> {
    struct __compressed_pair<FBComponentTableViewDataSourceCellConfig *, std::__1::default_delete<FBComponentTableViewDataSourceCellConfig>> {
        struct FBComponentTableViewDataSourceCellConfig *__first_;
    } __ptr_;
};

struct unique_ptr<FBLigerHTTPCallbacks, std::__1::default_delete<FBLigerHTTPCallbacks>> {
    struct __compressed_pair<FBLigerHTTPCallbacks *, std::__1::default_delete<FBLigerHTTPCallbacks>> {
        struct FBLigerHTTPCallbacks *__first_;
    } __ptr_;
};

struct unique_ptr<FBTigonService, std::__1::default_delete<FBTigonService>> {
    struct __compressed_pair<FBTigonService *, std::__1::default_delete<FBTigonService>> {
        struct FBTigonService *__first_;
    } __ptr_;
};

struct unique_ptr<MQTTClientGlue, std::__1::default_delete<MQTTClientGlue>> {
    struct __compressed_pair<MQTTClientGlue *, std::__1::default_delete<MQTTClientGlue>> {
        struct MQTTClientGlue *__first_;
    } __ptr_;
};

struct unique_ptr<WebRTCEngine, std::__1::default_delete<WebRTCEngine>> {
    struct __compressed_pair<WebRTCEngine *, std::__1::default_delete<WebRTCEngine>> {
        struct WebRTCEngine *__first_;
    } __ptr_;
};

struct unique_ptr<const facebook::mobile::graphstore::parser::TypeHelper, std::__1::default_delete<const facebook::mobile::graphstore::parser::TypeHelper>> {
    struct __compressed_pair<const facebook::mobile::graphstore::parser::TypeHelper *, std::__1::default_delete<const facebook::mobile::graphstore::parser::TypeHelper>> {
        struct TypeHelper *_field1;
    } _field1;
};

struct unique_ptr<const facebook::mobile::xplat::compactdisk::Configuration, std::__1::default_delete<const facebook::mobile::xplat::compactdisk::Configuration>> {
    struct __compressed_pair<const facebook::mobile::xplat::compactdisk::Configuration *, std::__1::default_delete<const facebook::mobile::xplat::compactdisk::Configuration>> {
        struct Configuration *_field1;
    } _field1;
};

struct unique_ptr<facebook::image_processing::FilteredImage, std::__1::default_delete<facebook::image_processing::FilteredImage>> {
    struct __compressed_pair<facebook::image_processing::FilteredImage *, std::__1::default_delete<facebook::image_processing::FilteredImage>> {
        struct FilteredImage *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::mobile::FBMemModel::detail::BuilderImpl, std::__1::default_delete<facebook::mobile::FBMemModel::detail::BuilderImpl>> {
    struct __compressed_pair<facebook::mobile::FBMemModel::detail::BuilderImpl *, std::__1::default_delete<facebook::mobile::FBMemModel::detail::BuilderImpl>> {
        struct BuilderImpl *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::mobile::FBMemModel::detail::CLCImpl, std::__1::default_delete<facebook::mobile::FBMemModel::detail::CLCImpl>> {
    struct __compressed_pair<facebook::mobile::FBMemModel::detail::CLCImpl *, std::__1::default_delete<facebook::mobile::FBMemModel::detail::CLCImpl>> {
        struct CLCImpl *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::mobile::FBMemModel::detail::IVarArray, std::__1::default_delete<facebook::mobile::FBMemModel::detail::IVarArray>> {
    struct __compressed_pair<facebook::mobile::FBMemModel::detail::IVarArray *, std::__1::default_delete<facebook::mobile::FBMemModel::detail::IVarArray>> {
        struct IVarArray *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::mobile::FBMemModel::detail::RecordAndSnapshot, std::__1::default_delete<facebook::mobile::FBMemModel::detail::RecordAndSnapshot>> {
    struct __compressed_pair<facebook::mobile::FBMemModel::detail::RecordAndSnapshot *, std::__1::default_delete<facebook::mobile::FBMemModel::detail::RecordAndSnapshot>> {
        struct RecordAndSnapshot *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::mobile::graphstore::GraphStore::SubscriptionHandle, std::__1::default_delete<facebook::mobile::graphstore::GraphStore::SubscriptionHandle>> {
    struct __compressed_pair<facebook::mobile::graphstore::GraphStore::SubscriptionHandle *, std::__1::default_delete<facebook::mobile::graphstore::GraphStore::SubscriptionHandle>> {
        struct SubscriptionHandle *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::omnistore::Collection, std::__1::default_delete<facebook::omnistore::Collection>> {
    struct __compressed_pair<facebook::omnistore::Collection *, std::__1::default_delete<facebook::omnistore::Collection>> {
        struct Collection *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::omnistore::Cursor, std::__1::default_delete<facebook::omnistore::Cursor>> {
    struct __compressed_pair<facebook::omnistore::Cursor *, std::__1::default_delete<facebook::omnistore::Cursor>> {
        struct Cursor *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::omnistore::Omnistore, std::__1::default_delete<facebook::omnistore::Omnistore>> {
    struct __compressed_pair<facebook::omnistore::Omnistore *, std::__1::default_delete<facebook::omnistore::Omnistore>> {
        struct Omnistore *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::simplesearch::OrderedList<unsigned long long>, std::__1::default_delete<facebook::simplesearch::OrderedList<unsigned long long>>> {
    struct __compressed_pair<facebook::simplesearch::OrderedList<unsigned long long>*, std::__1::default_delete<facebook::simplesearch::OrderedList<unsigned long long>>> {
        struct OrderedList<unsigned long long> *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::simplesearch::SimpleIndex, std::__1::default_delete<facebook::simplesearch::SimpleIndex>> {
    struct __compressed_pair<facebook::simplesearch::SimpleIndex *, std::__1::default_delete<facebook::simplesearch::SimpleIndex>> {
        struct SimpleIndex *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::speech::AudioQueueRecorder, std::__1::default_delete<facebook::speech::AudioQueueRecorder>> {
    struct __compressed_pair<facebook::speech::AudioQueueRecorder *, std::__1::default_delete<facebook::speech::AudioQueueRecorder>> {
        struct AudioQueueRecorder *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::tigon::TigonCallbacks, std::__1::default_delete<facebook::tigon::TigonCallbacks>> {
    struct __compressed_pair<facebook::tigon::TigonCallbacks *, std::__1::default_delete<facebook::tigon::TigonCallbacks>> {
        struct TigonCallbacks *__first_;
    } __ptr_;
};

struct unique_ptr<id [], std::__1::default_delete<id []>> {
    struct __compressed_pair<__strong id *, std::__1::default_delete<id []>> {
        id *_field1;
    } _field1;
};

struct unique_ptr<proxygen::MQTTMessage, std::__1::default_delete<proxygen::MQTTMessage>> {
    struct __compressed_pair<proxygen::MQTTMessage *, std::__1::default_delete<proxygen::MQTTMessage>> {
        struct MQTTMessage *_field1;
    } _field1;
};

struct unique_ptr<proxygen::httpclient::HTTPRequest, std::__1::default_delete<proxygen::httpclient::HTTPRequest>> {
    struct __compressed_pair<proxygen::httpclient::HTTPRequest *, std::__1::default_delete<proxygen::httpclient::HTTPRequest>> {
        struct HTTPRequest *_field1;
    } _field1;
};

struct unique_ptr<proxygen::httpclient::RequestHandlerFactory, std::__1::default_delete<proxygen::httpclient::RequestHandlerFactory>> {
    struct __compressed_pair<proxygen::httpclient::RequestHandlerFactory *, std::__1::default_delete<proxygen::httpclient::RequestHandlerFactory>> {
        struct RequestHandlerFactory *_field1;
    } _field1;
};

struct unique_ptr<proxygen::httpclient::monitor::BandwidthMonitor, std::__1::default_delete<proxygen::httpclient::monitor::BandwidthMonitor>> {
    struct __compressed_pair<proxygen::httpclient::monitor::BandwidthMonitor *, std::__1::default_delete<proxygen::httpclient::monitor::BandwidthMonitor>> {
        struct BandwidthMonitor *__first_;
    } __ptr_;
};

struct unique_ptr<proxygen::httpclient::monitor::DefaultBandwidthMonitor, std::__1::default_delete<proxygen::httpclient::monitor::DefaultBandwidthMonitor>> {
    struct __compressed_pair<proxygen::httpclient::monitor::DefaultBandwidthMonitor *, std::__1::default_delete<proxygen::httpclient::monitor::DefaultBandwidthMonitor>> {
        struct DefaultBandwidthMonitor *_field1;
    } _field1;
};

struct unique_ptr<proxygen::mqttclient::MQTTClient, std::__1::default_delete<proxygen::mqttclient::MQTTClient>> {
    struct __compressed_pair<proxygen::mqttclient::MQTTClient *, std::__1::default_delete<proxygen::mqttclient::MQTTClient>> {
        struct MQTTClient *__first_;
    } __ptr_;
};

struct unique_ptr<proxygen::mqttclient::MQTTClientSettings, std::__1::default_delete<proxygen::mqttclient::MQTTClientSettings>> {
    struct __compressed_pair<proxygen::mqttclient::MQTTClientSettings *, std::__1::default_delete<proxygen::mqttclient::MQTTClientSettings>> {
        struct MQTTClientSettings *_field1;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*>> {
                unsigned long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<CKLayoutMemoizationKey, CKComponentLayout>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKLayoutMemoizationKey, CKComponentLayout>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<CKLayoutMemoizationKey, CKComponentLayout>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKLayoutMemoizationKey, CKComponentLayout>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<CKLayoutMemoizationKey, CKComponentLayout>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKLayoutMemoizationKey, CKComponentLayout>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKLayoutMemoizationKey, CKComponentLayout>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>*>> {
                unsigned long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>*>> {
                unsigned long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<const char *, const char *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>> {
                unsigned long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*>> {
                unsigned long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*>> {
                unsigned long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*>> {
                unsigned long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::vector<Section, std::__1::allocator<Section>>, std::__1::default_delete<std::__1::vector<Section, std::__1::allocator<Section>>>> {
    struct __compressed_pair<std::__1::vector<Section, std::__1::allocator<Section>>*, std::__1::default_delete<std::__1::vector<Section, std::__1::allocator<Section>>>> {
        struct vector<Section, std::__1::allocator<Section>> *__first_;
    } __ptr_;
};

struct unordered_map<CK::Component::ViewKey, CK::Component::ViewReusePool, std::__1::hash<CK::Component::ViewKey>, std::__1::equal_to<CK::Component::ViewKey>, std::__1::allocator<std::__1::pair<const CK::Component::ViewKey, CK::Component::ViewReusePool>>> {
    struct __hash_table<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, std::__1::__unordered_map_hasher<CK::Component::ViewKey, std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, std::__1::hash<CK::Component::ViewKey>, true>, std::__1::__unordered_map_equal<CK::Component::ViewKey, std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, std::__1::equal_to<CK::Component::ViewKey>, true>, std::__1::allocator<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<CK::Component::ViewKey, std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, std::__1::hash<CK::Component::ViewKey>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<CK::Component::ViewKey, std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, std::__1::equal_to<CK::Component::ViewKey>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<CKComponentViewAttribute, id, std::__1::hash<CKComponentViewAttribute>, std::__1::equal_to<CKComponentViewAttribute>, std::__1::allocator<std::__1::pair<const CKComponentViewAttribute, id>>> {
    struct __hash_table<std::__1::__hash_value_type<CKComponentViewAttribute, id>, std::__1::__unordered_map_hasher<CKComponentViewAttribute, std::__1::__hash_value_type<CKComponentViewAttribute, id>, std::__1::hash<CKComponentViewAttribute>, true>, std::__1::__unordered_map_equal<CKComponentViewAttribute, std::__1::__hash_value_type<CKComponentViewAttribute, id>, std::__1::equal_to<CKComponentViewAttribute>, true>, std::__1::allocator<std::__1::__hash_value_type<CKComponentViewAttribute, id>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<CKComponentViewAttribute, std::__1::__hash_value_type<CKComponentViewAttribute, id>, std::__1::hash<CKComponentViewAttribute>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<CKComponentViewAttribute, std::__1::__hash_value_type<CKComponentViewAttribute, id>, std::__1::equal_to<CKComponentViewAttribute>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<CKLayoutMemoizationKey, CKComponentLayout, CKLayoutMemoizationKey::Hash, CKLayoutMemoizationKey::Equals, std::__1::allocator<std::__1::pair<const CKLayoutMemoizationKey, CKComponentLayout>>> {
    struct __hash_table<std::__1::__hash_value_type<CKLayoutMemoizationKey, CKComponentLayout>, std::__1::__unordered_map_hasher<CKLayoutMemoizationKey, std::__1::__hash_value_type<CKLayoutMemoizationKey, CKComponentLayout>, CKLayoutMemoizationKey::Hash, true>, std::__1::__unordered_map_equal<CKLayoutMemoizationKey, std::__1::__hash_value_type<CKLayoutMemoizationKey, CKComponentLayout>, CKLayoutMemoizationKey::Equals, true>, std::__1::allocator<std::__1::__hash_value_type<CKLayoutMemoizationKey, CKComponentLayout>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<CKLayoutMemoizationKey, CKComponentLayout>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKLayoutMemoizationKey, CKComponentLayout>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKLayoutMemoizationKey, CKComponentLayout>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKLayoutMemoizationKey, CKComponentLayout>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKLayoutMemoizationKey, CKComponentLayout>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<CKLayoutMemoizationKey, CKComponentLayout>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<CKLayoutMemoizationKey, std::__1::__hash_value_type<CKLayoutMemoizationKey, CKComponentLayout>, CKLayoutMemoizationKey::Hash, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<CKLayoutMemoizationKey, std::__1::__hash_value_type<CKLayoutMemoizationKey, CKComponentLayout>, CKLayoutMemoizationKey::Equals, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>, std::__1::hash<FBDiskStoreIdentifier>, std::__1::equal_to<FBDiskStoreIdentifier>, std::__1::allocator<std::__1::pair<const FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>>> {
    struct __hash_table<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, std::__1::__unordered_map_hasher<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, std::__1::hash<FBDiskStoreIdentifier>, true>, std::__1::__unordered_map_equal<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, std::__1::equal_to<FBDiskStoreIdentifier>, true>, std::__1::allocator<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, std::__1::hash<FBDiskStoreIdentifier>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, std::__1::equal_to<FBDiskStoreIdentifier>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>, std::__1::hash<FBDiskStoreIdentifier>, std::__1::equal_to<FBDiskStoreIdentifier>, std::__1::allocator<std::__1::pair<const FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>>> {
    struct __hash_table<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, std::__1::__unordered_map_hasher<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, std::__1::hash<FBDiskStoreIdentifier>, true>, std::__1::__unordered_map_equal<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, std::__1::equal_to<FBDiskStoreIdentifier>, true>, std::__1::allocator<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, std::__1::hash<FBDiskStoreIdentifier>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, std::__1::equal_to<FBDiskStoreIdentifier>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>, std::__1::hash<FBDiskStoreIdentifier>, std::__1::equal_to<FBDiskStoreIdentifier>, std::__1::allocator<std::__1::pair<const FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>>> {
    struct __hash_table<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, std::__1::__unordered_map_hasher<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, std::__1::hash<FBDiskStoreIdentifier>, true>, std::__1::__unordered_map_equal<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, std::__1::equal_to<FBDiskStoreIdentifier>, true>, std::__1::allocator<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, std::__1::hash<FBDiskStoreIdentifier>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, std::__1::equal_to<FBDiskStoreIdentifier>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>, std::__1::hash<FBDiskStoreManagerIdentifier>, std::__1::equal_to<FBDiskStoreManagerIdentifier>, std::__1::allocator<std::__1::pair<const FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>>> {
    struct __hash_table<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, std::__1::__unordered_map_hasher<FBDiskStoreManagerIdentifier, std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, std::__1::hash<FBDiskStoreManagerIdentifier>, true>, std::__1::__unordered_map_equal<FBDiskStoreManagerIdentifier, std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, std::__1::equal_to<FBDiskStoreManagerIdentifier>, true>, std::__1::allocator<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBDiskStoreManagerIdentifier, std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, std::__1::hash<FBDiskStoreManagerIdentifier>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<FBDiskStoreManagerIdentifier, std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, std::__1::equal_to<FBDiskStoreManagerIdentifier>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *, FB::HashFunctor<NSObject *>, FB::EqualFunctor<NSObject *>, std::__1::allocator<std::__1::pair<FBGraphQLFetchConfiguration *const, FBAnalyticsPrefetcherLogger *>>> {
    struct __hash_table<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, std::__1::__unordered_map_hasher<FBGraphQLFetchConfiguration *, std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<FBGraphQLFetchConfiguration *, std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, FB::EqualFunctor<NSObject *>, true>, std::__1::allocator<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBGraphQLFetchConfiguration *, std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, FB::HashFunctor<NSObject *>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<FBGraphQLFetchConfiguration *, std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, FB::EqualFunctor<NSObject *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<FBMobileTraceSite, unsigned int, FB::HashFunctor<FBMobileTraceSite>, FB::EqualFunctor<FBMobileTraceSite>, std::__1::allocator<std::__1::pair<const FBMobileTraceSite, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, std::__1::__unordered_map_hasher<FBMobileTraceSite, std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, FB::HashFunctor<FBMobileTraceSite>, true>, std::__1::__unordered_map_equal<FBMobileTraceSite, std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, FB::EqualFunctor<FBMobileTraceSite>, true>, std::__1::allocator<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBMobileTraceSite, std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, FB::HashFunctor<FBMobileTraceSite>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<FBMobileTraceSite, std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, FB::EqualFunctor<FBMobileTraceSite>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<FBMobileTraceSite, unsigned long long, FB::HashFunctor<FBMobileTraceSite>, FB::EqualFunctor<FBMobileTraceSite>, std::__1::allocator<std::__1::pair<const FBMobileTraceSite, unsigned long long>>> {
    struct __hash_table<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, std::__1::__unordered_map_hasher<FBMobileTraceSite, std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, FB::HashFunctor<FBMobileTraceSite>, true>, std::__1::__unordered_map_equal<FBMobileTraceSite, std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, FB::EqualFunctor<FBMobileTraceSite>, true>, std::__1::allocator<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBMobileTraceSite, std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, FB::HashFunctor<FBMobileTraceSite>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<FBMobileTraceSite, std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, FB::EqualFunctor<FBMobileTraceSite>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<FBServiceNetworkerRequest *, FBServiceInternalState *, FB::HashFunctor<NSObject *>, FB::EqualFunctor<NSObject *>, std::__1::allocator<std::__1::pair<FBServiceNetworkerRequest *const, FBServiceInternalState *>>> {
    struct __hash_table<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, std::__1::__unordered_map_hasher<FBServiceNetworkerRequest *, std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<FBServiceNetworkerRequest *, std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, FB::EqualFunctor<NSObject *>, true>, std::__1::allocator<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBServiceNetworkerRequest *, std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, FB::HashFunctor<NSObject *>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<FBServiceNetworkerRequest *, std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, FB::EqualFunctor<NSObject *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<NSObject *, NSObject *, std::__1::hash<NSObject *>, std::__1::equal_to<NSObject *>, std::__1::allocator<std::__1::pair<NSObject *const, NSObject *>>> {
    struct __hash_table<std::__1::__hash_value_type<NSObject *, NSObject *>, std::__1::__unordered_map_hasher<NSObject *, std::__1::__hash_value_type<NSObject *, NSObject *>, std::__1::hash<NSObject *>, true>, std::__1::__unordered_map_equal<NSObject *, std::__1::__hash_value_type<NSObject *, NSObject *>, std::__1::equal_to<NSObject *>, true>, std::__1::allocator<std::__1::__hash_value_type<NSObject *, NSObject *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSObject *, std::__1::__hash_value_type<NSObject *, NSObject *>, std::__1::hash<NSObject *>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSObject *, std::__1::__hash_value_type<NSObject *, NSObject *>, std::__1::equal_to<NSObject *>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>, FB::HashFunctor<NSObject *>, FB::EqualFunctor<NSObject *>, std::__1::allocator<std::__1::pair<NSString *const, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>>> {
    struct __hash_table<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, FB::EqualFunctor<NSObject *>, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, FB::HashFunctor<NSObject *>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, FB::EqualFunctor<NSObject *>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<NSString *, std::__1::shared_future<Value>, FB::HashFunctor<NSObject *>, FB::EqualFunctor<NSObject *>, std::__1::allocator<std::__1::pair<NSString *const, std::__1::shared_future<Value>>>> {
    struct __hash_table<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, FB::EqualFunctor<NSObject *>, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, FB::HashFunctor<NSObject *>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, FB::EqualFunctor<NSObject *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<NSString *, unsigned int, FB::HashFunctor<NSObject *>, FB::EqualFunctor<NSObject *>, std::__1::allocator<std::__1::pair<NSString *const, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<NSString *, unsigned int>, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, unsigned int>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, unsigned int>, FB::EqualFunctor<NSObject *>, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, unsigned int>, FB::HashFunctor<NSObject *>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, unsigned int>, FB::EqualFunctor<NSObject *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<StoreObservationKey, StoreObservationRecord, StoreObservationKeyHasher, std::__1::equal_to<StoreObservationKey>, std::__1::allocator<std::__1::pair<const StoreObservationKey, StoreObservationRecord>>> {
    struct __hash_table<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, std::__1::__unordered_map_hasher<StoreObservationKey, std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, StoreObservationKeyHasher, true>, std::__1::__unordered_map_equal<StoreObservationKey, std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, std::__1::equal_to<StoreObservationKey>, true>, std::__1::allocator<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<StoreObservationKey, std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, StoreObservationKeyHasher, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<StoreObservationKey, std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, std::__1::equal_to<StoreObservationKey>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<UICollectionViewCell *, FBHScrollMountInfo, FB::HashFunctor<NSObject *>, std::__1::equal_to<UICollectionViewCell *>, std::__1::allocator<std::__1::pair<UICollectionViewCell *const, FBHScrollMountInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, std::__1::__unordered_map_hasher<UICollectionViewCell *, std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<UICollectionViewCell *, std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, std::__1::equal_to<UICollectionViewCell *>, true>, std::__1::allocator<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<UICollectionViewCell *, std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, FB::HashFunctor<NSObject *>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<UICollectionViewCell *, std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, std::__1::equal_to<UICollectionViewCell *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<_CKStateScopeKey, CKComponentScopeFrame *, std::__1::hash<_CKStateScopeKey>, std::__1::equal_to<_CKStateScopeKey>, std::__1::allocator<std::__1::pair<const _CKStateScopeKey, CKComponentScopeFrame *>>> {
    struct __hash_table<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, std::__1::__unordered_map_hasher<_CKStateScopeKey, std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, std::__1::hash<_CKStateScopeKey>, true>, std::__1::__unordered_map_equal<_CKStateScopeKey, std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, std::__1::equal_to<_CKStateScopeKey>, true>, std::__1::allocator<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<_CKStateScopeKey, std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, std::__1::hash<_CKStateScopeKey>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<_CKStateScopeKey, std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, std::__1::equal_to<_CKStateScopeKey>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext, FB::HashFunctor<__unsafe_unretained Class>, FB::EqualFunctor<__unsafe_unretained Class>, std::__1::allocator<std::__1::pair<const __unsafe_unretained Class, FBFeedComponentExperimentCacheContext>>> {
    struct __hash_table<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, std::__1::__unordered_map_hasher<__unsafe_unretained Class, std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, FB::HashFunctor<__unsafe_unretained Class>, true>, std::__1::__unordered_map_equal<__unsafe_unretained Class, std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, FB::EqualFunctor<__unsafe_unretained Class>, true>, std::__1::allocator<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<__unsafe_unretained Class, std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, FB::HashFunctor<__unsafe_unretained Class>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<__unsafe_unretained Class, std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, FB::EqualFunctor<__unsafe_unretained Class>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<const char *, const char *, FB::CStringHasher, FB::CStringComparer, std::__1::allocator<std::__1::pair<const char *const, const char *>>> {
    struct __hash_table<std::__1::__hash_value_type<const char *, const char *>, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, const char *>, FB::CStringHasher, true>, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, const char *>, FB::CStringComparer, true>, std::__1::allocator<std::__1::__hash_value_type<const char *, const char *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<const char *, const char *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, const char *>, FB::CStringHasher, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, const char *>, FB::CStringComparer, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<id, UICollectionViewCell *, FB::HashFunctor<NSObject *>, std::__1::equal_to<id>, std::__1::allocator<std::__1::pair<const id, UICollectionViewCell *>>> {
    struct __hash_table<std::__1::__hash_value_type<id, UICollectionViewCell *>, std::__1::__unordered_map_hasher<id, std::__1::__hash_value_type<id, UICollectionViewCell *>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<id, std::__1::__hash_value_type<id, UICollectionViewCell *>, std::__1::equal_to<id>, true>, std::__1::allocator<std::__1::__hash_value_type<id, UICollectionViewCell *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<id, std::__1::__hash_value_type<id, UICollectionViewCell *>, FB::HashFunctor<NSObject *>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<id, std::__1::__hash_value_type<id, UICollectionViewCell *>, std::__1::equal_to<id>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, std::__1::hash<int>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<long long, ClientProxyVideoStat, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, ClientProxyVideoStat>>> {
    struct __hash_table<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, ClientProxyVideoStat>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, ClientProxyVideoStat>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, ClientProxyVideoStat>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, ClientProxyVideoStat>, std::__1::hash<long long>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, ClientProxyVideoStat>, std::__1::equal_to<long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<long long, FBClientProxyVideoPlayStatsMetaData, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, FBClientProxyVideoPlayStatsMetaData>>> {
    struct __hash_table<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, std::__1::hash<long long>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, std::__1::equal_to<long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *, (anonymous namespace)::Hasher, (anonymous namespace)::EqualTo, std::__1::allocator<std::__1::pair<const std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, std::__1::__unordered_map_hasher<std::__1::pair<NSString *, NSString *>, std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, (anonymous namespace)::Hasher, true>, std::__1::__unordered_map_equal<std::__1::pair<NSString *, NSString *>, std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, (anonymous namespace)::EqualTo, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::pair<NSString *, NSString *>, std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, (anonymous namespace)::Hasher, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::pair<NSString *, NSString *>, std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, (anonymous namespace)::EqualTo, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem, PoolKeyHasher, std::__1::equal_to<std::__1::pair<__unsafe_unretained Class, id>>, std::__1::allocator<std::__1::pair<const std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, std::__1::__unordered_map_hasher<std::__1::pair<__unsafe_unretained Class, id>, std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, PoolKeyHasher, true>, std::__1::__unordered_map_equal<std::__1::pair<__unsafe_unretained Class, id>, std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, std::__1::equal_to<std::__1::pair<__unsafe_unretained Class, id>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::pair<__unsafe_unretained Class, id>, std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, PoolKeyHasher, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::pair<__unsafe_unretained Class, id>, std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, std::__1::equal_to<std::__1::pair<__unsafe_unretained Class, id>>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>, FB::HashFunctor<RequestMapKey>, FB::EqualFunctor<RequestMapKey>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, std::__1::__unordered_map_hasher<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, FB::HashFunctor<RequestMapKey>, true>, std::__1::__unordered_map_equal<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, FB::EqualFunctor<RequestMapKey>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, FB::HashFunctor<RequestMapKey>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, FB::EqualFunctor<RequestMapKey>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, NSString *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, NSString *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, NSString *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::hash<unsigned int>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned int, UIColor *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, UIColor *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, UIColor *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, UIColor *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, UIColor *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, UIColor *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, UIColor *>, std::__1::hash<unsigned int>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, UIColor *>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned int, UIImage *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, UIImage *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, UIImage *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, UIImage *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, UIImage *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, UIImage *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, UIImage *>, std::__1::hash<unsigned int>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, UIImage *>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, SimpleSearchEntityMetadata, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SimpleSearchEntityMetadata>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, std::__1::hash<unsigned long long>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_multimap<CKComponentAnnouncedEvent, CKComponentController *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const CKComponentAnnouncedEvent, CKComponentController *>>> {
    struct __hash_table<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, std::__1::__unordered_map_hasher<CKComponentAnnouncedEvent, std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<CKComponentAnnouncedEvent, std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<CKComponentAnnouncedEvent, std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, std::__1::hash<unsigned int>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<CKComponentAnnouncedEvent, std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, std::__1::equal_to<unsigned int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_multimap<CKMemoizationKey, CKComponent *, std::__1::hash<CKMemoizationKey>, std::__1::equal_to<CKMemoizationKey>, std::__1::allocator<std::__1::pair<const CKMemoizationKey, CKComponent *>>> {
    struct __hash_table<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, std::__1::__unordered_map_hasher<CKMemoizationKey, std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, std::__1::hash<CKMemoizationKey>, true>, std::__1::__unordered_map_equal<CKMemoizationKey, std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, std::__1::equal_to<CKMemoizationKey>, true>, std::__1::allocator<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<CKMemoizationKey, std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, std::__1::hash<CKMemoizationKey>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<CKMemoizationKey, std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, std::__1::equal_to<CKMemoizationKey>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>> {
    struct __hash_table<std::__1::__hash_value_type<int, id (^)(id)>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, id (^)(id)>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, id (^)(id)>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, id (^)(id)>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, id (^)(id)>, std::__1::hash<int>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, id (^)(id)>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<CK::ArrayController::Output::Change, std::__1::allocator<CK::ArrayController::Output::Change>> {
    struct Change *_field1;
    struct Change *_field2;
    struct __compressed_pair<CK::ArrayController::Output::Change *, std::__1::allocator<CK::ArrayController::Output::Change>> {
        struct Change *_field1;
    } _field3;
};

struct vector<CKAppliedComponentAnimation, std::__1::allocator<CKAppliedComponentAnimation>> {
    struct CKAppliedComponentAnimation *__begin_;
    struct CKAppliedComponentAnimation *__end_;
    struct __compressed_pair<CKAppliedComponentAnimation *, std::__1::allocator<CKAppliedComponentAnimation>> {
        struct CKAppliedComponentAnimation *__first_;
    } __end_cap_;
};

struct vector<CKComponentAnimation, std::__1::allocator<CKComponentAnimation>> {
    struct CKComponentAnimation *_field1;
    struct CKComponentAnimation *_field2;
    struct __compressed_pair<CKComponentAnimation *, std::__1::allocator<CKComponentAnimation>> {
        struct CKComponentAnimation *_field1;
    } _field3;
};

struct vector<CKComponentLayoutChild, std::__1::allocator<CKComponentLayoutChild>> {
    struct CKComponentLayoutChild *_field1;
    struct CKComponentLayoutChild *_field2;
    struct __compressed_pair<CKComponentLayoutChild *, std::__1::allocator<CKComponentLayoutChild>> {
        struct CKComponentLayoutChild *_field1;
    } _field3;
};

struct vector<CKComponentPreparationInputItem *, std::__1::allocator<CKComponentPreparationInputItem *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<CKComponentPreparationInputItem *__strong *, std::__1::allocator<CKComponentPreparationInputItem *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<CKPendingComponentAnimation, std::__1::allocator<CKPendingComponentAnimation>> {
    struct CKPendingComponentAnimation *__begin_;
    struct CKPendingComponentAnimation *__end_;
    struct __compressed_pair<CKPendingComponentAnimation *, std::__1::allocator<CKPendingComponentAnimation>> {
        struct CKPendingComponentAnimation *__first_;
    } __end_cap_;
};

struct vector<CKStackLayoutComponentChild, std::__1::allocator<CKStackLayoutComponentChild>> {
    struct CKStackLayoutComponentChild *__begin_;
    struct CKStackLayoutComponentChild *__end_;
    struct __compressed_pair<CKStackLayoutComponentChild *, std::__1::allocator<CKStackLayoutComponentChild>> {
        struct CKStackLayoutComponentChild *__first_;
    } __end_cap_;
};

struct vector<CKStaticLayoutComponentChild, std::__1::allocator<CKStaticLayoutComponentChild>> {
    struct CKStaticLayoutComponentChild *__begin_;
    struct CKStaticLayoutComponentChild *__end_;
    struct __compressed_pair<CKStaticLayoutComponentChild *, std::__1::allocator<CKStaticLayoutComponentChild>> {
        struct CKStaticLayoutComponentChild *__first_;
    } __end_cap_;
};

struct vector<FB::Functional::Callback<id<MNServiceControllable>>, std::__1::allocator<FB::Functional::Callback<id<MNServiceControllable>>>> {
    struct Callback<id<MNServiceControllable>> *__begin_;
    struct Callback<id<MNServiceControllable>> *__end_;
    struct __compressed_pair<FB::Functional::Callback<id<MNServiceControllable>>*, std::__1::allocator<FB::Functional::Callback<id<MNServiceControllable>>>> {
        struct Callback<id<MNServiceControllable>> *__first_;
    } __end_cap_;
};

struct vector<FB::Functional::Callback<std::__1::pair<FBWebViewResponse *, NSError *>>, std::__1::allocator<FB::Functional::Callback<std::__1::pair<FBWebViewResponse *, NSError *>>>> {
    struct Callback<std::__1::pair<FBWebViewResponse *, NSError *>> *__begin_;
    struct Callback<std::__1::pair<FBWebViewResponse *, NSError *>> *__end_;
    struct __compressed_pair<FB::Functional::Callback<std::__1::pair<FBWebViewResponse *, NSError *>>*, std::__1::allocator<FB::Functional::Callback<std::__1::pair<FBWebViewResponse *, NSError *>>>> {
        struct Callback<std::__1::pair<FBWebViewResponse *, NSError *>> *__first_;
    } __end_cap_;
};

struct vector<FBActionListItem, std::__1::allocator<FBActionListItem>> {
    struct FBActionListItem *_field1;
    struct FBActionListItem *_field2;
    struct __compressed_pair<FBActionListItem *, std::__1::allocator<FBActionListItem>> {
        struct FBActionListItem *_field1;
    } _field3;
};

struct vector<FBAnalyticsModuleStackItem, std::__1::allocator<FBAnalyticsModuleStackItem>> {
    struct FBAnalyticsModuleStackItem *__begin_;
    struct FBAnalyticsModuleStackItem *__end_;
    struct __compressed_pair<FBAnalyticsModuleStackItem *, std::__1::allocator<FBAnalyticsModuleStackItem>> {
        struct FBAnalyticsModuleStackItem *__first_;
    } __end_cap_;
};

struct vector<FBCollageLayoutComponentChild, std::__1::allocator<FBCollageLayoutComponentChild>> {
    struct FBCollageLayoutComponentChild *__begin_;
    struct FBCollageLayoutComponentChild *__end_;
    struct __compressed_pair<FBCollageLayoutComponentChild *, std::__1::allocator<FBCollageLayoutComponentChild>> {
        struct FBCollageLayoutComponentChild *__first_;
    } __end_cap_;
};

struct vector<FBFeedInfiniteHScrollEdge, std::__1::allocator<FBFeedInfiniteHScrollEdge>> {
    struct FBFeedInfiniteHScrollEdge *__begin_;
    struct FBFeedInfiniteHScrollEdge *__end_;
    struct __compressed_pair<FBFeedInfiniteHScrollEdge *, std::__1::allocator<FBFeedInfiniteHScrollEdge>> {
        struct FBFeedInfiniteHScrollEdge *__first_;
    } __end_cap_;
};

struct vector<FBFlattenedArrayControllerChange, std::__1::allocator<FBFlattenedArrayControllerChange>> {
    struct FBFlattenedArrayControllerChange *_field1;
    struct FBFlattenedArrayControllerChange *_field2;
    struct __compressed_pair<FBFlattenedArrayControllerChange *, std::__1::allocator<FBFlattenedArrayControllerChange>> {
        struct FBFlattenedArrayControllerChange *_field1;
    } _field3;
};

struct vector<FBHScrollComponentChild, std::__1::allocator<FBHScrollComponentChild>> {
    struct FBHScrollComponentChild *__begin_;
    struct FBHScrollComponentChild *__end_;
    struct __compressed_pair<FBHScrollComponentChild *, std::__1::allocator<FBHScrollComponentChild>> {
        struct FBHScrollComponentChild *__first_;
    } __end_cap_;
};

struct vector<FBHorizontalLineItem, std::__1::allocator<FBHorizontalLineItem>> {
    struct FBHorizontalLineItem *__begin_;
    struct FBHorizontalLineItem *__end_;
    struct __compressed_pair<FBHorizontalLineItem *, std::__1::allocator<FBHorizontalLineItem>> {
        struct FBHorizontalLineItem *__first_;
    } __end_cap_;
};

struct vector<FBMPCDecodingObjectContext, std::__1::allocator<FBMPCDecodingObjectContext>> {
    struct FBMPCDecodingObjectContext *__begin_;
    struct FBMPCDecodingObjectContext *__end_;
    struct __compressed_pair<FBMPCDecodingObjectContext *, std::__1::allocator<FBMPCDecodingObjectContext>> {
        struct FBMPCDecodingObjectContext *__first_;
    } __end_cap_;
};

struct vector<FBMPCEncodingObjectContext *, std::__1::allocator<FBMPCEncodingObjectContext *>> {
    struct FBMPCEncodingObjectContext **__begin_;
    struct FBMPCEncodingObjectContext **__end_;
    struct __compressed_pair<FBMPCEncodingObjectContext **, std::__1::allocator<FBMPCEncodingObjectContext *>> {
        struct FBMPCEncodingObjectContext **__first_;
    } __end_cap_;
};

struct vector<FBMPCEncodingObjectContext::EncodedObjectRecord, std::__1::allocator<FBMPCEncodingObjectContext::EncodedObjectRecord>> {
    struct EncodedObjectRecord *__begin_;
    struct EncodedObjectRecord *__end_;
    struct __compressed_pair<FBMPCEncodingObjectContext::EncodedObjectRecord *, std::__1::allocator<FBMPCEncodingObjectContext::EncodedObjectRecord>> {
        struct EncodedObjectRecord *__first_;
    } __end_cap_;
};

struct vector<FBRangeAttributes, std::__1::allocator<FBRangeAttributes>> {
    struct FBRangeAttributes *__begin_;
    struct FBRangeAttributes *__end_;
    struct __compressed_pair<FBRangeAttributes *, std::__1::allocator<FBRangeAttributes>> {
        struct FBRangeAttributes *__first_;
    } __end_cap_;
};

struct vector<SEL *, std::__1::allocator<SEL *>> {
    SEL *__begin_;
    SEL *__end_;
    struct __compressed_pair<SEL **, std::__1::allocator<SEL *>> {
        SEL *__first_;
    } __end_cap_;
};

struct vector<Section, std::__1::allocator<Section>>;

struct vector<SubPageInfo, std::__1::allocator<SubPageInfo>> {
    struct SubPageInfo *__begin_;
    struct SubPageInfo *__end_;
    struct __compressed_pair<SubPageInfo *, std::__1::allocator<SubPageInfo>> {
        struct SubPageInfo *__first_;
    } __end_cap_;
};

struct vector<UICollectionViewLayoutAttributes *, std::__1::allocator<UICollectionViewLayoutAttributes *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<UICollectionViewLayoutAttributes *__strong *, std::__1::allocator<UICollectionViewLayoutAttributes *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<UIView *, std::__1::allocator<UIView *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<UIView *__strong *, std::__1::allocator<UIView *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<__unsafe_unretained Class, std::__1::allocator<__unsafe_unretained Class>> {
    Class *_field1;
    Class *_field2;
    struct __compressed_pair<__unsafe_unretained Class *, std::__1::allocator<__unsafe_unretained Class>> {
        Class *_field1;
    } _field3;
};

struct vector<__weak id, std::__1::allocator<__weak id>>;

struct vector<const FBConsistentFieldDescription *, std::__1::allocator<const FBConsistentFieldDescription *>> {
    struct FBConsistentFieldDescription **_field1;
    struct FBConsistentFieldDescription **_field2;
    struct __compressed_pair<const FBConsistentFieldDescription **, std::__1::allocator<const FBConsistentFieldDescription *>> {
        struct FBConsistentFieldDescription **_field1;
    } _field3;
};

struct vector<const FBGraphQLField *, std::__1::allocator<const FBGraphQLField *>> {
    struct FBGraphQLField **_field1;
    struct FBGraphQLField **_field2;
    struct __compressed_pair<const FBGraphQLField **, std::__1::allocator<const FBGraphQLField *>> {
        struct FBGraphQLField **_field1;
    } _field3;
};

struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__first_;
    } __end_cap_;
};

struct vector<long long, std::__1::allocator<long long>> {
    long long *_field1;
    long long *_field2;
    struct __compressed_pair<long long *, std::__1::allocator<long long>> {
        long long *_field1;
    } _field3;
};

struct vector<proxygen::TraceEvent, std::__1::allocator<proxygen::TraceEvent>> {
    struct TraceEvent *_field1;
    struct TraceEvent *_field2;
    struct __compressed_pair<proxygen::TraceEvent *, std::__1::allocator<proxygen::TraceEvent>> {
        struct TraceEvent *_field1;
    } _field3;
};

struct vector<std::__1::function<NSString *()>, std::__1::allocator<std::__1::function<NSString *()>>> {
    struct function<NSString *()> *__begin_;
    struct function<NSString *()> *__end_;
    struct __compressed_pair<std::__1::function<NSString *()>*, std::__1::allocator<std::__1::function<NSString *()>>> {
        struct function<NSString *()> *__first_;
    } __end_cap_;
};

struct vector<std::__1::pair<NSObject *const, NSObject *>, std::__1::allocator<std::__1::pair<NSObject *const, NSObject *>>> {
    struct pair<NSObject *const, NSObject *> *_field1;
    struct pair<NSObject *const, NSObject *> *_field2;
    struct __compressed_pair<std::__1::pair<NSObject *const, NSObject *>*, std::__1::allocator<std::__1::pair<NSObject *const, NSObject *>>> {
        struct pair<NSObject *const, NSObject *> *_field1;
    } _field3;
};

struct vector<std::__1::pair<proxygen::TraceEventType, long long>, std::__1::allocator<std::__1::pair<proxygen::TraceEventType, long long>>> {
    struct pair<proxygen::TraceEventType, long long> *__begin_;
    struct pair<proxygen::TraceEventType, long long> *__end_;
    struct __compressed_pair<std::__1::pair<proxygen::TraceEventType, long long>*, std::__1::allocator<std::__1::pair<proxygen::TraceEventType, long long>>> {
        struct pair<proxygen::TraceEventType, long long> *__first_;
    } __end_cap_;
};

struct vector<std::__1::unique_ptr<const facebook::mobile::xplat::compactdisk::Configuration, std::__1::default_delete<const facebook::mobile::xplat::compactdisk::Configuration>>, std::__1::allocator<std::__1::unique_ptr<const facebook::mobile::xplat::compactdisk::Configuration, std::__1::default_delete<const facebook::mobile::xplat::compactdisk::Configuration>>>> {
    unique_ptr_9d23342d *_field1;
    unique_ptr_9d23342d *_field2;
    struct __compressed_pair<std::__1::unique_ptr<const facebook::mobile::xplat::compactdisk::Configuration, std::__1::default_delete<const facebook::mobile::xplat::compactdisk::Configuration>>*, std::__1::allocator<std::__1::unique_ptr<const facebook::mobile::xplat::compactdisk::Configuration, std::__1::default_delete<const facebook::mobile::xplat::compactdisk::Configuration>>>> {
        unique_ptr_9d23342d *_field1;
    } _field3;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__first_;
    } __end_cap_;
};

struct vector<void *, std::__1::allocator<void *>> {
    void **_field1;
    void **_field2;
    struct __compressed_pair<void **, std::__1::allocator<void *>> {
        void **_field1;
    } _field3;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned int total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned int total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned int adler;
    unsigned int reserved;
};

#if 0
// Names with conflicting types:
typedef struct {
    struct map<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>>> _field1;
    struct map<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>>> _field2;
    struct map<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>>> _field3;
} Items_9becab79;

typedef struct {
    struct Sections _field1;
    struct Items {
        struct map<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>>> _field1;
        struct map<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>>> _field2;
        struct map<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>>> _field3;
    } _field2;
} Changeset_66fe5ada;

typedef struct {
    struct Sections _field1;
    struct Items {
        struct vector<CK::ArrayController::Output::Change, std::__1::allocator<CK::ArrayController::Output::Change>> _field1;
        struct vector<CK::ArrayController::Output::Change, std::__1::allocator<CK::ArrayController::Output::Change>> _field2;
        struct vector<CK::ArrayController::Output::Change, std::__1::allocator<CK::ArrayController::Output::Change>> _field3;
    } _field2;
} Changeset_00864c32;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int initial;
    unsigned int headWithAutomaticRefresh;
    unsigned int headWithManualRefresh;
    unsigned int headWithUndefinedRefresh;
    unsigned int tail;
    unsigned int neck;
    unsigned int invalid;
} CDStruct_fbe7cffb;

typedef struct {
    unsigned long _field1;
    id *_field2;
    unsigned long *_field3;
    unsigned long _field4[5];
} CDStruct_11f37819;

typedef struct {
    unsigned long long bytesSent;
    unsigned long long bytesReceived;
} CDStruct_a508bfa1;

typedef struct {
    unsigned short low;
    unsigned short normal;
    unsigned short immediate;
} CDStruct_b4e26eed;

typedef struct {
    char _field1;
    char _field2;
} CDStruct_7ddbbeae;

typedef struct {
    char _field1;
    float _field2;
} CDStruct_909d47cc;

typedef struct {
    double byteRate;
    unsigned int atomByteSize;
} CDStruct_facbd6cb;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
} CDStruct_869f9c67;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct {
    int _field1;
    unsigned int _field2;
} CDStruct_f1d50d6b;

typedef struct {
    int _field1;
    int _field2;
    char _field3;
} CDStruct_40ff1209;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
} CDStruct_a734b2e2;

typedef struct {
    int memory;
    int disk;
    int misses;
} CDStruct_f47ad830;

typedef struct {
    int location;
    int length;
} CDStruct_dff5684f;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
} CDStruct_7c32120d;

typedef struct CDStruct_183601bc;

typedef struct {
    unsigned int _field1;
    struct msgpack_object_kv *_field2;
} CDStruct_4802516e;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    CDStruct_facbd6cb _field4;
    char _field5;
    char _field6;
    char _field7;
} CDStruct_bccf9d01;

typedef struct {
    float _field1;
    float _field2;
    struct CGPoint _field3;
} CDStruct_4dd922d4;

typedef struct {
    CDStruct_2c43369c center;
    struct {
        double latitudeDelta;
        double longitudeDelta;
    } span;
} CDStruct_feeb6407;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct CGSize fullBodySize;
    struct CGSize constrainedSize;
    float bodyCollapsedHeight;
    float bodyWithoutGradientHeight;
    struct UIEdgeInsets insidePadding;
    char isValid;
    char textLabelNeedsUpdate;
} CDStruct_984feb9a;

typedef struct {
    char useCustomTranscoding;
    CDStruct_e83c9415 timeRange;
    int maxNumberOfVideoSegments;
    int maxVideoSegmentDurationInSeconds;
    FBVideoExportConfig *videoExportConfig;
} CDStruct_0d2b8a16;

// Ambiguous groups
typedef struct {
    unsigned int _field1;
    unsigned int _field2;
} CDStruct_c0454aff;

typedef struct {
    unsigned int transform;
    unsigned int texture;
} CDStruct_f1931e0c;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double latitude;
    double longitude;
} CDStruct_2c43369c;

typedef struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
} SpringSolver_fe820e75;

typedef struct function<std::__1::shared_ptr<facebook::mobile::graphstore::GraphStore>()> {
    struct type _field1;
    struct __base<std::__1::shared_ptr<facebook::mobile::graphstore::GraphStore>()> *_field2;
} function_90aee20f;

typedef struct future<std::__1::unique_ptr<facebook::mobile::xplat::compactdisk::PersistentKeyValueStore::FetchResult, std::__1::default_delete<facebook::mobile::xplat::compactdisk::PersistentKeyValueStore::FetchResult>>> {
    struct __assoc_state<std::__1::unique_ptr<facebook::mobile::xplat::compactdisk::PersistentKeyValueStore::FetchResult, std::__1::default_delete<facebook::mobile::xplat::compactdisk::PersistentKeyValueStore::FetchResult>>> *_field1;
} future_02c37223;

typedef struct future<void> {
    struct __assoc_sub_state *_field1;
} future_da72c1f3;

typedef struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long __first_;
    } __size_alloc_;
} list_2b9a5494;

typedef struct map<FBMemModelObject *, FBMemModelObject *, std::__1::less<FBMemModelObject *>, std::__1::allocator<std::__1::pair<FBMemModelObject *const, FBMemModelObject *>>> {
    struct __tree<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, std::__1::__map_value_compare<FBMemModelObject *, std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, std::__1::less<FBMemModelObject *>, true>, std::__1::allocator<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>>> {
        struct __tree_node<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<FBMemModelObject *, std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, std::__1::less<FBMemModelObject *>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
} map_8b7895f5;

typedef struct map<id, id, FBOrderedDictionaryDynamicKeyComparator, std::__1::allocator<std::__1::pair<const id, id>>> {
    struct __tree<std::__1::__value_type<id, id>, std::__1::__map_value_compare<id, std::__1::__value_type<id, id>, FBOrderedDictionaryDynamicKeyComparator, false>, std::__1::allocator<std::__1::__value_type<id, id>>> {
        struct __tree_node<std::__1::__value_type<id, id>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<id, id>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<id, std::__1::__value_type<id, id>, FBOrderedDictionaryDynamicKeyComparator, false>> {
            unsigned long __first_;
            struct __map_value_compare<id, std::__1::__value_type<id, id>, FBOrderedDictionaryDynamicKeyComparator, false> {
                struct FBOrderedDictionaryDynamicKeyComparator comp;
            } __second_;
        } __pair3_;
    } __tree_;
} map_29e207ab;

typedef struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long _field1;
        } _field3;
    } _field1;
} map_5a58ff85;

typedef struct map<unsigned int, NSIndexPath *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, NSIndexPath *>>> {
    struct __tree<std::__1::__value_type<unsigned int, NSIndexPath *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, NSIndexPath *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, NSIndexPath *>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, NSIndexPath *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, NSIndexPath *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, NSIndexPath *>, std::__1::less<unsigned int>, true>> {
            unsigned long _field1;
        } _field3;
    } _field1;
} map_08af5835;

typedef struct pair<id<NSObject>, NSIndexPath *> {
    id _field1;
    id _field2;
} pair_2db5cf6c;

typedef struct set<const FBGraphQLFieldSet *, std::__1::less<const FBGraphQLFieldSet *>, std::__1::allocator<const FBGraphQLFieldSet *>> {
    struct __tree<const FBGraphQLFieldSet *, std::__1::less<const FBGraphQLFieldSet *>, std::__1::allocator<const FBGraphQLFieldSet *>> {
        struct __tree_node<const FBGraphQLFieldSet *, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<const FBGraphQLFieldSet *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<const FBGraphQLFieldSet *>> {
            unsigned long _field1;
        } _field3;
    } _field1;
} set_e2b71e5c;

typedef struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1553c9f8;

typedef struct shared_ptr<const facebook::mobile::graphstore::NodeSource> {
    struct NodeSource *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_4b749c87;

typedef struct shared_ptr<const facebook::mobile::graphstore::Record> {
    struct Record *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_d8dd3219;

typedef struct shared_ptr<const facebook::tigon::TigonBuffer> {
    struct TigonBuffer *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b32b5f84;

typedef struct shared_ptr<const std::__1::vector<CKComponentLayoutChild, std::__1::allocator<CKComponentLayoutChild>>> {
    vector_7ae51a63 *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_6a94d7a4;

typedef struct shared_ptr<facebook::image_processing::ImageMetadata> {
    struct ImageMetadata *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_e28a8fc9;

typedef struct shared_ptr<facebook::mobile::graphstore::GraphStore> {
    struct GraphStore *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_430685d1;

typedef struct shared_ptr<facebook::mobile::xplat::compactdisk::DiskCache> {
    struct DiskCache *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_192c94b6;

typedef struct shared_ptr<facebook::mobile::xplat::compactdisk::DiskCacheItem::ExtendedMetadata> {
    struct ExtendedMetadata *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_b0a1ff5c;

typedef struct shared_ptr<facebook::mobile::xplat::compactdisk::DiskSizeCalculator> {
    struct DiskSizeCalculator *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b05ba287;

typedef struct shared_ptr<facebook::mobile::xplat::compactdisk::IosPrivacyGuard> {
    struct IosPrivacyGuard *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_a5c6b5b4;

typedef struct shared_ptr<facebook::mobile::xplat::compactdisk::PersistentKeyValueStore> {
    struct PersistentKeyValueStore *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_acc5c0d6;

typedef struct shared_ptr<facebook::mobile::xplat::compactdisk::Store> {
    struct Store *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_d635a1b7;

typedef struct shared_ptr<facebook::mobile::xplat::compactdisk::StoreManager> {
    struct StoreManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_9ff13df8;

typedef struct shared_ptr<facebook::mobile::xplat::compactdisk::StoreManagerFactory> {
    struct StoreManagerFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_ef0c87e6;

typedef struct shared_ptr<facebook::mobile::xplat::session::Invalidatable> {
    struct Invalidatable *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_0409a64f;

typedef struct shared_ptr<facebook::omnistore::Delta> {
    struct Delta *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_9966d0e1;

typedef struct shared_ptr<mobileconfig::FBMobileConfigMmapHandle> {
    struct FBMobileConfigMmapHandle *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_d20cbc16;

typedef struct shared_ptr<mobileconfig::FBRateLimiter<unsigned long long>> {
    struct FBRateLimiter<unsigned long long> *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_adb03df0;

typedef struct tmat4x4<float> {
    struct tvec4<float> _field1[4];
} tmat4x4_8117a96e;

typedef struct tvec3<float> {
    union {
        CDStruct_869f9c67 _field1;
        CDStruct_869f9c67 _field2;
        CDStruct_869f9c67 _field3;
    } _field1;
} tvec3_440bf033;

typedef struct unique_ptr<WebRTCEngine, std::__1::default_delete<WebRTCEngine>> {
    struct __compressed_pair<WebRTCEngine *, std::__1::default_delete<WebRTCEngine>> {
        struct WebRTCEngine *__first_;
    } __ptr_;
} unique_ptr_37eb45d4;

typedef struct unique_ptr<const facebook::mobile::graphstore::parser::TypeHelper, std::__1::default_delete<const facebook::mobile::graphstore::parser::TypeHelper>> {
    struct __compressed_pair<const facebook::mobile::graphstore::parser::TypeHelper *, std::__1::default_delete<const facebook::mobile::graphstore::parser::TypeHelper>> {
        struct TypeHelper *_field1;
    } _field1;
} unique_ptr_28ee081f;

typedef struct unique_ptr<const facebook::mobile::xplat::compactdisk::Configuration, std::__1::default_delete<const facebook::mobile::xplat::compactdisk::Configuration>> {
    struct __compressed_pair<const facebook::mobile::xplat::compactdisk::Configuration *, std::__1::default_delete<const facebook::mobile::xplat::compactdisk::Configuration>> {
        struct Configuration *_field1;
    } _field1;
} unique_ptr_9d23342d;

typedef struct unique_ptr<facebook::mobile::FBMemModel::detail::BuilderImpl, std::__1::default_delete<facebook::mobile::FBMemModel::detail::BuilderImpl>> {
    struct __compressed_pair<facebook::mobile::FBMemModel::detail::BuilderImpl *, std::__1::default_delete<facebook::mobile::FBMemModel::detail::BuilderImpl>> {
        struct BuilderImpl *__first_;
    } __ptr_;
} unique_ptr_3d817fac;

typedef struct unique_ptr<facebook::mobile::FBMemModel::detail::CLCImpl, std::__1::default_delete<facebook::mobile::FBMemModel::detail::CLCImpl>> {
    struct __compressed_pair<facebook::mobile::FBMemModel::detail::CLCImpl *, std::__1::default_delete<facebook::mobile::FBMemModel::detail::CLCImpl>> {
        struct CLCImpl *__first_;
    } __ptr_;
} unique_ptr_926cbde0;

typedef struct unique_ptr<facebook::mobile::graphstore::GraphStore::SubscriptionHandle, std::__1::default_delete<facebook::mobile::graphstore::GraphStore::SubscriptionHandle>> {
    struct __compressed_pair<facebook::mobile::graphstore::GraphStore::SubscriptionHandle *, std::__1::default_delete<facebook::mobile::graphstore::GraphStore::SubscriptionHandle>> {
        struct SubscriptionHandle *__first_;
    } __ptr_;
} unique_ptr_eeb42c0f;

typedef struct unique_ptr<facebook::omnistore::Collection, std::__1::default_delete<facebook::omnistore::Collection>> {
    struct __compressed_pair<facebook::omnistore::Collection *, std::__1::default_delete<facebook::omnistore::Collection>> {
        struct Collection *__first_;
    } __ptr_;
} unique_ptr_075b409c;

typedef struct unique_ptr<facebook::omnistore::Cursor, std::__1::default_delete<facebook::omnistore::Cursor>> {
    struct __compressed_pair<facebook::omnistore::Cursor *, std::__1::default_delete<facebook::omnistore::Cursor>> {
        struct Cursor *__first_;
    } __ptr_;
} unique_ptr_2fc9d982;

typedef struct unique_ptr<facebook::omnistore::Omnistore, std::__1::default_delete<facebook::omnistore::Omnistore>> {
    struct __compressed_pair<facebook::omnistore::Omnistore *, std::__1::default_delete<facebook::omnistore::Omnistore>> {
        struct Omnistore *__first_;
    } __ptr_;
} unique_ptr_9ccff1a2;

typedef struct unique_ptr<facebook::tigon::TigonCallbacks, std::__1::default_delete<facebook::tigon::TigonCallbacks>> {
    struct __compressed_pair<facebook::tigon::TigonCallbacks *, std::__1::default_delete<facebook::tigon::TigonCallbacks>> {
        struct TigonCallbacks *__first_;
    } __ptr_;
} unique_ptr_1598e8fa;

typedef struct unique_ptr<proxygen::MQTTMessage, std::__1::default_delete<proxygen::MQTTMessage>> {
    struct __compressed_pair<proxygen::MQTTMessage *, std::__1::default_delete<proxygen::MQTTMessage>> {
        struct MQTTMessage *_field1;
    } _field1;
} unique_ptr_065b03e5;

typedef struct unique_ptr<proxygen::httpclient::HTTPRequest, std::__1::default_delete<proxygen::httpclient::HTTPRequest>> {
    struct __compressed_pair<proxygen::httpclient::HTTPRequest *, std::__1::default_delete<proxygen::httpclient::HTTPRequest>> {
        struct HTTPRequest *_field1;
    } _field1;
} unique_ptr_3d2dd75c;

typedef struct unique_ptr<proxygen::httpclient::monitor::BandwidthMonitor, std::__1::default_delete<proxygen::httpclient::monitor::BandwidthMonitor>> {
    struct __compressed_pair<proxygen::httpclient::monitor::BandwidthMonitor *, std::__1::default_delete<proxygen::httpclient::monitor::BandwidthMonitor>> {
        struct BandwidthMonitor *__first_;
    } __ptr_;
} unique_ptr_eed73377;

typedef struct unique_ptr<proxygen::httpclient::monitor::DefaultBandwidthMonitor, std::__1::default_delete<proxygen::httpclient::monitor::DefaultBandwidthMonitor>> {
    struct __compressed_pair<proxygen::httpclient::monitor::DefaultBandwidthMonitor *, std::__1::default_delete<proxygen::httpclient::monitor::DefaultBandwidthMonitor>> {
        struct DefaultBandwidthMonitor *_field1;
    } _field1;
} unique_ptr_e3177ddc;

typedef struct unique_ptr<proxygen::mqttclient::MQTTClientSettings, std::__1::default_delete<proxygen::mqttclient::MQTTClientSettings>> {
    struct __compressed_pair<proxygen::mqttclient::MQTTClientSettings *, std::__1::default_delete<proxygen::mqttclient::MQTTClientSettings>> {
        struct MQTTClientSettings *_field1;
    } _field1;
} unique_ptr_9d94c847;

typedef struct unordered_map<CKComponentViewAttribute, id, std::__1::hash<CKComponentViewAttribute>, std::__1::equal_to<CKComponentViewAttribute>, std::__1::allocator<std::__1::pair<const CKComponentViewAttribute, id>>> {
    struct __hash_table<std::__1::__hash_value_type<CKComponentViewAttribute, id>, std::__1::__unordered_map_hasher<CKComponentViewAttribute, std::__1::__hash_value_type<CKComponentViewAttribute, id>, std::__1::hash<CKComponentViewAttribute>, true>, std::__1::__unordered_map_equal<CKComponentViewAttribute, std::__1::__hash_value_type<CKComponentViewAttribute, id>, std::__1::equal_to<CKComponentViewAttribute>, true>, std::__1::allocator<std::__1::__hash_value_type<CKComponentViewAttribute, id>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<CKComponentViewAttribute, std::__1::__hash_value_type<CKComponentViewAttribute, id>, std::__1::hash<CKComponentViewAttribute>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<CKComponentViewAttribute, std::__1::__hash_value_type<CKComponentViewAttribute, id>, std::__1::equal_to<CKComponentViewAttribute>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_f50c1a1f;

typedef struct unordered_map<const char *, const char *, FB::CStringHasher, FB::CStringComparer, std::__1::allocator<std::__1::pair<const char *const, const char *>>> {
    struct __hash_table<std::__1::__hash_value_type<const char *, const char *>, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, const char *>, FB::CStringHasher, true>, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, const char *>, FB::CStringComparer, true>, std::__1::allocator<std::__1::__hash_value_type<const char *, const char *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<const char *, const char *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, const char *>, FB::CStringHasher, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, const char *>, FB::CStringComparer, true>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_map_a1506d7e;

typedef struct unordered_map<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, std::__1::hash<int>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_map_4560de9f;

typedef struct unordered_map<unsigned int, NSString *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, NSString *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, NSString *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::hash<unsigned int>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_11435f86;

typedef struct unordered_map<unsigned int, UIColor *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, UIColor *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, UIColor *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, UIColor *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, UIColor *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, UIColor *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, UIColor *>, std::__1::hash<unsigned int>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, UIColor *>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_d0fb2f79;

typedef struct unordered_map<unsigned int, UIImage *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, UIImage *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, UIImage *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, UIImage *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, UIImage *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, UIImage *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, UIImage *>, std::__1::hash<unsigned int>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, UIImage *>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_f26381cc;

typedef struct unordered_map<unsigned long long, SimpleSearchEntityMetadata, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SimpleSearchEntityMetadata>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, std::__1::hash<unsigned long long>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_099fe960;

typedef struct unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>> {
    struct __hash_table<std::__1::__hash_value_type<int, id (^)(id)>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, id (^)(id)>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, id (^)(id)>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, id (^)(id)>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, id (^)(id)>, std::__1::hash<int>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, id (^)(id)>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_multimap_0bf43592;

typedef struct vector<CKComponentAnimation, std::__1::allocator<CKComponentAnimation>> {
    struct CKComponentAnimation *_field1;
    struct CKComponentAnimation *_field2;
    struct __compressed_pair<CKComponentAnimation *, std::__1::allocator<CKComponentAnimation>> {
        struct CKComponentAnimation *_field1;
    } _field3;
} vector_035bbd4a;

typedef struct vector<CKComponentLayoutChild, std::__1::allocator<CKComponentLayoutChild>> {
    struct CKComponentLayoutChild *_field1;
    struct CKComponentLayoutChild *_field2;
    struct __compressed_pair<CKComponentLayoutChild *, std::__1::allocator<CKComponentLayoutChild>> {
        struct CKComponentLayoutChild *_field1;
    } _field3;
} vector_7ae51a63;

typedef struct vector<CKStackLayoutComponentChild, std::__1::allocator<CKStackLayoutComponentChild>> {
    struct CKStackLayoutComponentChild *__begin_;
    struct CKStackLayoutComponentChild *__end_;
    struct __compressed_pair<CKStackLayoutComponentChild *, std::__1::allocator<CKStackLayoutComponentChild>> {
        struct CKStackLayoutComponentChild *__first_;
    } __end_cap_;
} vector_89ce9f02;

typedef struct vector<CKStaticLayoutComponentChild, std::__1::allocator<CKStaticLayoutComponentChild>> {
    struct CKStaticLayoutComponentChild *__begin_;
    struct CKStaticLayoutComponentChild *__end_;
    struct __compressed_pair<CKStaticLayoutComponentChild *, std::__1::allocator<CKStaticLayoutComponentChild>> {
        struct CKStaticLayoutComponentChild *__first_;
    } __end_cap_;
} vector_286522d3;

typedef struct vector<FBActionListItem, std::__1::allocator<FBActionListItem>> {
    struct FBActionListItem *_field1;
    struct FBActionListItem *_field2;
    struct __compressed_pair<FBActionListItem *, std::__1::allocator<FBActionListItem>> {
        struct FBActionListItem *_field1;
    } _field3;
} vector_b219b0f9;

typedef struct vector<FBCollageLayoutComponentChild, std::__1::allocator<FBCollageLayoutComponentChild>> {
    struct FBCollageLayoutComponentChild *__begin_;
    struct FBCollageLayoutComponentChild *__end_;
    struct __compressed_pair<FBCollageLayoutComponentChild *, std::__1::allocator<FBCollageLayoutComponentChild>> {
        struct FBCollageLayoutComponentChild *__first_;
    } __end_cap_;
} vector_bf507950;

typedef struct vector<FBFeedInfiniteHScrollEdge, std::__1::allocator<FBFeedInfiniteHScrollEdge>> {
    struct FBFeedInfiniteHScrollEdge *__begin_;
    struct FBFeedInfiniteHScrollEdge *__end_;
    struct __compressed_pair<FBFeedInfiniteHScrollEdge *, std::__1::allocator<FBFeedInfiniteHScrollEdge>> {
        struct FBFeedInfiniteHScrollEdge *__first_;
    } __end_cap_;
} vector_fd5cb2a1;

typedef struct vector<FBFlattenedArrayControllerChange, std::__1::allocator<FBFlattenedArrayControllerChange>> {
    struct FBFlattenedArrayControllerChange *_field1;
    struct FBFlattenedArrayControllerChange *_field2;
    struct __compressed_pair<FBFlattenedArrayControllerChange *, std::__1::allocator<FBFlattenedArrayControllerChange>> {
        struct FBFlattenedArrayControllerChange *_field1;
    } _field3;
} vector_fd37e7c2;

typedef struct vector<FBHScrollComponentChild, std::__1::allocator<FBHScrollComponentChild>> {
    struct FBHScrollComponentChild *__begin_;
    struct FBHScrollComponentChild *__end_;
    struct __compressed_pair<FBHScrollComponentChild *, std::__1::allocator<FBHScrollComponentChild>> {
        struct FBHScrollComponentChild *__first_;
    } __end_cap_;
} vector_b11e7b84;

typedef struct vector<FBHorizontalLineItem, std::__1::allocator<FBHorizontalLineItem>> {
    struct FBHorizontalLineItem *__begin_;
    struct FBHorizontalLineItem *__end_;
    struct __compressed_pair<FBHorizontalLineItem *, std::__1::allocator<FBHorizontalLineItem>> {
        struct FBHorizontalLineItem *__first_;
    } __end_cap_;
} vector_3907e73a;

typedef struct vector<SEL *, std::__1::allocator<SEL *>> {
    SEL *__begin_;
    SEL *__end_;
    struct __compressed_pair<SEL **, std::__1::allocator<SEL *>> {
        SEL *__first_;
    } __end_cap_;
} vector_a6ab289d;

typedef struct vector<SubPageInfo, std::__1::allocator<SubPageInfo>> {
    struct SubPageInfo *__begin_;
    struct SubPageInfo *__end_;
    struct __compressed_pair<SubPageInfo *, std::__1::allocator<SubPageInfo>> {
        struct SubPageInfo *__first_;
    } __end_cap_;
} vector_bf8be327;

typedef struct vector<__unsafe_unretained Class, std::__1::allocator<__unsafe_unretained Class>> {
    Class *_field1;
    Class *_field2;
    struct __compressed_pair<__unsafe_unretained Class *, std::__1::allocator<__unsafe_unretained Class>> {
        Class *_field1;
    } _field3;
} vector_e25fc222;

typedef struct vector<const FBConsistentFieldDescription *, std::__1::allocator<const FBConsistentFieldDescription *>> {
    struct FBConsistentFieldDescription **_field1;
    struct FBConsistentFieldDescription **_field2;
    struct __compressed_pair<const FBConsistentFieldDescription **, std::__1::allocator<const FBConsistentFieldDescription *>> {
        struct FBConsistentFieldDescription **_field1;
    } _field3;
} vector_70fe7ab3;

typedef struct vector<const FBGraphQLField *, std::__1::allocator<const FBGraphQLField *>> {
    struct FBGraphQLField **_field1;
    struct FBGraphQLField **_field2;
    struct __compressed_pair<const FBGraphQLField **, std::__1::allocator<const FBGraphQLField *>> {
        struct FBGraphQLField **_field1;
    } _field3;
} vector_14182239;

typedef struct vector<proxygen::TraceEvent, std::__1::allocator<proxygen::TraceEvent>> {
    struct TraceEvent *_field1;
    struct TraceEvent *_field2;
    struct __compressed_pair<proxygen::TraceEvent *, std::__1::allocator<proxygen::TraceEvent>> {
        struct TraceEvent *_field1;
    } _field3;
} vector_31c84f95;

typedef struct vector<std::__1::function<NSString *()>, std::__1::allocator<std::__1::function<NSString *()>>> {
    struct function<NSString *()> *__begin_;
    struct function<NSString *()> *__end_;
    struct __compressed_pair<std::__1::function<NSString *()>*, std::__1::allocator<std::__1::function<NSString *()>>> {
        struct function<NSString *()> *__first_;
    } __end_cap_;
} vector_d3982b75;

typedef struct vector<std::__1::pair<NSObject *const, NSObject *>, std::__1::allocator<std::__1::pair<NSObject *const, NSObject *>>> {
    struct pair<NSObject *const, NSObject *> *_field1;
    struct pair<NSObject *const, NSObject *> *_field2;
    struct __compressed_pair<std::__1::pair<NSObject *const, NSObject *>*, std::__1::allocator<std::__1::pair<NSObject *const, NSObject *>>> {
        struct pair<NSObject *const, NSObject *> *_field1;
    } _field3;
} vector_e8ae1183;

typedef struct vector<std::__1::unique_ptr<const facebook::mobile::xplat::compactdisk::Configuration, std::__1::default_delete<const facebook::mobile::xplat::compactdisk::Configuration>>, std::__1::allocator<std::__1::unique_ptr<const facebook::mobile::xplat::compactdisk::Configuration, std::__1::default_delete<const facebook::mobile::xplat::compactdisk::Configuration>>>> {
    unique_ptr_9d23342d *_field1;
    unique_ptr_9d23342d *_field2;
    struct __compressed_pair<std::__1::unique_ptr<const facebook::mobile::xplat::compactdisk::Configuration, std::__1::default_delete<const facebook::mobile::xplat::compactdisk::Configuration>>*, std::__1::allocator<std::__1::unique_ptr<const facebook::mobile::xplat::compactdisk::Configuration, std::__1::default_delete<const facebook::mobile::xplat::compactdisk::Configuration>>>> {
        unique_ptr_9d23342d *_field1;
    } _field3;
} vector_dc45f1ed;

