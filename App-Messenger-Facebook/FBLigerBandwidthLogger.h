//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "FBLigerProvidesBandwidthLogging.h"

@class NSObject<OS_dispatch_source>, NSString;

@interface FBLigerBandwidthLogger : NSObject <FBLigerProvidesBandwidthLogging>
{
    struct duration<long long, std::__1::ratio<1, 1>> _interval;
    // Error parsing type: ^{EventBase=^^?^^?{list<folly::EventBase::CobTimeout, boost::intrusive::member_hook<folly::EventBase::CobTimeout, boost::intrusive::list_member_hook<boost::intrusive::link_mode<2>, boost::intrusive::none, boost::intrusive::none>, &folly::EventBase::CobTimeout::hook>, boost::intrusive::constant_time_size<false>, boost::intrusive::none>={data_t={root_plus_size={list_node<void *>=^{list_node<void *>}^{list_node<void *>}}}}}{list<folly::EventBase::LoopCallback, boost::intrusive::member_hook<folly::EventBase::LoopCallback, boost::intrusive::list_member_hook<boost::intrusive::link_mode<2>, boost::intrusive::none, boost::intrusive::none>, &folly::EventBase::LoopCallback::hook_>, boost::intrusive::constant_time_size<false>, boost::intrusive::none>={data_t={root_plus_size={list_node<void *>=^{list_node<void *>}^{list_node<void *>}}}}}{list<folly::EventBase::LoopCallback, boost::intrusive::member_hook<folly::EventBase::LoopCallback, boost::intrusive::list_member_hook<boost::intrusive::link_mode<2>, boost::intrusive::none, boost::intrusive::none>, &folly::EventBase::LoopCallback::hook_>, boost::intrusive::constant_time_size<false>, boost::intrusive::none>={data_t={root_plus_size={list_node<void *>=^{list_node<void *>}^{list_node<void *>}}}}}{list<folly::EventBase::LoopCallback, boost::intrusive::member_hook<folly::EventBase::LoopCallback, boost::intrusive::list_member_hook<boost::intrusive::link_mode<2>, boost::intrusive::none, boost::intrusive::none>, &folly::EventBase::LoopCallback::hook_>, boost::intrusive::constant_time_size<false>, boost::intrusive::none>={data_t={root_plus_size={list_node<void *>=^{list_node<void *>}^{list_node<void *>}}}}}^{list<folly::EventBase::LoopCallback, boost::intrusive::member_hook<folly::EventBase::LoopCallback, boost::intrusive::list_member_hook<boost::intrusive::link_mode<2>, boost::intrusive::none, boost::intrusive::none>, &folly::EventBase::LoopCallback::hook_>, boost::intrusive::constant_time_size<false>, boost::intrusive::none>}{atomic<bool>=AB}{atomic<_opaque_pthread_t *>=A^{_opaque_pthread_t}}^{event_base}{unique_ptr<folly::NotificationQueue<std::__1::pair<void (*)(void *), void *> >, std::__1::default_delete<folly::NotificationQueue<std::__1::pair<void (*)(void *), void *> > > >={__compressed_pair<folly::NotificationQueue<std::__1::pair<void (*)(void *), void *> > *, std::__1::default_delete<folly::NotificationQueue<std::__1::pair<void (*)(void *), void *> > > >=^{NotificationQueue<std::__1::pair<void (*)(void *), void *> >}}}{unique_ptr<folly::EventBase::FunctionRunner, std::__1::default_delete<folly::EventBase::FunctionRunner> >={__compressed_pair<folly::EventBase::FunctionRunner *, std::__1::default_delete<folly::EventBase::FunctionRunner> >=^{FunctionRunner}}}q{SmoothLoopTime=ddq}{SmoothLoopTime=ddq}{function<void ()>={type=[12C]}^{__base<void ()>}}BQQQ{shared_ptr<folly::EventBaseObserver>=^{EventBaseObserver}^{__shared_weak_count}}I^{ExecutionObserver}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}{mutex={_opaque_pthread_mutex_t=l[40c]}}}, name: _evb
    unique_ptr_eed73377 _monitor;
    NSObject<OS_dispatch_source> *_timer;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)registerTimer;
- (void)dealloc;
- (void)reset;
- (void)readAndLog;
- (void)logData:(id)arg1;
-     // Error parsing type: @24@0:4{duration<long long, std::__1::ratio<1, 1> >=q}8^{EventBase=^^?^^?{list<folly::EventBase::CobTimeout, boost::intrusive::member_hook<folly::EventBase::CobTimeout, boost::intrusive::list_member_hook<boost::intrusive::link_mode<2>, boost::intrusive::none, boost::intrusive::none>, &folly::EventBase::CobTimeout::hook>, boost::intrusive::constant_time_size<false>, boost::intrusive::none>={data_t={root_plus_size={list_node<void *>=^{list_node<void *>}^{list_node<void *>}}}}}{list<folly::EventBase::LoopCallback, boost::intrusive::member_hook<folly::EventBase::LoopCallback, boost::intrusive::list_member_hook<boost::intrusive::link_mode<2>, boost::intrusive::none, boost::intrusive::none>, &folly::EventBase::LoopCallback::hook_>, boost::intrusive::constant_time_size<false>, boost::intrusive::none>={data_t={root_plus_size={list_node<void *>=^{list_node<void *>}^{list_node<void *>}}}}}{list<folly::EventBase::LoopCallback, boost::intrusive::member_hook<folly::EventBase::LoopCallback, boost::intrusive::list_member_hook<boost::intrusive::link_mode<2>, boost::intrusive::none, boost::intrusive::none>, &folly::EventBase::LoopCallback::hook_>, boost::intrusive::constant_time_size<false>, boost::intrusive::none>={data_t={root_plus_size={list_node<void *>=^{list_node<void *>}^{list_node<void *>}}}}}{list<folly::EventBase::LoopCallback, boost::intrusive::member_hook<folly::EventBase::LoopCallback, boost::intrusive::list_member_hook<boost::intrusive::link_mode<2>, boost::intrusive::none, boost::intrusive::none>, &folly::EventBase::LoopCallback::hook_>, boost::intrusive::constant_time_size<false>, boost::intrusive::none>={data_t={root_plus_size={list_node<void *>=^{list_node<void *>}^{list_node<void *>}}}}}^{list<folly::EventBase::LoopCallback, boost::intrusive::member_hook<folly::EventBase::LoopCallback, boost::intrusive::list_member_hook<boost::intrusive::link_mode<2>, boost::intrusive::none, boost::intrusive::none>, &folly::EventBase::LoopCallback::hook_>, boost::intrusive::constant_time_size<false>, boost::intrusive::none>}{atomic<bool>=AB}{atomic<_opaque_pthread_t *>=A^{_opaque_pthread_t}}^{event_base}{unique_ptr<folly::NotificationQueue<std::__1::pair<void (*)(void *), void *> >, std::__1::default_delete<folly::NotificationQueue<std::__1::pair<void (*)(void *), void *> > > >={__compressed_pair<folly::NotificationQueue<std::__1::pair<void (*)(void *), void *> > *, std::__1::default_delete<folly::NotificationQueue<std::__1::pair<void (*)(void *), void *> > > >=^{NotificationQueue<std::__1::pair<void (*)(void *), void *> >}}}{unique_ptr<folly::EventBase::FunctionRunner, std::__1::default_delete<folly::EventBase::FunctionRunner> >={__compressed_pair<folly::EventBase::FunctionRunner *, std::__1::default_delete<folly::EventBase::FunctionRunner> >=^{FunctionRunner}}}q{SmoothLoopTime=ddq}{SmoothLoopTime=ddq}{function<void ()>={type=[12C]}^{__base<void ()>}}BQQQ{shared_ptr<folly::EventBaseObserver>=^{EventBaseObserver}^{__shared_weak_count}}I^{ExecutionObserver}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}{mutex={_opaque_pthread_mutex_t=l[40c]}}}16{unique_ptr<proxygen::httpclient::monitor::BandwidthMonitor, std::__1::default_delete<proxygen::httpclient::monitor::BandwidthMonitor> >={__compressed_pair<proxygen::httpclient::monitor::BandwidthMonitor *, std::__1::default_delete<proxygen::httpclient::monitor::BandwidthMonitor> >=^{BandwidthMonitor}}}20, name: initWithInterval:evb:monitor:

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

