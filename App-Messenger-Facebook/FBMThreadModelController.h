//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "FBClassProvidable.h"
#import "FBMBatchThreadsDeleterDelegate.h"
#import "FBMFolderThreadsDeleterDelegate.h"
#import "FBMLeaveGroupThreadRequesterDelegate.h"
#import "FBMMailboxPreparingDelegate.h"
#import "FBMMoreThreadsFetcherDelegate.h"
#import "FBMNetworkProtocolChangeListener.h"
#import "FBMSPDeltaHandlerListener.h"
#import "FBMThreadDeleterDelegate.h"
#import "FBMThreadMuterDelegate.h"
#import "FBMThreadSetObserver.h"
#import "MNSyncProtocolCoordinatorListener.h"

@class FBMDiskThreadDeleter, FBMLocalThreadMessagesQuerier, FBMMQTTManager, FBMMailboxPreparerFactory, FBMMoreThreadsFetcher, FBMNetworkProtocolController, FBMPullToRefreshPolicyManager, FBMSPCoordinator, FBMSPDataStore, FBMSPDeltaHandlerListenerAnnouncer, FBMThreadFetchStateClearer, FBMThreadMarkService, FBMThreadPrefetchPolicyManager, FBMThreadSet, FBMessengerSyncEngineManager, FBMobileConfigFactory, FBUserSession, MNSimpleSingleThreadFetcher, MNThreadUpdateService, NSMutableArray, NSString;

@interface FBMThreadModelController : NSObject <FBMMailboxPreparingDelegate, FBMMoreThreadsFetcherDelegate, FBMThreadDeleterDelegate, FBMBatchThreadsDeleterDelegate, FBMFolderThreadsDeleterDelegate, FBMThreadMuterDelegate, FBMLeaveGroupThreadRequesterDelegate, MNSyncProtocolCoordinatorListener, FBMNetworkProtocolChangeListener, FBMSPDeltaHandlerListener, FBMThreadSetObserver, FBClassProvidable>
{
    NSMutableArray *_threads;
    FBMThreadSet *_threadSet;
    FBMThreadPrefetchPolicyManager *_prefetchPolicyManager;
    id <FBMMailboxPreparing> _mailboxPreparer;
    FBMMailboxPreparerFactory *_mailboxPreparerFactory;
    MNSimpleSingleThreadFetcher *_threadMessagesFetcher;
    id <FBProvider> _threadFetcherProvider;
    FBMMoreThreadsFetcher *_moreThreadsFetcher;
    id <FBProvider> _moreThreadsFetcherProvider;
    id <FBProvider> _threadDeleterProvider;
    id <FBProvider> _batchThreadsDeleterProvider;
    id <FBProvider> _folderThreadsDeleterProvider;
    FBMDiskThreadDeleter *_threadDiskDeleter;
    FBMMQTTManager *_mqttManager;
    FBMSPDataStore *_syncProtocolDataStore;
    NSMutableArray *_currentlyOperatingNetworkRequesters;
    BOOL _fetching;
    FBMSPCoordinator *_syncProtocolCoordinator;
    id <MNSyncProtocolCoordinatorListener> _coordinatorListenerDispatcher;
    FBMNetworkProtocolController *_networkProtocolController;
    id <FBMNetworkProtocolChangeListener> _networkProtocolChangeListenerDispatcher;
    FBMSPDeltaHandlerListenerAnnouncer *_deltaHandlerAnnouncer;
    id <FBMSPDeltaHandlerListener> _deltaHandlerListenerDispatcher;
    FBMPullToRefreshPolicyManager *_pullToRefreshPolicyManager;
    FBMThreadFetchStateClearer *_fetchStateClearer;
    id <FBProvider> _inboxSeenMarkerProvider;
    id <FBProvider> _leaveThreadRequesterProvider;
    id <FBProvider> _threadMuterProvider;
    FBMThreadMarkService *_threadMarkService;
    id <MNAuthenticationManager> _authenticationManager;
    MNThreadUpdateService *_threadUpdateService;
    unsigned int _threadListType;
    BOOL _isConfigured;
    FBUserSession *_session;
    BOOL _didLoadAllThreads;
    id <FBMThreadModelControllerDelegate> _delegate;
    FBMLocalThreadMessagesQuerier *_threadMessagesQuerier;
    FBMobileConfigFactory *_mobileConfigFactory;
    FBMessengerSyncEngineManager *_syncEngineManager;
}

@property(retain, nonatomic) FBMessengerSyncEngineManager *syncEngineManager; // @synthesize syncEngineManager=_syncEngineManager;
@property(retain, nonatomic) FBMobileConfigFactory *mobileConfigFactory; // @synthesize mobileConfigFactory=_mobileConfigFactory;
@property(retain, nonatomic) FBMLocalThreadMessagesQuerier *threadMessagesQuerier; // @synthesize threadMessagesQuerier=_threadMessagesQuerier;
@property(retain, nonatomic) NSMutableArray *threads; // @synthesize threads=_threads;
@property(nonatomic) __weak id <FBMThreadModelControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic, getter=isFetching) BOOL fetching; // @synthesize fetching=_fetching;
@property(readonly, nonatomic) BOOL didLoadAllThreads; // @synthesize didLoadAllThreads=_didLoadAllThreads;
- (void).cxx_destruct;
- (void)_refreshSyncProtocolForFetchTriggerType:(unsigned int)arg1;
- (BOOL)_shouldRefreshSyncProtocolForFetchTriggerType:(unsigned int)arg1;
- (BOOL)_shouldFQLForFetchTriggerType:(unsigned int)arg1;
- (void)threadSet:(id)arg1 didReplaceThreadWithThread:(id)arg2;
- (void)threadSet:(id)arg1 didAddThread:(id)arg2;
- (void)threadSetWillClearAllThreads:(id)arg1;
- (void)threadSet:(id)arg1 didEvictThread:(id)arg2 forReason:(unsigned int)arg3;
- (BOOL)canViewerLeaveThread:(id)arg1;
- (BOOL)isConnectedToMQTT;
- (id)threadWithThreadKey:(id)arg1;
- (id)threadWithFbId:(id)arg1;
- (id)threadForIndex:(unsigned int)arg1;
- (unsigned int)indexOfThread:(id)arg1;
- (unsigned int)threadCount;
- (void)networkProtocolDidChange:(unsigned int)arg1;
- (void)syncProtocolDeltasDidFinishProcessingWithAffectedThreadFbIds:(id)arg1;
- (void)_notifyDeltaRequestFinished;
- (void)syncProtocolDeltaRequestFailedWithError:(id)arg1;
- (void)syncProtocolDeltaRequestSucceeded;
- (void)syncProtocolQueueCreationFailedWithError:(id)arg1;
- (void)syncProtocolQueueCreationSucceeded;
- (void)_onConnectionStatusChange:(id)arg1;
- (void)_processMarkRequestComplete:(unsigned int)arg1 error:(id)arg2 thread:(id)arg3 action:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)_markThread:(id)arg1 action:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_removeCurrentlyOperatingNetworkRequester:(id)arg1;
- (void)_saveCurrentlyOperatingNetworkRequester:(id)arg1;
- (void)detachPendingThreadOperations;
- (void)markAsNotSpamThread:(id)arg1;
- (void)markAsSpamThread:(id)arg1;
- (void)leaveThread:(id)arg1;
- (void)muteThread:(id)arg1 withOption:(long long)arg2;
- (void)readThread:(id)arg1;
- (void)unreadThread:(id)arg1;
- (void)unflagThreadAsImportant:(id)arg1;
- (void)flagThreadAsImportant:(id)arg1;
- (void)unarchiveThread:(id)arg1;
- (void)archiveThread:(id)arg1;
- (void)deleteAllThreadsInThreadList:(unsigned int)arg1;
- (void)deleteThreads:(id)arg1;
- (void)deleteThread:(id)arg1;
- (void)removeThreadFromLocalCache:(id)arg1;
- (void)requester:(id)arg1 userId:(id)arg2 couldNotLeaveGroupThreadWithFbId:(id)arg3 error:(id)arg4;
- (void)requester:(id)arg1 userId:(id)arg2 didLeaveGroupThreadWithFbId:(id)arg3;
- (void)threadMuter:(id)arg1 didFailToMuteThreadWithKey:(id)arg2 withError:(id)arg3;
- (void)threadMuter:(id)arg1 didMuteThreadWithKey:(id)arg2 until:(long long)arg3;
- (void)_didFinishRemoveThreadWithFbId:(id)arg1 withReason:(unsigned int)arg2;
- (void)folderThreadsDeleter:(id)arg1 couldNotDeleteAllThreadsInThreadList:(unsigned int)arg2 withError:(id)arg3;
- (void)folderThreadsDeleter:(id)arg1 didDeleteAllThreadsInThreadList:(unsigned int)arg2;
- (void)threadDeleter:(id)arg1 didFailtoDeleteThreadsWithThreadKeys:(id)arg2 WithError:(id)arg3;
- (void)threadDeleter:(id)arg1 didDeleteThreadsWithThreadKeys:(id)arg2 failToDeleteThreadsWithThreadKeys:(id)arg3;
- (void)threadDeleter:(id)arg1 couldNotDeleteThreadSummary:(id)arg2 withError:(id)arg3;
- (void)threadDeleter:(id)arg1 didDeleteThreadSummary:(id)arg2;
- (void)moreThreadsFetcher:(id)arg1 couldNotFetchMoreThreadsWithError:(id)arg2;
- (void)moreThreadsFetcher:(id)arg1 didFetchMoreThreads:(id)arg2 didLoadAllThreads:(BOOL)arg3;
- (void)_handleCouldNotFetchThreadWithFbId:(id)arg1 error:(id)arg2;
- (void)_handleFetchedThread:(id)arg1;
- (void)threads:(id)arg1 couldNotFetchThreads:(id)arg2;
- (void)didCancelFetchThreads;
- (void)didFetchThreads:(id)arg1 didLoadAllThreads:(BOOL)arg2;
- (void)didFailToFetchAdditionalInformation;
- (void)didFetchAdditionalInformation;
- (void)forcePrefetchOnNextFetch;
- (void)fetchThreadWithFbId:(id)arg1;
- (void)_fqlRefreshThreadListWithOption:(unsigned int)arg1 fetchTriggerType:(unsigned int)arg2;
- (void)markInboxSeen;
- (void)fetchThreads:(BOOL)arg1 option:(unsigned int)arg2 fetchTriggerType:(unsigned int)arg3;
- (void)cancelFetchThreads;
- (BOOL)isLoadingMore;
- (void)fetchMoreThreads:(BOOL)arg1;
- (void)reloadThreads;
- (void)_stopObservers;
- (void)_startObservers;
- (void)configureWithThreadListType:(unsigned int)arg1;
- (void)dealloc;
- (BOOL)_isRefetchOnConnectedNotificationOn;
- (id)initWithProviderMapData:(id)arg1;
- (id)initWithThreadSet:(id)arg1 threadDeleterProvider:(id)arg2 batchThreadsDeleterProvider:(id)arg3 folderThreadsDeleterProvider:(id)arg4 threadMessagesQuerier:(id)arg5 threadPrefetchPolicyMananger:(id)arg6 threadDiskDeleter:(id)arg7 mqttManager:(id)arg8 mobileConfigFactory:(id)arg9 moreThreadsFetcherProvider:(id)arg10 syncProtocolCoordinator:(id)arg11 networkProtocolController:(id)arg12 deltaHandlerAnnouncer:(id)arg13 pullToRefreshPolicyManager:(id)arg14 fetchStateClear:(id)arg15 syncEngineManager:(id)arg16 mailboxPreparerFactory:(id)arg17 inboxSeenMarkerProvider:(id)arg18 leaveThreadRequesterProvider:(id)arg19 threadMuterProvider:(id)arg20 threadFetcherProvider:(id)arg21 authenticationManager:(id)arg22 threadMarkService:(id)arg23 threadUpdateService:(id)arg24 syncProtocolDataStore:(id)arg25 session:(id)arg26;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

