//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSArray, NSMutableData;

@interface FBProgressiveJPEG : NSObject
{
    unsigned int _srcFlag;
    unsigned int _width;
    unsigned int _height;
    unsigned int _numberOfComponentsInOutput;
    unsigned int _format;
    unsigned int _colorSpace;
    BOOL _streamBasedInstance;
    NSArray *_scanOffsets;
    BOOL _parsedHeader;
    BOOL _reachedEoF;
    struct jpeg_decompress_struct _cinfo;
    NSMutableData *_dataBuffer;
    NSMutableData *_tempBuffer;
    unsigned int _targetFlags;
    struct FBProgressiveJPEGErrorManager _jerr;
    struct mutex _decodeMutex;
    struct mutex _dataBufferMutex;
    struct mutex _tempBufferMutex;
    unsigned int _masterScan;
    unsigned int _decodeScan;
    struct Optional<FBPJPEGEncodingInfo> _encodingInfo;
}

@property(readonly, nonatomic) BOOL streamBasedInstance; // @synthesize streamBasedInstance=_streamBasedInstance;
@property(readonly, nonatomic) unsigned int colorSpace; // @synthesize colorSpace=_colorSpace;
@property(readonly, nonatomic) unsigned int format; // @synthesize format=_format;
@property(readonly, nonatomic) unsigned int numberOfComponentsInOutput; // @synthesize numberOfComponentsInOutput=_numberOfComponentsInOutput;
@property(readonly, nonatomic) unsigned int height; // @synthesize height=_height;
@property(readonly, nonatomic) unsigned int width; // @synthesize width=_width;
@property(readonly, nonatomic) unsigned int srcFlag; // @synthesize srcFlag=_srcFlag;
- (id).cxx_construct;
- (void).cxx_destruct;
- (unsigned char)numberOfScans;
@property(readonly, copy, nonatomic) NSArray *scanOffsets;
- (id)fullBinaryRepresentation;
- (id)binaryRepresentation;
- (BOOL)_readHeaderWithError:(id *)arg1;
- (void)_voidErrorHandler;
- (int)_appendBytes:(id)arg1 withError:(id *)arg2;
- (id)getBestImageFlagWithNewBytes:(id)arg1 desiredImageFlag:(unsigned int)arg2;
- (id)updateBytes:(id)arg1;
- (id)decodeIncrementalToImageFlag:(unsigned int)arg1 downscale:(BOOL)arg2 withError:(id *)arg3;
- (unsigned int)lowestImageFlagThatIsSupportedForImageFlag:(unsigned int)arg1;
- (BOOL)_prepDecodeWithData:(id)arg1 smooth:(BOOL)arg2 doFancyUpsampling:(BOOL)arg3 scan:(unsigned int)arg4 buffer:(BOOL)arg5 error:(id *)arg6;
- (id)_decodeImageScaledTargetWidth:(unsigned int)arg1 targetHeight:(unsigned int)arg2 decodeScan:(unsigned int)arg3 withError:(id *)arg4;
- (id)decodeImageWithError:(id *)arg1;
- (id)copyDataBuffer_locked;
- (id)_decodeImageWithError:(id *)arg1;
- (int)bestScan;
- (unsigned int)_completeScanOffsetInBuffer:(id)arg1;
- (unsigned int)_scanCountShouldCountEoF:(BOOL)arg1;
- (id)initForStreamWithSourceImageFlag:(unsigned int)arg1;
- (id)initForStream;
- (void)dealloc;
- (id)initWithData:(id)arg1 sourceFlag:(unsigned int)arg2;
- (id)_initForData:(id)arg1 enableStreaming:(BOOL)arg2 withSourceImageFlag:(unsigned int)arg3;

@end

